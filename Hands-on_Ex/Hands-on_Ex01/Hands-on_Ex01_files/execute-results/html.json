{
  "hash": "50d2a64b567a9cf9e7b372f3fd4fff22",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands-on Exercise 1\"\nauthor: \"Calvin Tan\"\n---\n\n\n\n# Getting Started\n\n## Install and Launch R Packages\n\nThe code chunk below uses p_load() of pacman package to check if tidyverse these packages are installed in the computer. If they are, then they will be launched into R.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(patchwork, tidyverse)\n```\n:::\n\n\n\n## Importing the Data\n\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n# Plotting Simple Graphs\n\n## A blank graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Purpose of aes() function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS))\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nAll aesthetics of a plot are specified in the aes() function call and the code above adds MATHS to the x-axis.\n\n## Plotting a Bar Chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Race Analysis {.tabset}\n\n### Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n### Code\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n### Use #\\| eval: false to show code without plotting graph\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n```\n:::\n\n\n\n### Use #\\| echo: false to plot graph without showing code\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Dot Graph\n\n### With y-axis vs without y-axis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\nd2 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL)\n\nd1 + d2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n## Plotting a Histogram\n\n### Default vs Modifying Bins and Colour\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nh1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()  \n\nh2 <- ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") \n\nh1 + h2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\nAdjusting bin size fixes the gap and adding colour makes the plot more visually appealing.\n\n### Adding Gender Sub-group\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\nUsing sub-groups allows for bivariate analysis.\n\n## Plotting a Kernel Density Estimate\n\n### Default vs Gender Sub-group\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nk1 <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density() \n\nk2 <- ggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\nk1 + k2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Box Plot\n\n### Default vs Notched\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb1 <- ggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()\n\nb2 <- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\nb1 + b2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\n\n## Plotting a Violin Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## Plotting a Scatterplot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()  \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n# Plotting More Complex Plots\n\n## Plotting a Combined Boxplot and Scatterplot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5) \n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Adding Statistical Functions to Plots\n\n### Default\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\nThe boxplots below are incomplete because the positions of the means were not shown.\n\n### Using the stat_summary() method vs Using the geom() method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ns1 <- ggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4)\n\ns2 <- ggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4)\n\ns1 + s2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\nBoth methods achieves the same result by adding a red marker to represent the mean.\n\n## Adding a Best-fit to a Scatterplot\n\n### Default\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### Best-fit Curve vs Best-fit Line\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nf1 <- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n\nf2 <- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\nf1 + f2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## Generating Trellis Plots\n\n### Using facet_wrap()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\n\n### Using facet_grid()\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\n\n# Using Coordinates\n\n## Vertical vs Horizontal Bar Chart\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb3 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\nb4 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\nb3 + b4\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n## Changing the y- and x-axis Range\n\n### Default vs Equal y- and x-axis Range\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nr1 <- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nr2 <- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\nr1 + r2\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\nThe default scatterplot on the left is slightly misleading because the y-aixs and x-axis range are not equal. The scatterplot on the right fixes both the y-axis and x-axis range to be from 0-100.\n\n# Using Themes\n\nThemes can make the plots more visually appealing.\n\n## Default vs Grey Theme\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt1 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\nt2 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\nt1 + t2\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n\n## Other Themes\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nt3 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\nt4 <- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()\n\nt3 + t4\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}