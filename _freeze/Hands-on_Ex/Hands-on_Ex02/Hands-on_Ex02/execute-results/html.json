{
  "hash": "74a62adf8dee91db8e5bdca7cfaa6c92",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"[Hands-On Exercise 2:]{style='color:DarkOrange'} Beyond ggplot2 Fundamentals\"\ndate: 2025-04-22\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n## [2.1]{style=\"color:DarkOrange\"} Overview\n\nIn this chapter, several ggplot2 extensions were used to create a more elegant and effective statistical graphics. By the end of this exercise, the following will be performed:\n\n-   Control the placement of annotation on a graph by using functions provided in ggrepel package\n-   Create professional publication quality figure by using functions provided in ggthemes and hrbrtheme packages\n-   Plot composite figure by combing ggplot2 graphs by using patchwork package\n\n## [2.2]{style=\"color:DarkOrange\"} Getting started\n\n### [2.2.1]{style=\"color:DarkOrange\"} Install and Load the Required Libraries\n\nIn this exercise, besides tidyverse (Explored in [Hands-on Exercised 1](https://isss608-ay2024-25t3.netlify.app/hands-on_ex/hands-on_ex01/hands-on_ex01)), four R packages will be used. They are:\n\n1.  **ggrepel:** an R package providing geoms for ggplot2 to repel overlapping text labels\n2.  **ggthemes:** an R package providing some extra themes, geoms, and scales for ggplot2\n3.  **hrbrthemes:** an R package providing typography-centric themes and theme components for ggplot2\n4.  **patchwork:** an R package for preparing composite figure created using ggplot2\n\nCode chunk below will be used to check if these packages have been installed and also load them onto my working R environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse,stringr)\n```\n:::\n\n\n\n### [2.2.2]{style=\"color:DarkOrange\"} Importing Data\n\nFor the purpose of this exercise, a data file called *`Exam_data`* will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\n\nThe code chunk below imports exam_data.csv into R environment by using [*`read_csv()`*](https://readr.tidyverse.org/reference/read_delim.html) function of [**readr**](https://readr.tidyverse.org/) package. **readr** is one of the tidyverse package.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_data <- read_csv(\"data/Exam_data.csv\")\n```\n:::\n\n\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\n-   **Categorical Attributes:** ID, CLASS, GENDER and RACE.\n-   **Continuous Attributes:** MATHS, ENGLISH and SCIENCE.\n\n## [2.3]{style=\"color:DarkOrange\"} Beyond ggplot Annotation: ggrepel\n\nOne of the challenge in plotting statistical graph is annotation, especially with large number of data points.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm,\n              linewidth=0.5) +\n  geom_label(aes(label = ID),\n             hjust = .5,\n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n```\n:::\n\n\n:::\n\n[**ggrepel**](https://ggrepel.slowkow.com/) ![](/Hands-on_Ex/Hands-on_Ex02/image/ggrepel_logo.jpg){width=\"60\"} is an extension of **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping text as in the examples below.\n\n![](/Hands-on_Ex/Hands-on_Ex02/image/ggrepel.jpg){fig-align=\"center\" width=\"800\"}\n\nWe simply replace `geom_text()` by [`geom_text_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html) and `geom_label()` with [`geom_label_repel()`](https://ggrepel.slowkow.com/reference/geom_text_repel.html).\n\n### [2.3.1]{style=\"color:DarkOrange\"} Working with ggrepel\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n::: callout-tip\nUsing the Repel code modifies the Default Plot such that only non-overlapping labels are shown and the Best-fit Curve is visible now as compared to being blocked by all the labels in the Default Plot.\n:::\n\n::: callout-note\nThe code uses patchwork for easier comparisons between graphs. Further explanation on how to create it can be found in [Section 2.5.1](https://r4va.netlify.app/chap02#creating-composite-graphics-pathwork-methods)\n:::\n\n::: panel-tabset\n## Default Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm,\n              linewidth=0.5) +\n  geom_label(aes(label = ID),\n             hjust = .5,\n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"Default\")\n```\n:::\n\n\n\n## With Repel Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  geom_label_repel(aes(label = ID),\n                   fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"With Repel\")\n```\n:::\n\n\n:::\n\n## [2.4]{style=\"color:DarkOrange\"} Beyond ggplot2 Themes\n\nggplot2 comes with eight built-in themes. They are:\n\n`theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()` and `theme_void()`\n\nIn the example below, a plot of \"Distribution of Maths Scores\" was done using various themes.\n\n::: panel-tabset\n## Default Vs Gray Vs Grey\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n## Other Built-in Themes 1\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n## Other Built-in Themes 2\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_gray() # Change this to different the themes\n```\n:::\n\n\n:::\n\n::: callout-tip\nThe Default, Gray and Grey themes are all the same theme! The default is theme_gray() and theme_grey() is an alias to theme_gray().\n:::\n\nRefer to this [link](https://ggplot2.tidyverse.org/reference/#themes) to learn more about ggplot2 `Themes`\n\n### [2.4.1]{style=\"color:darkorange\"} Working with ggtheme Packages\n\n[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/) provides [**ggplot2 themes**](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tuffe, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), 'Stata', 'Excel', and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.\n\nIn the example below, a plot of \"Distribution of Maths Scores\" was done using various themes.\n\n::: panel-tabset\n## ggtheme 1\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## ggtheme 2\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n## ggtheme 3\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist() # Change this to different themes\n                    # ggtheme2 top right is theme_solid\n```\n:::\n\n\n:::\n\nIt also provides some extra geoms and scales for ggplot2. Consult [this vignette](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) to learn more.\n\n### [2.4.2]{style=\"color:darkorange\"} Working with hrbrthemes Package\n\n[**hrbrthemes**](https://cran.r-project.org/package=hrbrthemes) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult [this vignette](https://hrbrmstr.github.io/hrbrthemes/articles/why_hrbrthemes.html) to learn more.\n\nIn the example below, a plot of \"Distribution of Maths Scores\" was done using various settings.\n\n::: panel-tabset\n## Default theme vs Default theme_ipsum()\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n## Default theme_ipsum() vs Modified theme_ipsum()\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_text_size = 18,\n              base_size = 15,\n              grid = \"Y\") # Default has no theme, and Default theme_ipsum has no extra parameters\n```\n:::\n\n\n:::\n\n::: callout-tip\n## What can we learn from the code chunk above?\n\n-   `axis_title_size` argument is used to increase the font size of the axis title to 18\n-   `base_size` argument is used to increase the default axis label to 15\n-   `grid` argument is used to remove the x-axis grid lines\n:::\n\n## [2.5]{style=\"color:darkorange\"} Beyond Single Graph\n\nIt is not unusual that multiple graphs are required to tell a compelling visual story. There are several ggplot2 extensions provide functions to compose figure with multiple graphs. In this section, composite plots will be created by combining multiple graphs. Three statistical graphics will be created using the code chunk below.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n```\n:::\n\n\n:::\n\nNext\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np2 <- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n```\n:::\n\n\n:::\n\nLastly, we will draw a scatterplot for English score versuss Maths score as shown below:\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 <- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(str_wrap(\"English scores versus Maths scores for Primary 3\", width = 30)) +\n  theme(plot.title = element_text(hjust = 0.5, size = 15, face = \"bold\"))\n```\n:::\n\n\n:::\n\n### [2.5.1]{style=\"color:darkorange\"} Creating Composite Graphics: patchwork Methods\n\nThere are several ggplot2 extension's functions support the needs to prepare composite figure by combining several graphs such as [grid.arrange()](https://cran.r-project.org/web/packages/gridExtra/vignettes/arrangeGrob.html) of **gridExtra** package and [plot_grid()](https://wilkelab.org/cowplot/reference/plot_grid.html) of [**cowplot**](https://wilkelab.org/cowplot/) package. The ggplot2 extension extension called [**patchwork**](https://patchwork.data-imaginist.com/) ![](/Hands-on_Ex/Hands-on_Ex02/image/patchwork.png){width=\"60\"} is specially designed for combining separate ggplot2 graphs into a single figure.\n\nPatchwork package has a very simple syntax for creating layouts super easily. The general syntax is:\n\n-   Two-Column Layout using the Plus sign \"+\"\n-   Parenthesis \"()\" to create a subplot group\n-   Two-Row Layout using the Division design \"/\"\n\n### [2.5.2]{style=\"color:darkorange\"} Combing Two ggplot2 Graphs\n\nThe figure in the tabset below shows a composite of two histograms created using patchwork. The code and syntax used to create the plot simple!\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 + p2\n```\n:::\n\n\n:::\n\n### [2.5.3]{style=\"color:darkorange\"} Combining Three ggplot2 Graphs\n\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n-   \"/\" operator to stack two ggplot2 graphs\n-   \"\\|\" operator to place the plots beside each other\n-   \"()\" operator to define the sequence of the plotting\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(p1 / p2) | p3\n```\n:::\n\n\n:::\n\nTo learn more, refer to [Plot Assembly](https://patchwork.data-imaginist.com/articles/guides/assembly.html).\n\n### [2.5.4]{style=\"color:darkorange\"} Creating a Composite Figure with Tagging\n\nIn order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n((p1 / p2) | p3) +\n  plot_annotation(tag_levels = 'I')\n```\n:::\n\n\n:::\n\n::: callout-tip\nTake note that the tagging goes from top left -\\> btm left -\\> top right -\\> btm right!\n:::\n\n### [2.5.5]{style=\"color:darkorange\"} Creating Figure with Insertion\n\n**Patchwork** allows more than just providing functions to place plots next to each other based on the provided layout. With [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html), one or several plots or graphic elements can be placed freely on top or below another plot.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np3 + inset_element(p2,\n                   left = 0.02,\n                   bottom = 0.7,\n                   right = 0.5,\n                   top = 1)\n```\n:::\n\n\n:::\n\n### [2.5.6]{style=\"color:darkorange\"} Creating a Composite Figure by Using patchwork and ggtheme\n\nThe figure below is created by combining patchwork and theme_economist() of [ggthemes package](https://isss608-ay2024-25t3.netlify.app/hands-on_ex/hands-on_ex02/hands-on_ex02#beyond-ggplot2-themes) discussed earlier.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Hands-on_Ex02_files/figure-html/unnamed-chunk-33-1.png){width=1152}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npatchwork <- (p1 / p2) | p3 \npatchwork & theme_economist()\n```\n:::\n\n\n:::\n\n## [2.6]{style=\"color:darkorange\"} References\n\n-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)\n-   [ggrepel](https://ggrepel.slowkow.com/)\n-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)\n-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/) Link is broken\n-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/) Link is broken\n-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)\n-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)\n",
    "supporting": [
      "Hands-on_Ex02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}