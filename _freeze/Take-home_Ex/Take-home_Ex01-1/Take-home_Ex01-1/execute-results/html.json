{
  "hash": "3f4410411eec148b71f121b98ac264f2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"[Take-Home Exercise 1-1:]{style='color:DarkOrange'} Demographic Structures and Distribution of Singapore in 2024\"\ndate: 2025-04-29\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n\n# [1-1:]{style=\"color:DarkOrange\"} 1 Overview\n\nThis exercise will be composed of two phases:\n\n-   **Phase 1**: Designing my own data visualisation.\n-   **Phase 2**: Selecting one submission provided by my classmate, identifying three good design principles and critiquing three areas for further improvement. Based on these feedbacks, I will prepare the makeover version of their data visualisation.\n\nThis page will focus on **Phase 1** of this exercise and [Take-Home Exercise 1-2](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01-2/take-home_ex01-2) will cover **Phase 2**.\n\n## [1-1:]{style=\"color:DarkOrange\"} 1.1 Background\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\n\nAssuming the role of the graphical editor of the media company, I am tasked to prepare at most three data visualisation for this article.\n\n::: callout-tip\nCreating enlightening and truthful data visualizations involves focusing on accuracy, transparency, and the ability to effectively communicate insights. It is about presenting data in a way that is both informative and aesthetically pleasing, ensuring the audience can grasp the information quickly and accurately.\n:::\n\nThe data should also be processed by using appropriate *tidyverse* family of packages and the data visualisation must be prepared using *ggplot2* and its extensions. In addition, no interactive data visualisation are required.\n\n## [1-1:]{style=\"color:DarkOrange\"} 1.2 Data Source\n\nThe data for this exercise is the [Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data) dataset, retrieved by [Department of Statistics, Singapore (DOS)](https://www.singstat.gov.sg/).\n\n## [1-1:]{style=\"color:DarkOrange\"} 1.3 Install and Load the Required Libraries\n\nThese, five R packages will be used for the preparation of this exercise:\n\n1.  **tidyverse:** A collection of R packages designed for data science. It includes packages like *dplyr*, *ggplot2*, *tidyr*, and *readr* that simplify data wrangling and visualization.\n2.  **patchwork:** An R package that allows users to easily combine multiple *ggplot2* plots into a single composite layout, useful for comparative visual analysis.\n3.  **ggthemes:** This package adds extra themes, scales, and geoms to *ggplot2*, making it easier to apply distinct themes to plots.\n4.  **knitr:** A reporting package that integrates R code with markdown, enabling dynamic report generation in formats such as HTML, PDF, and Word, often used with R Markdown and Quarto.\n5.  **cowplot:** An extension of *ggplot2* that simplifies plot arrangement and annotation. It provides functions like *ggdraw()* and *draw_plot()* for overlaying and aligning plots, often used for fine-tuned visual layouts.\n\nCode chunk below will be used to check if these packages have been installed and also load them onto the working R environment.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, patchwork, ggthemes, knitr, cowplot)\n```\n:::\n\n\n\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 1.4 Importing Data\n\nFor the purpose of this exercise, a data file called *respopagesex2024* will be used. It consists of data about Singapore Residents by Planning Area / Subzone, categorised by a Single Year of Age and Sex,for June 2024. It is in a csv file format.\n\nThe code chunk below imports *respopagesex2024.csv* into R environment by using *read_csv()* function of *readr* package (under *tidyverse*).\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n\n\n:::\n\n# [1-1:]{style=\"color:DarkOrange\"} 2 Exploratory Data Analysis (EDA)\n\nThere are a total of six attributes in the *sg_data* tibble data frame. Four of them are categorical data type and the other two are in continuous data type.\n\n::::: columns\n::: {.column width=\"50%\"}\n### Categorical Variables\n\n-   **PA**: Planning Area\n-   **SZ**: Subzone\n-   **Age**: Single Year of Age\n-   **Sex**\n:::\n\n::: {.column width=\"50%\"}\n### Continuous Variables\n\n-   **Pop**: Resident Count\n-   **Time**: Time / Period\n:::\n:::::\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(sg_data, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         PA          SZ         Age         Sex         Pop        Time \n\"character\" \"character\" \"character\" \"character\"   \"numeric\"   \"numeric\" \n```\n\n\n:::\n:::\n\n\n\n:::\n\nThe first 10 rows of the data are displayed using *kable* (under *knitr*) to get a basic understanding of the data.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|PA         |SZ                     |Age |Sex     | Pop| Time|\n|:----------|:----------------------|:---|:-------|---:|----:|\n|Ang Mo Kio |Ang Mo Kio Town Centre |0   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |0   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |1   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |1   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |2   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |2   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |3   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |3   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |4   |Males   |  30| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |4   |Females |  10| 2024|\n\n\n:::\n:::\n\n\n\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(sg_data, 10))\n```\n:::\n\n\n\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 2.1 Checking for duplicates\n\nBefore proceeding further with the EDA, a check for duplicated records was done using *group_by_all()* and filtering rows with more than 1 count. The results of the code below confirms that there were no duplicated records.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- sg_data %>% \n  group_by_all() %>% \n  filter(n()>1)\n  \nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 6\n# Groups:   PA, SZ, Age, Sex, Pop, Time [0]\n# ℹ 6 variables: PA <chr>, SZ <chr>, Age <chr>, Sex <chr>, Pop <dbl>,\n#   Time <dbl>\n```\n\n\n:::\n:::\n\n\n\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 2.2 Fixing Age Column Inconsistency\n\nAlthough there were no duplicated records, the earlier EDA of variable types and the data table revealed that the **Age** column, which appears to be a continuous variable, was incorrectly recognised as a categorical variable.\n\nUpon further analysis of the **Age** column using the code below, it was found to contain 91 unique values. These values range from 0 to 89 and are numeric in nature, but the last value is a string, *\"90_and_Over\"*. This string caused the **Age** column to be recognised as a categorical variable instead of a continuous one.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sg_data$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"0\"           \"1\"           \"2\"           \"3\"           \"4\"          \n [6] \"5\"           \"6\"           \"7\"           \"8\"           \"9\"          \n[11] \"10\"          \"11\"          \"12\"          \"13\"          \"14\"         \n[16] \"15\"          \"16\"          \"17\"          \"18\"          \"19\"         \n[21] \"20\"          \"21\"          \"22\"          \"23\"          \"24\"         \n[26] \"25\"          \"26\"          \"27\"          \"28\"          \"29\"         \n[31] \"30\"          \"31\"          \"32\"          \"33\"          \"34\"         \n[36] \"35\"          \"36\"          \"37\"          \"38\"          \"39\"         \n[41] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[46] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[51] \"50\"          \"51\"          \"52\"          \"53\"          \"54\"         \n[56] \"55\"          \"56\"          \"57\"          \"58\"          \"59\"         \n[61] \"60\"          \"61\"          \"62\"          \"63\"          \"64\"         \n[66] \"65\"          \"66\"          \"67\"          \"68\"          \"69\"         \n[71] \"70\"          \"71\"          \"72\"          \"73\"          \"74\"         \n[76] \"75\"          \"76\"          \"77\"          \"78\"          \"79\"         \n[81] \"80\"          \"81\"          \"82\"          \"83\"          \"84\"         \n[86] \"85\"          \"86\"          \"87\"          \"88\"          \"89\"         \n[91] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n\n:::\n\nTo address this issue, the code below converts the string *\"90_and_Over\"* into the numerical value *90,* and subsequently ensures that the **Age** column is treated as a numeric variable.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data$Age <- as.character(sg_data$Age)\n\nsg_data$Age[sg_data$Age == \"90_and_Over\"] <- \"90\"\n\nsg_data$Age <- as.numeric(sg_data$Age)\n```\n:::\n\n\n\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 2.3 Binning Age Column\n\nEven after fixing the inconsistent data type in the **Age** column, there were still 91 unique values, which will be too many for meaningful analysis. Therefore, the **Age** column will be binned into the following categorise using the code below:\n\n-   **Young**: Singapore residents aged 0 to 24\n-   **Economically_Active**: Singapore residents aged 25 to 64\n-   **Aged**: Singapore residents aged 65 and above\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data$Age_Group <- cut(\n  sg_data$Age,\n  breaks = c(-1, 24, 64, Inf),\n  labels = c(\"Young\", \"Economically_Active\", \"Aged\"),\n  right = TRUE\n)\n\nunique(sg_data$Age_Group) # shows that the binning works\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Young               Economically_Active Aged               \nLevels: Young Economically_Active Aged\n```\n\n\n:::\n:::\n\n\n\n:::\n\nAfter completing the data manipulation steps described in earlier, the resulting data is shown in the table below.\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|PA         |SZ                     | Age|Sex     | Pop| Time|Age_Group |\n|:----------|:----------------------|---:|:-------|---:|----:|:---------|\n|Ang Mo Kio |Ang Mo Kio Town Centre |   0|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   0|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   1|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   1|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   2|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   2|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   3|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   3|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   4|Males   |  30| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   4|Females |  10| 2024|Young     |\n\n\n:::\n:::\n\n\n\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(sg_data, 10))\n```\n:::\n\n\n\n:::\n\n# [1-1:]{style=\"color:DarkOrange\"} 3 Visualisations\n\n## [1-1:]{style=\"color:DarkOrange\"} 3.1 Population Across Planning Areas by Sex\n\nThis section examines the distribution of Singapore's **Population** across **Planning Areas**, categorised by **Sex**, to better understand the demographic patterns of different regions.\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.1.1 Feature Engineering\n\nIn this step, the following features were added to support in the visual analysis later:\n\n-   The dataset *sg_data* was grouped by **PA** and **Sex** to calculate the **Pop** for each subgroup using *summarise(Pop = sum(Pop))*.\n-   A second group by **PA** was performed to calculate the **Total** population per **PA**, stored in a new column **Total**.\n-   Rows with a **Total** population of 0 were removed using *filter(Total \\> 0)* to eliminate empty **PAs** from the analysis.\n-   The resulting data structure, *demography_sex*, now contains the **Total** population broken down by **Sex** and **PA**, along with overall population **Total** per **PA**.\n\nThe code below performs the transformation necessary in preparation for visual analysis, enabling the comparison of population distribution between **Males** and **Females** across different **PAs**.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_sex <- sg_data %>%\n  group_by(PA, Sex) %>%\n  summarise(Pop = sum(Pop)) %>%\n  group_by(PA) %>%\n  mutate(Total = sum(Pop))\n\ndemography_sex <- demography_sex %>%\n  filter(Total > 0)\n\nkable(head(demography_sex, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Sex     |    Pop|  Total|\n|:-----------|:-------|------:|------:|\n|Ang Mo Kio  |Females |  84210| 160450|\n|Ang Mo Kio  |Males   |  76240| 160450|\n|Bedok       |Females | 143770| 277660|\n|Bedok       |Males   | 133890| 277660|\n|Bishan      |Females |  45640|  88210|\n|Bishan      |Males   |  42570|  88210|\n|Bukit Batok |Females |  86070| 168390|\n|Bukit Batok |Males   |  82320| 168390|\n|Bukit Merah |Females |  78160| 149390|\n|Bukit Merah |Males   |  71230| 149390|\n\n\n:::\n:::\n\n\n\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.1.2 Methods and Explanation\n\nThe aim is to create a detailed view of **Population** distribution by **Sex** across Singapore’s **Planning Areas**. These were the steps taken to create a stacked horizontal bar chart for visualisation:\n\n[Horizontal Bar Chart s1:]{.underline}\n\n-   To create a horizontal bar chart with population **Total** in descending order, the **PA** was initially ordered by ascending **Total** using the *pa_order()* vector. Although the factor levels were arranged in ascending order, the use of *coord_flip()* in the plot reverses the axis orientation, resulting in **Total** being displayed in descending order as intended.\n-   *ggplot()* was used with *geom_bar() (with stat = \"identity\" and position = \"stack\")* to create a stacked horizontal bar chart (s1), displaying the **Pop** by **Sex** across **PA**.\n-   *theme_minimal()* was applied for a clean visual style, and *labs()* with *ggtitle()* were used to customise the axis labels and plot title.\n-   *scale_fill_manual()* was used to assign distinct colours to **Males and Females** and to control the legend order, explicitly setting it as: Males → Females instead of the reversed order if left as default.\n-   *scale_y_continuous(labels = scales::comma)* was used to show numerical numbers rather than the scientific notation.\n-   *theme(legend.position = \"bottom\")* was used to move the legend position from the right to the bottom to allow the plot to be wider.\n\n[Zoomed-in Plot s2:]{.underline}\n\n-   A zoomed-in plot (s2) shows the bottom 10 **PA** and will be embedded into the main plot later. This method makes it easier to examine less populous **PAs** in the same figure.\n-   Since the zoomed-in plot (s2) will be overlaid on top of the main chart (s1), *theme_test()* was used to provide a contrast with the main s1 plot in the background.\n-   The legend and background was removed using *theme()* and the axis titles were removed using *labs()* for a cleaner plot.\n\n[Zoom Rectangle:]{.underline}\n\n-   This was created using *cowplot()* to be a transparent dotted line rectangle to allow highlighting of the zoomed-in location.\n\n[Overlaid Plots:]{.underline}\n\n-   *ggdraw()* was used to create an empty canvas, and *draw_plot()* was used to overlay s1, s2, and the zoom rectangles. All these functions are a part of the *cowplot* package.\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.1.3 Plots and Analysis\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-13-1.png){width=768}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npa_order <- demography_sex %>%\n  distinct(PA, Total) %>%\n  arrange(Total) %>%\n  pull(PA)\n\ndemography_sex <- demography_sex %>%\n  mutate(\n    PA = factor(PA, levels = pa_order)\n  )\n\ns1 <- ggplot(data = demography_sex, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Population\",\n    fill = \"Sex\"\n  ) +\n  ggtitle(\"Population Across Planning Areas by Sex\") +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  scale_y_continuous(labels = scales::comma) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\ndemography_sex_bottom10 <- demography_sex %>%\n  filter(PA %in% head(pa_order, 10))\n\ns2 <- ggplot(data = demography_sex_bottom10, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_test() +\n  labs(\n    x = NULL,\n    y = NULL\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\nzoom_rect <- ggplot() +\n  geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1),\n            fill = NA, color = \"black\", linetype = \"dashed\") +\n  theme_void()\n\nggdraw() +\n  draw_plot(s1, 0, 0, 1, 1) +\n  draw_plot(s2, 0.4, 0.185, 0.56, 0.25) +\n  draw_plot(zoom_rect, 0.005, 0.155, 0.3, 0.206) +\n  draw_plot(zoom_rect, 0.37, 0.18, 0.62, 0.27) # (left , btm, right, top)\n```\n:::\n\n\n\n:::\n\n::::: columns\n::: {.column width=\"50%\"}\n#### Most Populated\n\n-   Tampines\n-   Bedok\n-   Sengkang\n-   Jurong West\n-   Woodlands\n:::\n\n::: {.column width=\"50%\"}\n#### Least Populated\n\n-   Seletar\n-   Museum\n-   Western Water Catchment\n-   Sungei Kadut\n-   Orchard\n:::\n:::::\n\n::: callout-tip\n## Insights\n\n##### Gender Ratio\n\n-   The **Sex** distribution is generally balanced across all **PAs**.\n\n##### Residential Areas\n\n-   The most populated **PAs** consists of a mix of mature estates (e.g., Tampines, Bedok) and newer estates (e.g, Sengkang, Jurong West, Woodlands) (Refer to [Section 5 Appendix: Singapore's Estate Classification](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#singapores-estate-classification)\n-   This reflects the government of Singapore's success in transforming newer towns or underutilised land into well-developed residential hubs that are comparable to existing mature estates.\n\n##### Commercial / Industrial /Military Areas\n\n-   The least populated **PAs** are primarily non-residential zones such as:\n    -   Commercial: Museum, Orchard\n    -   Industrial: Sungei Kadut\n    -   Military/Nature: Seletar (air base), Western Water Catchment\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.2.4 Reflections\n\n::: callout-important\n## Reflections\n\nThe *ggforce* package includes the *facet_zoom()* function that allows for zooming in on a part of a plot and automatically draws a box to indicate the zoomed region.\n\nHowever, *facet_zoom()* does not support zooming in on discrete scales like the bottom 10 **PAs** in **Pop**. Therefore, I had manually created a separate zoomed-in plot (s2) and the zoom rectangles to highlight the region that will be zoomed-in.\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 3.2 Percentage of Age Groups by Planning Areas\n\nThis visualisation aims to show the percentage distribution of **Age Groups** (Young, Economically_Active and Aged) across **Planning Areas**. This will provide insights into how Singapore residents, in different stages of life, were distributed across Singapore.\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.2.1 Feature Engineering\n\nThe following steps were done in preparation for visual analysis:\n\n-   The dataset *sg_data* was grouped by **PA** and **Age_Group** to calculate the **Pop** for each subgroup using *summarise(Pop = sum(Pop))*.\n-   A second group by **PA** was performed to compute the **Total** population per **PA**, stored in a new column **Total** using *mutate(Total = sum(Pop))*.\n-   Rows with a **Total** population of 0 were removed using *filter(Total \\> 0)* to eliminate empty **PAs** from the analysis.\n-   The data was then transformed to compute percentage composition of each **Age Group** within each **PA** using *mutate(Pct_Age_Group = (Pop / Total) \\* 100)*.\n-   Percentages of **Age Group** were rounded to 1 decimal place using *mutate(across(Pct_Age_Group, \\~ round(.x, 1)))*.\n\nThe code below transforms the data and results in the final output *pct_demography_age*. It contains the percentage of **Age Group** (Young, Economically Active) for each **PA**.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_age <- sg_data %>%\n  group_by(PA, Age_Group) %>%\n  summarise(Pop = sum(Pop)) %>%\n  group_by(PA) %>%\n  mutate(Total = sum(Pop))\n\ndemography_age <- demography_age %>%\n  filter(Total > 0)\n\npct_demography_age <- demography_age %>%\n  mutate(Pct_Age_Group = (Pop / Total) * 100) %>%\n  select(PA, Age_Group, Pct_Age_Group)\n\npct_demography_age <- pct_demography_age %>%\n  mutate(across(Pct_Age_Group, ~ round(.x, 1)))\n\nkable(head(pct_demography_age, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Age_Group           | Pct_Age_Group|\n|:-----------|:-------------------|-------------:|\n|Ang Mo Kio  |Young               |          20.1|\n|Ang Mo Kio  |Economically_Active |          54.6|\n|Ang Mo Kio  |Aged                |          25.3|\n|Bedok       |Young               |          21.8|\n|Bedok       |Economically_Active |          55.5|\n|Bedok       |Aged                |          22.7|\n|Bishan      |Young               |          22.6|\n|Bishan      |Economically_Active |          55.4|\n|Bishan      |Aged                |          21.9|\n|Bukit Batok |Young               |          24.8|\n\n\n:::\n:::\n\n\n\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.2.2 Methods and Explanation\n\nTo visualize the percentage distribution of **Age Groups** across **Planning Areas**, the following plotting steps were performed:\n\n-   The **PA** order in this plot was assigned to match the order used in [Section 3.1.3: Population Across Planning Areas by Sex](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#plots-and-analysis), allowing for easy comparisons between them.\n-   The **Age Group** variable was explicitly ordered as **Aged** → **Economically Active** → **Young** so that the stacked bars chart will be in the reversed order after *coord_flip()*.\n-   The legend position was set to be at the bottom using *theme(legend.position = \"bottom\")*.\n-   The remaining functions have been explained in the plot above in [Section 3.1.2: Population Across Planning Areas by Sex](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#methods-and-explanation).\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.2.3 Plots and Analysis\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-16-1.png){width=768}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npct_demography_age <- pct_demography_age %>%\n  mutate(PA = factor(PA, levels = pa_order),\n         Age_Group = factor(Age_Group, levels = c(\"Aged\", \"Economically_Active\", \"Young\")))\n\nggplot(data = pct_demography_age, \n       aes(x = PA, y = Pct_Age_Group, fill = Age_Group)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Percentage\",\n    fill = \"Age Group\"\n  ) +\n  ggtitle(\"Percentage of Age Groups by Planning Area\") +\n  scale_fill_manual(\n    values = c(\n      \"Young\" = \"#DDCC77\",\n      \"Economically_Active\" = \"#44AA99\",\n      \"Aged\" = \"#AA4499\"\n    ),\n    breaks = c(\"Young\", \"Economically_Active\", \"Aged\")\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n```\n:::\n\n\n\n:::\n\n##### Highest concentrations of **Young** residents (0 to 24)\n\n-   Punggol\n-   Sembawang\n-   Sengkang\n    -   Higher concentrations of **Economically Active** and lower proportions of **Aged**\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoung_data <- pct_demography_age %>%\n  filter(Age_Group == \"Young\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(young_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 23.15714\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(young_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA                      |Age_Group | Pct_Age_Group|\n|:-----------------------|:---------|-------------:|\n|Western Water Catchment |Young     |          40.7|\n|Changi                  |Young     |          31.7|\n|Punggol                 |Young     |          31.4|\n|Southern Islands        |Young     |          29.5|\n|Sembawang               |Young     |          29.0|\n|Singapore River         |Young     |          28.6|\n|Bukit Timah             |Young     |          28.5|\n|Sengkang                |Young     |          28.5|\n|Tanglin                 |Young     |          27.2|\n|Newton                  |Young     |          26.8|\n\n\n:::\n:::\n\n\n\n\nThese consists of newer non-mature estates (Refer to [Section 5 Appendix: Singapore's Estate Classification](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#singapores-estate-classification) such as Punggol, Sengkang, and Sembawang, which are actively being developed by the Singapore government. These are particularly appealing to newly married couples, since many of the new Build-To-Order (BTO) projects in these areas are designed for budget-conscious young families. These households will tend to include more **Economically Active** individuals as well.\n:::\n\n##### Extremely high proportions of **Economically Active** residents (25 to 64)\n\n-   Museum\n-   Downtown Core\n-   Orchard\n    -   Low proportions of **Young** and **Aged** population\n    -   Museum and Seletar have no recorded **Aged** population\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neconomically_active_data <- pct_demography_age %>%\n  filter(Age_Group == \"Economically_Active\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(economically_active_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60.57619\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(economically_active_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA               |Age_Group           | Pct_Age_Group|\n|:----------------|:-------------------|-------------:|\n|Museum           |Economically_Active |          96.2|\n|Seletar          |Economically_Active |          85.7|\n|Downtown Core    |Economically_Active |          80.3|\n|Orchard          |Economically_Active |          73.6|\n|Tengah           |Economically_Active |          68.5|\n|Singapore River  |Economically_Active |          63.3|\n|Sungei Kadut     |Economically_Active |          63.3|\n|Southern Islands |Economically_Active |          62.0|\n|River Valley     |Economically_Active |          60.7|\n|Choa Chu Kang    |Economically_Active |          60.2|\n\n\n:::\n:::\n\n\n\n\nThese patterns suggests that such areas are primarily dominated by working adults and may serve commercial or business purposes (Museum, Downtown Core, and Orchard), or military functions (Seletar and Tengah air bases).\n:::\n\n##### Highest concentration of **Aged** residents (65 and above)\n\n-   Ang Mo Kio\n-   Bukit Merah\n-   Kallang\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naged_data <- pct_demography_age %>%\n  filter(Age_Group == \"Aged\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(aged_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16.27619\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(aged_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Age_Group | Pct_Age_Group|\n|:-----------|:---------|-------------:|\n|Outram      |Aged      |          28.8|\n|Ang Mo Kio  |Aged      |          25.3|\n|Bukit Merah |Aged      |          24.5|\n|Rochor      |Aged      |          24.5|\n|Jurong East |Aged      |          23.8|\n|Kallang     |Aged      |          23.5|\n|Serangoon   |Aged      |          22.9|\n|Bedok       |Aged      |          22.7|\n|Queenstown  |Aged      |          22.2|\n|Toa Payoh   |Aged      |          22.1|\n\n\n:::\n:::\n\n\n\n\nThese are mainly mature estates with a higher proportion of **elderly** residents, many of whom have lived there since their younger years.\n:::\n\n::: callout-tip\n## Insights\n\n##### Central Districts (e.g., Museum, Downtown Core, Orchard):\n\n-   Have a high proportion of **Economically Active** residents, with relatively low concentration of **Youth** and **Aged**.\n-   These are business or commercial hubs.\n\n##### Mature Estates (e.g., Ang Mo Kio, Bukit Merah, Kallang):\n\n-   Show a more balanced demographic distribution, though with a noticeably **Ageing** population.\n\n##### New Estates (e.g., Punggol, Sembawang, Sengkang):\n\n-   Skew heavily toward the **Young** and **Economically Active**, with fewer **Aged** residents.\n-   This reflects their appeal to new families, likely due to the availability and price of new housing developments.\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.2.4 Reflections and Initial Workings\n\n::: callout-important\n## Reflections\n\nI initially considered using tabs to compare the graphs separately, but later realised that by restructuring the data, all three graphs could be combined into a single stacked bar chart. This thought led to creating the final plot presented above.\n:::\n\n#### Feature Engineering\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography <- sg_data %>%\n  group_by(PA, Age_Group) %>%\n  summarise(Pop = sum(Pop, na.rm = TRUE)) %>%\n  pivot_wider(\n    names_from = Age_Group,\n    values_from = Pop,\n    values_fill = 0\n  ) %>%\n  mutate(Total = Young + Economically_Active + Aged)\n\ndemography <- demography %>%\n  filter(Total > 0)\n\npct_demography <- demography %>%\n  mutate(\n    Pct_Young = (Young / Total) * 100,\n    Pct_Economically_Active = (Economically_Active / Total) * 100,\n    Pct_Aged = (Aged / Total) * 100\n  ) %>%\n  select(PA, Pct_Young, Pct_Economically_Active, Pct_Aged)\n\npct_demography <- pct_demography %>%\n  mutate(across(starts_with(\"pct\"), ~ round(.x, 1)))\n```\n:::\n\n\n\n:::\n\n#### Plots and Reflections\n\n::: panel-tabset\n## Young\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n\n## Economically Active\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n## Aged\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npct_demography$PA <- factor(pct_demography$PA, levels = rev(sort(unique(pct_demography$PA))))\n\nggplot(data = pct_demography, \n       aes(x = PA, y = Pct_Young)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",  # Set a custom x-axis title\n    y = \"Percentage\"   # Set a custom y-axis title\n  ) +\n  ggtitle(\"Percentage of Young across Planning Area\") +\n  scale_y_continuous(limits = c(0, 100))\n```\n:::\n\n\n\n:::\n\n## [1-1:]{style=\"color:DarkOrange\"} 3.3 Age Distribution by Sex\n\nSingapore, like many developed countries, is facing the issue of declining birth rates and an increasingly **Aging Population**. This visualization aims to provide insight into Singapore’s **Population** pyramid and **Gender** distribution.\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.3.1 Feature Engineering\n\nThe first part of the code aggregates the **Population** by **Sex**, and calculates the percentage of **Males** and **Females** by dividing it by the **Total**.\n\n-   The next section prepares for adding labels to the pie chart. The label position (*ypos*) was calculated using cumulative percentages *cumsum(Pct_Sex) - Pct_Sex / 2* since *coord_polar(\"y\")* will be used to create the pie chart.\n\nThe next part of the code is for calculating the gender ratio. Violin plots are normalised to 1 by default so this ratio is needed to adjust the **Male** plot to be slightly smaller than the **Female** plot.\n\nIn the third part, the dataset was prepared to visualise **Age** distributions by **Sex**:\n\n-   The dataset *sg_data* was grouped by **Age** and **Sex**, then summarised using *sum(Pop)* to get the population count for each **Age-Sex** group.\n-   The resulting grouped data *demography_sex_age* was expanded into individual-level observations using *uncount(weights = Pop)*.\n    -   This transformation duplicates each row according to the **Pop** count, effectively simulating individual records. This is a requirement for plotting accurate violin plots of distributions.\n\nThe code below performs the steps above and finally splits the *demography_sex_age* data into two subsets (**Males** and **Females**) to allow overlaying their respective violin plots for easier visual comparison.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# First Part\ntotal_by_sex <- aggregate(Pop ~ Sex, data = sg_data, sum) %>%\n    mutate(Total = sum(Pop))\n\npct_total_by_sex <- total_by_sex %>%\n  mutate(Pct_Sex = (Pop / Total) * 100) %>%\n  select(Sex, Pct_Sex)\n\npct_total_by_sex <- pct_total_by_sex %>%\n  mutate(Sex = factor(Sex, levels = c(\"Males\", \"Females\"))) %>%\n  arrange(desc(Sex)) %>%\n  mutate(\n    ypos = cumsum(Pct_Sex) - Pct_Sex / 2,\n    label = paste0(round(Pct_Sex, 1), \"%\")\n  )\n\nkable(pct_total_by_sex)\n```\n\n::: {.cell-output-display}\n\n\n|Sex     |  Pct_Sex|     ypos|label |\n|:-------|--------:|--------:|:-----|\n|Females | 51.31834| 25.65917|51.3% |\n|Males   | 48.68166| 75.65917|48.7% |\n\n\n:::\n\n```{.r .cell-code}\n# Second Part\nmales_pct <- pct_total_by_sex$Pct_Sex[pct_total_by_sex$Sex == \"Males\"]\nfemales_pct <- pct_total_by_sex$Pct_Sex[pct_total_by_sex$Sex == \"Females\"]\n\nmale_female_ratio <- males_pct / females_pct\n\nmale_female_ratio\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9486211\n```\n\n\n:::\n\n```{.r .cell-code}\n# Third Part\ndemography_sex_age <- sg_data %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop))\n\nkable(head(demography_sex_age, 10))\n```\n\n::: {.cell-output-display}\n\n\n| Age|Sex     |   Pop|\n|---:|:-------|-----:|\n|   0|Females | 14370|\n|   0|Males   | 15090|\n|   1|Females | 15580|\n|   1|Males   | 16700|\n|   2|Females | 17190|\n|   2|Males   | 17980|\n|   3|Females | 17340|\n|   3|Males   | 18200|\n|   4|Females | 19070|\n|   4|Males   | 19880|\n\n\n:::\n\n```{.r .cell-code}\ndemography_sex_age <- demography_sex_age %>% uncount(weights = Pop)\n\ndemography_males <- demography_sex_age %>%\n  filter(Sex == \"Males\")\n\ndemography_females <- demography_sex_age %>%\n  filter(Sex == \"Females\")\n```\n:::\n\n\n\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.3.2 Methods and Explanation\n\nTo create an overlaid violin plot (p1) comparing **Age** distributions between **Males** and **Females**:\n\n-   A *ggplot()* object was initialised to serve as the base plot that the violin plots will be overlaid on.\n-   *geom_violin()* was used twice, once for each **Sex**, with shared x-axis *\"All\"* to overlay both distributions.\n-   *alpha = 0.5* was set to add transparency, allowing both violins to be visible when they overlap.\n-   *scale = \"area\"* ensures the violins are scaled proportionally to the size of their age groups and *width =* is used to scale the plots according to their population ratios.\n-   A custom fill colour was set for each sex using *scale_fill_manual()*, and *breaks = c(\"Males\", \"Females\")* ensures the legend appears with Males being first.\n-   *theme(axis.text.x = element_blank())* hides the x-axis label since both violins are plotted at a shared position *\"All\"*.\n-   *labs()* was used to remove the x-axis text and label the y-axis.\n-   The legend position was adjusted to the top to provide more space for pie chart (p2) to be inserted.\n\nThe pie chart (p2) is created similarly to the bar charts in the previous sections but with the following modifications:\n\n-   Using *coord_polar(\"y\")* to convert it into a pie chart by transforming the y-axis into a circular layout.\n-   Data labels were added using *geom_text()*.\n-   Axis titles, legend, tick marks, grid lines and plot background were removed using *labs()* and *theme()*.\n\nLastly, the pie chart (p2) is overlaid over the violin plot (p2) using *inset_element()* to provide an easy overview of both plots.\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.3.3 Plots and Analysis\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-27-1.png){width=768}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\np1 <- ggplot() +\n  geom_violin(data = demography_females, \n              aes(x = \"All\", y = Age, fill = \"Females\"), \n              scale = \"area\", alpha = 0.5, width = 1) +\n  geom_violin(data = demography_males, \n              aes(x = \"All\", y = Age, fill = \"Males\"), \n              scale = \"area\", alpha = 0.5, width = male_female_ratio) +\n  theme_minimal() +\n  labs(\n    x = NULL,\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    name = \"Sex\",\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(\n    axis.text.x = element_blank(),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(breaks = seq(0, 90, by = 10))\n\np2 <- ggplot(pct_total_by_sex, aes(x = \"\", y = Pct_Sex, fill = Sex)) +\n  geom_bar(stat = \"identity\", color = \"black\", alpha = 0.5) +\n  coord_polar(\"y\") +\n  theme_test() +\n  labs(title = \"Population by Sex\") +\n  scale_fill_manual(\n    values = c(\"Males\" = \"#88CCEE\",\n               \"Females\" = \"#CC6677\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL\n  ) +\n  geom_text(aes(y = ypos, label = label), color = \"black\", size = 4) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major = element_blank(),\n    panel.grid.minor= element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\np1 + inset_element(p2,\n                   left = 0.48,\n                   bottom = 0.76,\n                   right = 1.285,\n                   top = 1.2)\n```\n:::\n\n\n\n:::\n\n::: callout-tip\n## Insights\n\n##### Gender Ratio\n\n-   The **Female** population is slightly higher than the **Male** population overall.\n-   This aligns with Singapore’s national demographic pattern, where **Females** outnumber **Males** slightly due to longer life expectancy.\n\n##### Population Trends (Age 0 - 30)\n\n-   **Males** consistently outnumber **Females** slightly till age 30.\n-   Population rises gradual from birth to age 8.\n-   A plateau is observed from ages 9 to 20, followed by another increase towards 30.\n\n##### Population Trends (Age 30 - 60)\n\n-   The segment holds the largest proportion of Singapore's population.\n-   **Females** outnumber **Males** except for a brief period between age 57-65.\n\n##### Population Trends (Age Above 60)\n\n-   A steady decline beings from age 60 onward.\n-   The **Male** population decreases at a faster rate, leading to a widening gender gap with increasing age.\n\n##### Population Pyramid\n\n-   The age distribution resembles that of an ageing population which is consistent with other developed countries.\n:::\n\n### [1-1:]{style=\"color:DarkOrange\"} 3.3.4 Reflections and Initial Workings\n\n::: callout-important\n## Reflections\n\nI initially avoided expanding the data into individual-level observations using *uncount(weights = Pop)*, since it is possible to pass *weights = Pop* in *aes()*. However, the resulting violin plot (below) looked weird. Therefore, I tried the *uncount()* method and found that these 2 methods produces very different plots. Upon further research, I found that while *geom_violin()* can estimate the probability density function (PDF) using the weights, density estimation with weights may be less precise or behave unexpectedly depending on implementation. Therefore, I chose to use *uncount()* in the final plot above, as working with raw, individual-level distributions seems to produce more accurate and visually realistic results.\n:::\n\n**Feature Engineering**\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_sex_age_2 <- sg_data %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop))\n\ndemography_sex_age_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 182 × 3\n# Groups:   Age [91]\n     Age Sex       Pop\n   <dbl> <chr>   <dbl>\n 1     0 Females 14370\n 2     0 Males   15090\n 3     1 Females 15580\n 4     1 Males   16700\n 5     2 Females 17190\n 6     2 Males   17980\n 7     3 Females 17340\n 8     3 Males   18200\n 9     4 Females 19070\n10     4 Males   19880\n# ℹ 172 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n**Plots and Reflections**\n\n::: panel-tabset\n## Plot\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01-1_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n\n## Code\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=demography_sex_age_2, \n       aes(y = Age, \n           x= Sex,\n           weight = Pop,\n           fill = Sex)) +\n  geom_violin(scale = \"area\") +\n  theme_minimal() +\n  labs(\n    x = \"Sex\",\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\")\n    )\n```\n:::\n\n\n\n:::\n\n# [1-1:]{style=\"color:DarkOrange\"} 4 Summary\n\nSingapore, being land-scarce, has designated different areas for specific purposes. Least populated zones tend to be industrial, military or commercial, such as central districts which, while less residential, tend to have a higher concentration of working-age adults. In contrast, the most populated areas comprise both mature and newer estates, reflecting the government’s successful urban development. Newer estates are skewed toward younger and economically active residents, since it is attractive to young families, while mature estates have a larger proportion of aged residents. Like most developed countries, Singapore has an ageing demographic, with the population peaking around age 35 and the 35–60 age group forming the largest segment. From this point onward, the population declines, and females begin to outnumber males in the older age groups due to longer life expectancy. As a result, Singapore’s overall population has slightly more females, though the younger age groups maintain a roughly equal gender distribution.\n\n# [1-1:]{style=\"color:DarkOrange\"} 5 Appendix\n\n## [1-1:]{style=\"color:DarkOrange\"} 5.1 Singapore's Estate Classification\n\n![](/Take-Home_Ex/Take-Home_Ex01-1/image/estate.png){fig-align=\"center\" width=\"800\"}\n\n[Reference: <https://www.hdb.gov.sg/-/media/doc/SCEG/20082023-Annexes/Annex-A1.ashx>]{style=\"color: grey; font-size: 12px;\"}\n",
    "supporting": [
      "Take-home_Ex01-1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}