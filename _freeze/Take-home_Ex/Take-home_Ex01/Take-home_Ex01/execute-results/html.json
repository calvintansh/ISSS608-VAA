{
  "hash": "31fa73c2fbf3987695135c5c4dd3b6a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home_Ex01: Demographic Structures and Distribution of Singapore in 2024\"\ndate: 2025-04-29\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# [1]{style=\"color:DarkOrange\"} Overview\n\n## [1.1]{style=\"color:DarkOrange\"} Background\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\n\nAssuming the role of the graphical editor of the media company, I am tasked to prepare at most three data visualisation for this article.\n\n::: callout-tip\nCreating enlightening and truthful data visualizations involves focusing on accuracy, transparency, and the ability to effectively communicate insights. It is about presenting data in a way that is both informative and aesthetically pleasing, ensuring the audience can grasp the information quickly and accurately.\n:::\n\nThe data should also be processed by using appropriate tidyverse family of packages and the data visualisation must be prepared using ggplot2 and its extensions. In addition, no interactive data visualisation are required.\n\n## [1.2]{style=\"color:DarkOrange\"} Data Source\n\nThe data for this exercise is the [Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data) dataset, retrieved by [Department of Statistics, Singapore (DOS)](https://www.singstat.gov.sg/).\n\n## [1.3]{style=\"color:DarkOrange\"} Install and Load the Required Libraries\n\nIn this exercise, besides tidyverse, four R packages will be used. They are:\n\n1.  **tidyverse:** A collection of R packages designed for data science. It includes packages like dplyr, ggplot2, tidyr, and readr that simplify data wrangling and visualization.\n2.  **patchwork:** An R package that allows users to easily combine multiple ggplot2 plots into a single composite layout, useful for comparative visual analysis.\n3.  **ggthemes:** This package adds extra themes, scales, and geoms to ggplot2, making it easier to apply distinct themes to plots.\n4.  **knitr:** A reporting package that integrates R code with markdown, enabling dynamic report generation in formats such as HTML, PDF, and Word, often used with R Markdown and Quarto.\n\nCode chunk below will be used to check if these packages have been installed and also load them onto my working R environment.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, patchwork, ggthemes, knitr)\n```\n:::\n\n\n\n## [1.4]{style=\"color:DarkOrange\"} Importing Data\n\nFor the purpose of this exercise, a data file called *respopagesex2024* will be used. It consists of data about Singapore Residents by Planning Area / Subzone, categorised by a Single Year of Age and Sex,for June 2024. It is in a csv file format.\n\nThe code chunk below imports *respopagesex2024.csv* into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data <- read_csv(\"data/respopagesex2024.csv\")\n```\n:::\n\n\n\n# [2]{style=\"color:DarkOrange\"} Exploratory Data Analysis (EDA)\n\nThere are a total of six attributes in the sg_data tibble data frame. Four of them are categorical data type and the other two are in continuous data type.\n\n::::: columns\n::: {.column width=\"50%\"}\n### Categorical Variables\n\n-   PA: Planning Area\n-   SZ: Subzone\n-   Age: Single Year of Age\n-   Sex\n:::\n\n::: {.column width=\"50%\"}\n### Continuous Variables\n\n-   Pop: Resident Count\n-   Time: Time / Period\n:::\n:::::\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsapply(sg_data, class)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         PA          SZ         Age         Sex         Pop        Time \n\"character\" \"character\" \"character\" \"character\"   \"numeric\"   \"numeric\" \n```\n\n\n:::\n:::\n\n\n:::\n\nThe first 10 rows of the data are displayed using kable (under knitr) to get a basic understanding of the data.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|PA         |SZ                     |Age |Sex     | Pop| Time|\n|:----------|:----------------------|:---|:-------|---:|----:|\n|Ang Mo Kio |Ang Mo Kio Town Centre |0   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |0   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |1   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |1   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |2   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |2   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |3   |Males   |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |3   |Females |  10| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |4   |Males   |  30| 2024|\n|Ang Mo Kio |Ang Mo Kio Town Centre |4   |Females |  10| 2024|\n\n\n:::\n:::\n\n\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkable(head(sg_data, 10))\n```\n:::\n\n\n:::\n\n## [2.1]{style=\"color:DarkOrange\"} Checking for duplicates\n\nBefore proceeding further with the EDA, a check for duplicated records was done using group_by_all() and filtering rows with more than 1 count. The results of the code below confirms that there were no duplicated records.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nduplicate <- sg_data %>% \n  group_by_all() %>% \n  filter(n()>1)\n  \nduplicate\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 0 × 6\n# Groups:   PA, SZ, Age, Sex, Pop, Time [0]\n# ℹ 6 variables: PA <chr>, SZ <chr>, Age <chr>, Sex <chr>, Pop <dbl>,\n#   Time <dbl>\n```\n\n\n:::\n:::\n\n\n:::\n\n## [2.2]{style=\"color:DarkOrange\"} Fixing Age Column Inconsisency\n\nAlthough there are no duplicated records, the earlier EDA of variable types and the data table revealed that the **Age** column, which appears to be a continuous variable, was incorrectly recognised as a categorical variable.\n\nUpon further analysis of the **Age** column using the code below, it was found to contain 91 unique values. These values range from 0 to 89 and are numeric in nature, but the last value is a string, *\"90_and_Over\"*. This string caused the **Age** column to be recognised as a categorical variable instead of a continuous one.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(sg_data$Age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"0\"           \"1\"           \"2\"           \"3\"           \"4\"          \n [6] \"5\"           \"6\"           \"7\"           \"8\"           \"9\"          \n[11] \"10\"          \"11\"          \"12\"          \"13\"          \"14\"         \n[16] \"15\"          \"16\"          \"17\"          \"18\"          \"19\"         \n[21] \"20\"          \"21\"          \"22\"          \"23\"          \"24\"         \n[26] \"25\"          \"26\"          \"27\"          \"28\"          \"29\"         \n[31] \"30\"          \"31\"          \"32\"          \"33\"          \"34\"         \n[36] \"35\"          \"36\"          \"37\"          \"38\"          \"39\"         \n[41] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[46] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[51] \"50\"          \"51\"          \"52\"          \"53\"          \"54\"         \n[56] \"55\"          \"56\"          \"57\"          \"58\"          \"59\"         \n[61] \"60\"          \"61\"          \"62\"          \"63\"          \"64\"         \n[66] \"65\"          \"66\"          \"67\"          \"68\"          \"69\"         \n[71] \"70\"          \"71\"          \"72\"          \"73\"          \"74\"         \n[76] \"75\"          \"76\"          \"77\"          \"78\"          \"79\"         \n[81] \"80\"          \"81\"          \"82\"          \"83\"          \"84\"         \n[86] \"85\"          \"86\"          \"87\"          \"88\"          \"89\"         \n[91] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n:::\n\nTo address this issue, the code below converts the string *\"90_and_Over\"* into the numerical value *90,* and subsequently ensures that the **Age** column is treated as a numeric variable.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data$Age <- as.character(sg_data$Age)\n\nsg_data$Age[sg_data$Age == \"90_and_Over\"] <- \"90\"\n\nsg_data$Age <- as.numeric(sg_data$Age)\n```\n:::\n\n\n:::\n\n## [2.3]{style=\"color:DarkOrange\"} Binning Age Column\n\nEven after fixing the inconsistent data type in the **Age** column, there were still 91 unique values, which will be too many for meaningful analysis. Therefore, the **Age** column will be binned into the following categorise using the code below:\n\n-   Young: Singapore residents aged 0 to 24\n-   Economically_Active: Singapore residents aged 25 to 64\n-   Aged: Singapore residents aged 65 and above\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsg_data$Age_Group <- cut(\n  sg_data$Age,\n  breaks = c(-1, 24, 64, Inf),\n  labels = c(\"Young\", \"Economically_Active\", \"Aged\"),\n  right = TRUE\n)\n\nunique(sg_data$Age_Group) # shows that the binning works\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] Young               Economically_Active Aged               \nLevels: Young Economically_Active Aged\n```\n\n\n:::\n:::\n\n\n:::\n\nAfter completing the data manipulation steps described in earlier, the resulting data is shown in the table below.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|PA         |SZ                     | Age|Sex     | Pop| Time|Age_Group |\n|:----------|:----------------------|---:|:-------|---:|----:|:---------|\n|Ang Mo Kio |Ang Mo Kio Town Centre |   0|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   0|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   1|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   1|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   2|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   2|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   3|Males   |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   3|Females |  10| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   4|Males   |  30| 2024|Young     |\n|Ang Mo Kio |Ang Mo Kio Town Centre |   4|Females |  10| 2024|Young     |\n\n\n:::\n:::\n\n\n\n# [3]{style=\"color:DarkOrange\"} Visualisations\n\n## [3.1]{style=\"color:DarkOrange\"} Population Across Planning Areas by Sex\n\nThis section examines the distribution of the **Population** across **Planning Areas**, categorized by **Sex**, to understand demographic patterns in different regions.\n\n### [3.1.1]{style=\"color:DarkOrange\"} Feature Engineering\n\nIn this step, the following features were added to support the visual analysis:\n\n-   The dataset sg_data was grouped by **Planning Area (PA)** and **Sex** to calculate the **Population (Pop)** for each subgroup using summarise(Pop = sum(Pop)).\n-   A second grouping by **PA** was performed to calculate the **Total** population per **PA**, stored in a new column **Total**.\n-   Rows with a **Total** population of 0 were removed using filter(Total \\> 0) to eliminate empty **PA** from the analysis.\n-   The resulting data structure, demography_sex, now contains the **Total** population broken down by **Sex** and **PA**, along with overall population **Total** per **PA**.\n\nThe code below performs the transformation necessary in preparation for analysis and comparing population distribution between **Males** and **Females** across different **PAs**.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_sex <- sg_data %>%\n  group_by(PA, Sex) %>%\n  summarise(Pop = sum(Pop)) %>%\n  group_by(PA) %>%\n  mutate(Total = sum(Pop))\n\ndemography_sex <- demography_sex %>%\n  filter(Total > 0)\n\nkable(head(demography_sex, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Sex     |    Pop|  Total|\n|:-----------|:-------|------:|------:|\n|Ang Mo Kio  |Females |  84210| 160450|\n|Ang Mo Kio  |Males   |  76240| 160450|\n|Bedok       |Females | 143770| 277660|\n|Bedok       |Males   | 133890| 277660|\n|Bishan      |Females |  45640|  88210|\n|Bishan      |Males   |  42570|  88210|\n|Bukit Batok |Females |  86070| 168390|\n|Bukit Batok |Males   |  82320| 168390|\n|Bukit Merah |Females |  78160| 149390|\n|Bukit Merah |Males   |  71230| 149390|\n\n\n:::\n:::\n\n\n:::\n\n### [3.1.1]{style=\"color:DarkOrange\"} Plots and Analysis\n\nThe aim is to create a detailed view of **Population** distribution by **Sex** across Singapore’s **Planning Areas**. These were the steps taken to create a stacked horizontal bar chart for visualisation:\n\n-   The **PA** was ordered by ascending **Total** population using the pa_order vector. Although the factor levels were in ascending, the use of coord_flip() in the plot reverses the axis orientation, resunting in a horizontal bar chart that appears in the descending order for **Totals**.\n-   Similar to the reason above, the Sex variable is converted into a factor with levels set as Females first, followed by Males, such that it will appear as Males followed by Females horizontal bar chart.\n-   ggplot() was used with geom_bar() (with stat = \"identity\" and position = \"stack\") to create a stacked horizontal bar chart (s1), displaying the **Pop** by **Sex** across **PA**.\n-   theme_minimal() was applied for a clean visual style, and labs()/ggtitle() were used to customize axis labels and the plot title.\n-   scale_fill_manual() was used to assign distinct colors to **Males and Females** and to control the legend order, explicitly setting it as: Males, Femals instead of the reversed order if left as default.\n-   scale_y_continuous(labels = scales::comma) was used to show numerical numbers rather than the scientific notation.\n-   A zoomed-in plot (s2) shows the bottom 10 **PA** and was embedded into the main plot using inset_element() (under patchwork). This method makes it easier to examine less populous **PA** in the same figure.\n-   Since the zoomed-in plot (s2) was overlaid on top of the main chart (s1), theme() function was used to remove its axis and gridlines so avoid visual interference with the background plot (s1).\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=864}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npa_order <- demography_sex %>%\n  distinct(PA, Total) %>%\n  arrange(Total) %>%\n  pull(PA)\n\ndemography_sex <- demography_sex %>%\n  mutate(\n    PA = factor(PA, levels = pa_order),\n    Sex = factor(Sex, levels = c(\"Females\", \"Males\"))\n  )\n\ns1 <- ggplot(data = demography_sex, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Population\",\n    fill = \"Sex\"\n  ) +\n  ggtitle(\"Population Across Planning Areas by Sex\") +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  scale_y_continuous(labels = scales::comma)\n\ndemography_sex_bottom10 <- demography_sex %>%\n  filter(PA %in% head(pa_order, 10))\n\ns2 <- ggplot(data = demography_sex_bottom10, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = NULL,\n    y = NULL,\n    fill = NULL\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.line.x = element_blank()\n  )\n\ns1 + inset_element(s2,\n                   left = 0.2,\n                   bottom = 0.05,\n                   right = 1,\n                   top = 0.35)\n```\n:::\n\n\n:::\n\n::: callout-tip\n## Insights\n:::\n\n## [3.2]{style=\"color:DarkOrange\"} Percentage of Age Groups Across Planning Areas\n\nThis visualisation aims to show the percentage distribution of **Age Groups** (Young, Economically_Active and Aged) across **Planning Areas**. This will provide insights into how Singapore residents are demographically distributed across Singapore.\n\n### [3.2.1]{style=\"color:DarkOrange\"} Feature Engineering\n\nIn this step, the following features were created to support the visual analysis:\n\n-   The dataset sg_data was grouped by **PA** and **Age_Group** to calculate the **Population (Pop)** for each subgroup using summarise(Pop = sum(Pop)).\n-   A second grouping by **PA** was performed to compute the **Total** population per **PA**, stored in a new column **Total** using mutate(Total = sum(Pop)).\n-   Rows with a **Total** population of 0 were removed using filter(Total \\> 0) to eliminate empty **PA** from the analysis.\n-   The data was then transformed to compute percentage composition of each **Age Group** within each **PA** using mutate(Pct_Age_Group = (Pop / Total) \\* 100).\n-   Percentages of **Age Group** were rounded to 1 decimal place using mutate(across(Pct_Age_Group, \\~ round(.x, 1))).\n\nThe code below transforms the data and results in the final output pct_demography_age. It contains the percentage of **Age Group** (Young, Economically Active) for each **PA**.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_age <- sg_data %>%\n  group_by(PA, Age_Group) %>%\n  summarise(Pop = sum(Pop)) %>%\n  group_by(PA) %>%\n  mutate(Total = sum(Pop))\n\ndemography_age <- demography_age %>%\n  filter(Total > 0)\n\npct_demography_age <- demography_age %>%\n  mutate(Pct_Age_Group = (Pop / Total) * 100) %>%\n  select(PA, Age_Group, Pct_Age_Group)\n\npct_demography_age <- pct_demography_age %>%\n  mutate(across(Pct_Age_Group, ~ round(.x, 1)))\n\nkable(head(pct_demography_age, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Age_Group           | Pct_Age_Group|\n|:-----------|:-------------------|-------------:|\n|Ang Mo Kio  |Young               |          20.1|\n|Ang Mo Kio  |Economically_Active |          54.6|\n|Ang Mo Kio  |Aged                |          25.3|\n|Bedok       |Young               |          21.8|\n|Bedok       |Economically_Active |          55.5|\n|Bedok       |Aged                |          22.7|\n|Bishan      |Young               |          22.6|\n|Bishan      |Economically_Active |          55.4|\n|Bishan      |Aged                |          21.9|\n|Bukit Batok |Young               |          24.8|\n\n\n:::\n:::\n\n\n:::\n\n### [3.2.2]{style=\"color:DarkOrange\"} Plots and Analysis\n\nTo visualize the distribution of age groups across planning areas, the following plotting steps were performed:\n\n-   The PA follows the same order as the [Population Across Planning Areas by Sex](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#population-across-planning-areas-by-sex) plot above.\n-   The Age_Group variable was explicitly ordered as Aged → Economically Active → Young so that the stacked bars chart will be in the reversed order after coord_flip().\n-   The rest of the functions have been explained in the [Population Across Planning Areas by Sex](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#population-across-planning-areas-by-sex) plot above.\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-15-1.png){width=864}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npct_demography_age <- pct_demography_age %>%\n  mutate(PA = factor(PA, levels = pa_order),\n         Age_Group = factor(Age_Group, levels = c(\"Aged\", \"Economically_Active\", \"Young\")))\n\nggplot(data = pct_demography_age, \n       aes(x = PA, y = Pct_Age_Group, fill = Age_Group)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Percentage\",\n    fill = \"Age Group\"\n  ) +\n  ggtitle(\"Percentage of Age Groups across Planning Area\") +\n  scale_fill_manual(\n    values = c(\n      \"Young\" = \"#DDCC77\",\n      \"Economically_Active\" = \"#44AA99\",\n      \"Aged\" = \"#AA4499\"\n    ),\n    breaks = c(\"Young\", \"Economically_Active\", \"Aged\")\n  )\n```\n:::\n\n\n:::\n\n##### Economically Active Population (Working Age 25 to 64)\n\n- Extremely high proportions of working-age residents:\n    -   Museum\n    -   Downtown Core\n    -   Orchard\n        -   Low proportions of Young and Aged population\n        -   Museum and Seletar have no recorded Aged population\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neconomically_active_data <- pct_demography_age %>%\n  filter(Age_Group == \"Economically_Active\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(economically_active_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 60.57619\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(economically_active_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA               |Age_Group           | Pct_Age_Group|\n|:----------------|:-------------------|-------------:|\n|Museum           |Economically_Active |          96.2|\n|Seletar          |Economically_Active |          85.7|\n|Downtown Core    |Economically_Active |          80.3|\n|Orchard          |Economically_Active |          73.6|\n|Tengah           |Economically_Active |          68.5|\n|Singapore River  |Economically_Active |          63.3|\n|Sungei Kadut     |Economically_Active |          63.3|\n|Southern Islands |Economically_Active |          62.0|\n|River Valley     |Economically_Active |          60.7|\n|Choa Chu Kang    |Economically_Active |          60.2|\n\n\n:::\n:::\n\n\n\nThese patterns suggests that such areas are primarily dominated by working adults and may serve commercial or business purposes (Museum, Downtown Core, and Orchard), or military functions (Seletar and Tengah air bases).\n:::\n\n##### Young Population (Aged 0 to 24)\n- Highest concentrations of Young:\n    -   Punggol\n    -   Sembawang\n    -   Sengkang\n        -   Higher concentrations of Economically Active and lower proportions of Aged\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyoung_data <- pct_demography_age %>%\n  filter(Age_Group == \"Young\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(young_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 23.15714\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(young_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA                      |Age_Group | Pct_Age_Group|\n|:-----------------------|:---------|-------------:|\n|Western Water Catchment |Young     |          40.7|\n|Changi                  |Young     |          31.7|\n|Punggol                 |Young     |          31.4|\n|Southern Islands        |Young     |          29.5|\n|Sembawang               |Young     |          29.0|\n|Singapore River         |Young     |          28.6|\n|Bukit Timah             |Young     |          28.5|\n|Sengkang                |Young     |          28.5|\n|Tanglin                 |Young     |          27.2|\n|Newton                  |Young     |          26.8|\n\n\n:::\n:::\n\n\n\nThese consists of newer non-mature estates (Refer to [Appendix: Singapore's Estate Classification](https://isss608-ay2024-25t3.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#singapore's-estate-classification)) such as Punggol, Sengkang, and Sembawang, which are actively being developed by the Singapore government. These are particularly appealing to newly married couples, since many of the new Build-To-Order (BTO) projects in these areas are designed for budget-conscious young families. These households will tend to include Economically Active individuals as well.\n:::\n\n##### Aged Population (Aged 65 and above)\n\n- Highest concentration of Aged:\n  -   Ang Mo Kio\n  -   Bukit Merah\n  -   Kallang\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\naged_data <- pct_demography_age %>%\n  filter(Age_Group == \"Aged\") %>%\n  arrange(desc(Pct_Age_Group))\n\nmean(aged_data$Pct_Age_Group)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16.27619\n```\n\n\n:::\n\n```{.r .cell-code}\nkable(head(aged_data, 10))\n```\n\n::: {.cell-output-display}\n\n\n|PA          |Age_Group | Pct_Age_Group|\n|:-----------|:---------|-------------:|\n|Outram      |Aged      |          28.8|\n|Ang Mo Kio  |Aged      |          25.3|\n|Bukit Merah |Aged      |          24.5|\n|Rochor      |Aged      |          24.5|\n|Jurong East |Aged      |          23.8|\n|Kallang     |Aged      |          23.5|\n|Serangoon   |Aged      |          22.9|\n|Bedok       |Aged      |          22.7|\n|Queenstown  |Aged      |          22.2|\n|Toa Payoh   |Aged      |          22.1|\n\n\n:::\n:::\n\n\n\nThese are mainly mature estates with a higher proportion of elderly residents, many of whom have lived there since their younger years.\n:::\n\n::: callout-tip\n## Insights\n\n##### Central districts (e.g., Museum, Downtown Core, Orchard):\n\n-   Have a high proportion of Economically Active residents, with relatively low concentration of Youth and Aged.\n-   These are likely business or commercial hubs.\n\n##### Mature estates (e.g., Ang Mo Kio, Bukit Merah, Kallang):\n\n-   Show a more balanced demographic distribution, though with a noticeably aging population.\n\n##### New estates (e.g., Punggol, Sembawang, Sengkang):\n\n-   Skew heavily toward the Young and Economically Active, with fewer Aged residents.\n-   This reflects their appeal to new families, likely due to the availability and price of new housing developments.\n:::\n\n### [3.2.3]{style=\"color:DarkOrange\"} Workings - Plots created before Improving to the Final Version Above\n\n::: callout-tip\n## Reflections\n\nI initially considered using tabs to view the graphs separately, but later realised that by restructuring the data, all three graphds could be combined into a single stacked bar chart. This thought led to the final plot presented above.\n:::\n\n#### Feature Engineering\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography <- sg_data %>%\n  group_by(PA, Age_Group) %>%\n  summarise(Pop = sum(Pop, na.rm = TRUE)) %>%\n  pivot_wider(\n    names_from = Age_Group,\n    values_from = Pop,\n    values_fill = 0\n  ) %>%\n  mutate(Total = Young + Economically_Active + Aged)\n\ndemography <- demography %>%\n  filter(Total > 0)\n\npct_demography <- demography %>%\n  mutate(\n    Pct_Young = (Young / Total) * 100,\n    Pct_Economically_Active = (Economically_Active / Total) * 100,\n    Pct_Aged = (Aged / Total) * 100\n  ) %>%\n  select(PA, Pct_Young, Pct_Economically_Active, Pct_Aged)\n\npct_demography <- pct_demography %>%\n  mutate(across(starts_with(\"pct\"), ~ round(.x, 1)))\n```\n:::\n\n\n:::\n\n#### Plots and Reflections\n\n::: panel-tabset\n## Young\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n## Economically Active\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n\n## Aged\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npct_demography$PA <- factor(pct_demography$PA, levels = rev(sort(unique(pct_demography$PA))))\n\nggplot(data = pct_demography, \n       aes(x = PA, y = Pct_Young)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",  # Set a custom x-axis title\n    y = \"Percentage\"   # Set a custom y-axis title\n  ) +\n  ggtitle(\"Percentage of Young across Planning Area\") +\n  scale_y_continuous(limits = c(0, 100))\n```\n:::\n\n\n:::\n\n## [3.3]{style=\"color:DarkOrange\"} Age Distribution by Sex\n\n### [3.3.1]{style=\"color:DarkOrange\"} Feature Engineering\n\nIn this step, the dataset was prepared to visualize **Age** distributions by **Sex**:\n\n-   The dataset sg_data was grouped by **Age** and **Sex**, then summarized using sum(Pop) to get the population count for each **Age-Sex** group.\n-   The resulting grouped data demography_sex_age was expanded into individual-level observations using uncount(weights = Pop).\n    -   This transformation duplicates each row according to the population count, effectively simulating individual records. This is a requirement for plotting accurate violin plots of distributions.\n\nThe code below performs the steps above and finally splits the *demography_sex_age* data into two subsets (**Males** and **Females**) to allow overlaying their respective violin plots for easier visual comaprison.\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_sex_age <- sg_data %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop))\n\nkable(head(demography_sex_age, 10))\n```\n\n::: {.cell-output-display}\n\n\n| Age|Sex     |   Pop|\n|---:|:-------|-----:|\n|   0|Females | 14370|\n|   0|Males   | 15090|\n|   1|Females | 15580|\n|   1|Males   | 16700|\n|   2|Females | 17190|\n|   2|Males   | 17980|\n|   3|Females | 17340|\n|   3|Males   | 18200|\n|   4|Females | 19070|\n|   4|Males   | 19880|\n\n\n:::\n\n```{.r .cell-code}\ndemography_sex_age <- demography_sex_age %>% uncount(weights = Pop)\n\ndemography_males <- demography_sex_age %>%\n  filter(Sex == \"Males\")\n\ndemography_females <- demography_sex_age %>%\n  filter(Sex == \"Females\")\n```\n:::\n\n\n:::\n\n### [3.3.2]{style=\"color:DarkOrange\"} Plots and Analysis\n\nTo create a overlayed violin plot comparing **Age** distributions between **Males** and **Females**:\n\n-   A ggplot() object was initialized to save as the base plot that the violin plots will be overlayed on.\n-   geom_violin() used twice, once for each sex, with shared x-axis \"All\" to overlay both distributions.\n-   alpha = 0.5 was set to add transparency, allowing both violins to be visible when they overlap.\n-   scale = \"area\" ensures the violins are scaled proportionally to the size of their age groups.\n-   A custom fill color was set for each sex using scale_fill_manual(), and breaks = c(\"Males\", \"Females\") ensures the legend appears with Males being first.\n-   theme(axis.text.x = element_blank()) hides the x-axis label since both violins are plotted at a shared position \"All\".\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=864}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_males <- demography_sex_age %>%\n  filter(Sex == \"Males\")\n\ndemography_females <- demography_sex_age %>%\n  filter(Sex == \"Females\")\n\nggplot() +\n  geom_violin(data = demography_females, \n              aes(x = \"All\", y = Age, fill = \"Females\"), \n              scale = \"area\", alpha = 0.5) +\n  geom_violin(data = demography_males, \n              aes(x = \"All\", y = Age, fill = \"Males\"), \n              scale = \"area\", alpha = 0.5) +\n  theme_minimal() +\n  labs(\n    x = \"Sex\",\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    name = \"Sex\",\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(axis.text.x = element_blank())\n```\n:::\n\n\n:::\n\n### [3.3.3]{style=\"color:DarkOrange\"} Workings - Plots created before Improving to the Final Version Above\n\n::: callout-tip\n## Reflections\n\nI initially avoided expanding the data into individual-level observations using uncount(weights = Pop), since it is possible to pass weights = Pop in aes(). However, the resulting violin plot look weird. Therefore, I tried the uncount() method and found that the 2 methods produces very different plots. Upon further research, I found that while geom_violin() can estimate the probability density function (PDF) using the weights, density estimation with weights may be less precise or behave unexpectedly depending on implementation. Therefore, I chose to use uncount() above, as working with raw, individual-level distributions seems to produce more accurate and vidually realistic results.\n:::\n\n**Feature Engineering**\n\n::: {.callout-note appearance=\"minimal\" collapse=\"true\"}\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndemography_sex_age_2 <- sg_data %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop))\n\ndemography_sex_age_2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 182 × 3\n# Groups:   Age [91]\n     Age Sex       Pop\n   <dbl> <chr>   <dbl>\n 1     0 Females 14370\n 2     0 Males   15090\n 3     1 Females 15580\n 4     1 Males   16700\n 5     2 Females 17190\n 6     2 Males   17980\n 7     3 Females 17340\n 8     3 Males   18200\n 9     4 Females 19070\n10     4 Males   19880\n# ℹ 172 more rows\n```\n\n\n:::\n:::\n\n\n:::\n\n**Plots and Reflections**\n\n::: panel-tabset\n## Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n## Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data=demography_sex_age_2, \n       aes(y = Age, \n           x= Sex,\n           weight = Pop,\n           fill = Sex)) +\n  geom_violin(scale = \"area\") +\n  theme_minimal() +\n  labs(\n    x = \"Sex\",\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\")\n    )\n```\n:::\n\n\n:::\n\n# [4]{style=\"color:DarkOrange\"} Appendix\n\n## [4.1]{style=\"color:DarkOrange\"} Singapore's Estate Classification\n\n![](/Take-Home_Ex/Take-Home_Ex01/image/estate.png){fig-align=\"center\" width=\"800\"}\n\n[Reference: <https://www.hdb.gov.sg/-/media/doc/SCEG/20082023-Annexes/Annex-A1.ashx>]{style=\"color: grey; font-size: 12px;\"}\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}