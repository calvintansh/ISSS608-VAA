[
  {
    "objectID": "test.html",
    "href": "test.html",
    "title": "test",
    "section": "",
    "text": "pacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)\n\ncol &lt;- c(“Country”, “Continent”) globalPop &lt;- read_xls(“C:/calvintansh/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex03-2/data/respopagesex2024.csv”, sheet = “Data”) %&gt;% mutate(across(col, as.factor)) %&gt;% # mutate(across()) mutate(Year = as.integer(Year))\n\nexam &lt;- read_csv(\"C:/calvintansh/ISSS608-VAA/Hands-on_Ex/Hands-on_Ex04-4/data/Exam_data.csv\")\n\n\nmy_sum &lt;- exam %&gt;%\n  group_by(RACE) %&gt;%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %&gt;%\n  mutate(se=sd/sqrt(n-1))\n\n\nknitr:::kable(head(my_sum),\n              format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\nknitr:::kable(head(my_sum),\n              format = 'html')\n\n\n\n\nRACE\nn\nmean\nsd\nse\n\n\n\n\nChinese\n193\n76.50777\n15.69040\n1.132357\n\n\nIndian\n12\n60.66667\n23.35237\n7.041005\n\n\nMalay\n108\n57.44444\n21.13478\n2.043177\n\n\nOthers\n9\n69.66667\n10.72381\n3.791438\n\n\n\n\n\n\n\n\nImproved PlotOriginal Plot\n\n\n\n\nShow code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(5,7),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(NULL) + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1),\n                     plot.title = element_text(size = 12)) +\n                   ggtitle(\"99% CI of Average &lt;br&gt;Maths Scores by Race\")), \n                tooltip = \"text\"),\n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\",\n                     colnames = c(\"No. of Pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "This exercise will target to answer one of the three challenges from VAST 2025 which features a fictitious island nation, Oceanus, famous for fishing and quiet seaside communities.\nThe chosen challenge is Mini-Challenge 1.\n\n\nOne of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence.\n\n\n\n\nDesign and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years.\n\n\n\n\n\nThe data for this exercise is from VAST 2025 MC1.\n\n\n\nGraph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart.\n\n\n\n\nUtility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\nShow code\nmc3_data &lt;- fromJSON(\"data/MC3_graph.json\")\nglimpse(mc3_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#background",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#background",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "One of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#tasks-and-questions",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#tasks-and-questions",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Design and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#data-source",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#data-source",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "The data for this exercise is from VAST 2025 MC1."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#data-description",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#data-description",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Graph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#install-and-load-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#install-and-load-the-required-libraries",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Utility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#importing-data",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "For the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#code-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc2_test.html#code-1",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Show code\nmc3_data &lt;- fromJSON(\"data/MC3_graph.json\")\nglimpse(mc3_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "This exercise will be composed of two phases:\n\nPhase 1: Designing my own data visualisation.\nPhase 2: Selecting one submission provided by my classmate, identifying three good design principles and critiquing three areas for further improvement. Based on these feedbacks, I will prepare the makeover version of their data visualisation.\n\nThis page will focus on Phase 2 of this exercise and you can find Phase 1 in Take-Home Exercise 1-1.\n\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\nAssuming the role of the graphical editor of the media company, my classmates have also been tasked to prepare at most three data visualisation for this article.\n\n\n\nAfter reviewing my classmates’ works, I have chosen the submission by RAJESH BABU SANTIGARI to review. I will have to analyse his work and identify three good design principles and three areas for further improvement. Based on these feedbacks, I have prepared the makeover version of his data visualisation to show how it can be enhanced.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#background",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#background",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\nAssuming the role of the graphical editor of the media company, my classmates have also been tasked to prepare at most three data visualisation for this article.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#peer-learning",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#peer-learning",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "After reviewing my classmates’ works, I have chosen the submission by RAJESH BABU SANTIGARI to review. I will have to analyse his work and identify three good design principles and three areas for further improvement. Based on these feedbacks, I have prepared the makeover version of his data visualisation to show how it can be enhanced.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#importing-data",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 1.4 Importing Data",
    "text": "1-1: 1.4 Importing Data\nSimilar to Take-Home Exercise 1-1, the data file called respopagesex2024 will be used.\nIt consists of data about Singapore Residents by Planning Area / Subzone, categorised by a Single Year of Age and Sex,for June 2024. It is in a csv file format.\nThe code chunk below imports respopagesex2024.csv twice, once for Rajesh’s data and once for my makeover data.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nraj_data &lt;- read_csv(\"data/respopagesex2024.csv\")\n\nmakeover_data &lt;- read_csv(\"data/respopagesex2024.csv\")",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#singapores-population-pyramid",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#singapores-population-pyramid",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-2: 2.1 Singapore’s Population Pyramid",
    "text": "1-2: 2.1 Singapore’s Population Pyramid\n\nRajesh’sMy Improvements\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\npyramid_data &lt;- raj_data %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(Pop = ifelse(Sex == \"Males\", -Pop, Pop))\n\nggplot(pyramid_data, aes(x = Age, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  labs(title = \"Singapore Population Pyramid (2024)\",\n       x = \"Age\", y = \"Population\",\n       fill = \"Sex\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n# Feature Engineering\nmakeover_data$Age &lt;- as.character(makeover_data$Age)\n\nmakeover_data$Age[makeover_data$Age == \"90_and_Over\"] &lt;- \"90\"\n\nmakeover_data$Age &lt;- as.numeric(makeover_data$Age)\n\npyramid_data &lt;- makeover_data %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(inv_Pop = ifelse(Sex == \"Males\", -Pop, Pop))\n\nr1 &lt;- ggplot(pyramid_data, aes(x = Age, y = inv_Pop, fill = Sex)) +\n  geom_area(stat = \"identity\", colour = \"grey30\") +\n  coord_flip() +\n  scale_y_continuous(labels = abs, limits = c(-40000, 40000)) +\n  scale_x_continuous(breaks = seq(0, 90, by = 10), position = \"top\") +\n  labs(title = \"Singapore's Population Pyramid (2024)\",\n       x = NULL, y = \"Population\",\n       fill = \"Sex\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.margin = margin(0.2, 0, 0.2, 0.2, \"cm\")\n  ) +  \n  scale_fill_manual(\n    name = \"Sex\",\n    values = c(\n      \"Males\" = \"#56BCC2\",\n      \"Females\" = \"#E87D72\"),\n    breaks = c(\"Males\", \"Females\")\n  )\n\nr2 &lt;- ggplot(pyramid_data, aes(x = Age, y = Pop, fill = Sex)) +\n  geom_area(stat = \"identity\", position = \"identity\", alpha = 0.5, width = 1, colour = \"grey30\") +\n  coord_flip() +\n  scale_y_continuous(labels = abs, limits = c(0, 40000)) +\n  scale_x_continuous(breaks = seq(0, 90, by = 10)) +\n  labs(x = \"Age\", y = \"Population\",\n       fill = \"Sex\") +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.margin = margin(0.2, 0.2, 0.2, 0, \"cm\")\n  )\n\nr1 + r2 +\n  plot_layout(widths = c(3, 1))\n\n\n\n\n\n\n\n\n\n\n\n\n\nGood Design Choices\n\n\n\n\nThe horizontal bar chart of Population across Age, with Males on the left and Females on the right, clearly demonstrates his design intent of creating a population pyramid segmented by Sex.\nThe use of colours effectively distinguishes the Genders, with Males in blue and Females in red.\nThe inclusion of a clear title and legend reinforces the design intent by specifying that the chart represents Singapore’s Population Pyramid for the year 2024 and confirms the Gender colour association.\n\n\n\n\n\n\n\n\n\nPoor Design Choices and My Improvements\n\n\n\n\nThe y-axis is overly clustered with numbers overlapping, making it difficult to read.\n\nImprovements: For the Age column, the string label 90_and_Over was converted to an integer value of 90, and formatted the y-axis to display in increments of 10.\n\nSome sections of the bar chart display a white divider between bars, while others do not, resulting in an inconsistent and a messy appearance. It is also difficult to compare Gender populations at specific Ages.\n\nImprovements: An area chart with black outlines was used instead of a bar chart for a cleaner visual. Additionally, a comparative overlay chart was placed to the right of the plot to facilitate easy comparisons between Male and Female populations.\n\nThe Male and Female charts uses different x-axis scales, which misleadingly suggests similar population sizes. Additionally, the legend order (Females → Males) does not match the chart order (Males → Females).\n\nImprovements: Standardised the x-axis for both Genders to 0-40,000. The legend was also reordered to reflect the chart layout (Males → Females).\n\n\n\n\n\n1-2: 2.1.1 Techical Explanation\nThis section will cover the code and techniques used to improve on Rajesh’s “Singapore’s Population Pyramid” visualisation.\n\nThe Age column was converted to string format before replacing 90_and_Over with 90. Then, the column was converted to a numerical formal.\nThe bar graph was changed to an area graph using geom_area() instead of geom_bar().\nThe x-axis scale was fixed by using scale_y_continuous(labels = abs, limits = c(-40000, 40000)) to set the range to be from -40,000 to 40,000.\nscale_y_continuous() was used because after coord_flip(), it adjusts the x-axis instead.\nThe legend position was switch to the bottom using theme() and the legend order was fixed using scale_fill_manual().\nFinally, the overlaid gender chart was created using the same geom_area() method but using y = Pop instead of y = inv_Pop.\n\n\n\n1-2: 2.1.1 Summary\n\n\n\n\n\n\nImprovements\n\n\n\n\nThe improved graph is cleaner.\nThe Male and Female graphs are scaled according to their respective population sizes.\nThe population difference between Males and Females can be viewed easily through the graph on the right.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#most-populous-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#most-populous-planning-areas",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-2: 2.2 Most Populous Planning Areas",
    "text": "1-2: 2.2 Most Populous Planning Areas\n\nRajesh’sMy Improvements\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ntop_pa &lt;- raj_data %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Total_Pop = sum(Pop)) %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  slice_head(n = 10)\n\nggplot(top_pa, aes(x = reorder(PA, Total_Pop), y = Total_Pop)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(title = \"Top 10 Most Populous Planning Areas (2024)\",\n       x = \"Planning Area\", y = \"Total Population\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nregion_mapping &lt;- tibble::tibble(\n  PA = c(\n    # Central\n    \"Bishan\", \"Bukit Merah\", \"Bukit Timah\", \"Downtown Core\", \"Geylang\", \"Kallang\",\n    \"Marine Parade\", \"Museum\", \"Newton\", \"Novena\", \"Orchard\", \"Outram\",\n    \"Queenstown\", \"River Valley\", \"Rochor\", \"Singapore River\", \"Southern Islands\",\n    \"Tanglin\", \"Toa Payoh\",\n\n    # East\n    \"Bedok\", \"Changi\", \"Pasir Ris\", \"Tampines\",\n\n    # North-East\n    \"Ang Mo Kio\", \"Hougang\", \"Punggol\", \"Sengkang\", \"Serangoon\", \"Seletar\",\n\n    # North\n    \"Mandai\", \"Sembawang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\",\n\n    # West\n    \"Bukit Batok\", \"Bukit Panjang\", \"Choa Chu Kang\", \"Clementi\", \"Jurong East\",\n    \"Jurong West\", \"Tengah\", \"Western Water Catchment\"\n  ),\n  Region = c(\n    rep(\"Central\", 19),\n    rep(\"East\", 4),\n    rep(\"North-East\", 6),\n    rep(\"North\", 5),\n    rep(\"West\", 8)\n  )\n)\n\n# Join with data\nmakeover_data &lt;- makeover_data %&gt;%\n  left_join(region_mapping, by = \"PA\")\n\nregion_pa &lt;- makeover_data %&gt;%\n  group_by(PA, Region) %&gt;%\n  summarise(Total_Pop = sum(Pop)) %&gt;%\n  arrange(desc(Total_Pop)) %&gt;%\n  filter(Total_Pop &gt; 0)\n\nregion_pa_order &lt;- region_pa %&gt;%\n  distinct(PA, Total_Pop) %&gt;%\n  arrange(Total_Pop) %&gt;%\n  pull(PA)\n\nregion_pa &lt;- region_pa %&gt;%\n  mutate(\n    PA = factor(PA, levels = region_pa_order)\n    )\n\nr1 &lt;- ggplot(region_pa, aes(x = PA, y = Total_Pop, fill = Region)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  labs(title = \"Most Populous Planning Areas (2024)\",\n       x = \"Planning Area\", y = \"Total Population\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::comma) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\nbottom10 &lt;- region_pa %&gt;%\n  filter(PA %in% head(pa_order, 10))\n\nr2 &lt;- ggplot(data = bottom10, \n       aes(x = PA, y = Total_Pop, fill = Region)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  theme_test() +\n  labs(\n    x = NULL,\n    y = NULL\n  ) +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\nzoom_rect &lt;- ggplot() +\n  geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1),\n            fill = NA, color = \"steelblue\", linetype = \"dashed\") +\n  theme_void()\n\nggdraw() +\n  draw_plot(r1, 0, 0, 1, 1) +\n  draw_plot(r2, 0.4, 0.185, 0.56, 0.25) +\n  draw_plot(zoom_rect, 0.005, 0.155, 0.3, 0.206) +\n  draw_plot(zoom_rect, 0.37, 0.18, 0.62, 0.27) # (left , btm, right, top)\n\n\n\n\n\n\n\n\n\n\n\n\n\nGood Design Choices\n\n\n\n\nThe graph displaying the Top 10 Most Populous Planning Areas in Singapore is clean and easy to interpret.\nThe title is appropriate for the graph and informative.\nAxis are correctly labelled with Planning Area and Total Population, aiding interpretation.\n\n\n\n\n\n\n\n\n\nBad Design Choices and My Improvements\n\n\n\n\nThe x-axis uses scientific notation, which is not reader-friendly.\n\nImprovements: Changed the x-axis formatting to use standard numerical values with comma-separators for thousands.\n\nThe graph is overly simplistic and lacks depth, missing an opportunity to provide broader insights into Singapore’s Demographic distribution.\n\nImprovements: Added a secondary Region field to segment the Planning Areas.\n\nThe graph excludes data on the remaining Planning Areas in Singapore.\n\nImprovements: Expanded the chart to include all populated Planning Areas, and introduced a zoomed-in section for the 10 least populous Planning Areas for better clarity on their regional classification.\n\n\n\n\n\n1-2: 2.2.1 Techical Explanation\nThis section will cover the code and techniques used to improve on Rajesh’s “Most Populous Planning Areas” visualisation.\n\nI had already implemented segregating Planning Areas by Sex in Take-Home Exercise 1-1: Population Across Planning Areas by Sex. Therefore, while looking through my classmates’ submissions, I was inspired to use the approach by DO QUYNH TRANG in implementing Regions.\nThe data was then grouped by PA and Region.\nscale_y_continuous(labels = scales::comma) was used to convert the x-axis formatting from standard numerical values to comma-separators for thousands.\nThe rest of the implementation is similar to my approach in Take-Home Exercise 1-1: Population Across Planning Areas by Sex.\n\n\n\n1-2: 2.2.1 Summary\n\n\n\n\n\n\nImprovements\n\n\n\n\nThe improved graph provides information on all the Planning Areas instead of just the top 10 most populous ones. _ The improved graph is segregated by Regions and provides additional insights.\n\nFor example, the Planning Areas in the bottom half of the plot are predominately composed of those in the Central region.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#gender-ratio-by-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01-2/Take-home_Ex01-2.html#gender-ratio-by-planning-areas",
    "title": "Take-Home Exercise 1-2: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-2: 2.3 Gender Ratio by Planning Areas",
    "text": "1-2: 2.3 Gender Ratio by Planning Areas\n\nRajesh’sMy Improvements\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ngender_ratio &lt;- raj_data %&gt;%\n  group_by(PA, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  pivot_wider(names_from = Sex, values_from = Pop) %&gt;%\n  filter(!is.na(Males) & !is.na(Females) & Females &gt; 0) %&gt;%  \n  mutate(Gender_Ratio = Males / Females)\n\nggplot(gender_ratio, aes(x = reorder(PA, Gender_Ratio), y = Gender_Ratio)) +\n  geom_col(fill = \"purple\") +\n  coord_flip() +\n  labs(title = \"Gender Ratio (Males/Females) by Planning Area (2024)\",\n       x = \"Planning Area\", y = \"Gender Ratio\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ngender_ratio &lt;- makeover_data %&gt;%\n  group_by(PA, Sex) %&gt;%\n  summarise(Total_Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  group_by(PA) %&gt;%\n  mutate(\n    TotalInGroup = sum(Total_Pop),\n    Proportion = Total_Pop / TotalInGroup * 100) %&gt;%\n  filter(!is.na(Proportion))\n\ngender_ratio_males &lt;- gender_ratio %&gt;%\n  filter(Sex == \"Males\")\n\ngender_ratio_order &lt;- gender_ratio_males %&gt;%\n  arrange(Proportion) %&gt;%\n  pull(PA)\n\ngender_ratio &lt;- gender_ratio %&gt;%\n  mutate(\n    PA = factor(PA, levels = gender_ratio_order)\n    )\n\nggplot(gender_ratio, aes(x = Proportion, y = PA, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  geom_vline(xintercept = 50, color = \"purple\", linetype = \"dashed\", linewidth = 1) + \n  labs(\n    title = \"Gender Ratio (Males/Females) by Planning Area (2024)\",\n    x = \"Percentage\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(hjust = 0.5),\n    plot.title = element_text(hjust = 0.5,size = 10, face = \"bold\"),\n    legend.position = \"bottom\"\n  ) +  \n  scale_fill_manual(\n    name = \"Sex\",\n    values = c(\n      \"Males\" = \"#56BCC2\",\n      \"Females\" = \"#E87D72\"),\n    breaks = c(\"Males\", \"Females\")\n  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nGood Design Choices\n\n\n\n\nThe graph is appropriately ordered, making it easy to identify which Planning Areas have higher Gender Ratios.\nThe title is concise and descriptive.\nThe axis are correctly labelled with Planning Area and Gender Ratio to clarify the data shown.\n\n\n\n\n\n\n\n\n\nBad Design Choices and My Improvements\n\n\n\n\nThe graph is difficult to understand since the concept of Gender Ratio is not intuitive. A value of 1 signifies equal numbers of Males and Females, while values above 1 indicates more Males.\n\nImprovements: Replaced the Gender Ratio with a Gender percentage distribution. The length of the Male/Female bar can then reflect their relative share within each Planning Area.\n\nThe y-axis, listing the Planning Areas, is crowded and lacks visual separation.\n\nImprovements: Increased the plot height using #| fig-height: 6 to improve readability and add space between the Planning Area labels.\n\nThe x-axis range (0 to ~1.1) does not represent the full spectrum of Gender Ratio, which should ideally be 0 to 2, with 1 as the median. This median is also missing from the graph.\n\nImprovements: Redefined the x-axis to span 0-100, and included a vertical line at 50 to denote the midpoint. Any bar exceeding this line indicates a Male-dominant area while those that do not reflect a Female-dominant one.\n\n\n\n\n\n1-2: 2.3.1 Techical Explanation\nThis section will cover the code and techniques used to improve on Rajesh’s “Gender Ratio by Planning Areas” visualisation.\n\nThe height of the plot was lengthened using #| fig-height: 6.\nThe data preparation step is similar to my approach in Take-Home Exercise 1-1: Percentage of Age Groups by Planning Areas, but instead of calculating the percentage of Age Groups for each Planning Area, I calculated the percentage of Sex for each Planning Area.\nA median line at 50% was added using geom_vline().\n\n\n\n1-2: 2.3.1 Summary\n\n\n\n\n\n\nImprovements\n\n\n\n\nThe improved graph is more visually appealing.\nIt is more intuitive and explains the population distributions between Males and Females better.\nThe new graph clearly shows that only two Planning Areas, Sungei Kadut and Changi, have a higher Male population compared to Females.",
    "crumbs": [
      "Take-Home Exercises",
      "1-2: Demographic Structures and Distribution of Singapore in 2024 (Part 2)"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Visual Analytics and Applications",
    "section": "",
    "text": "Reference: Picture Link\nThis webpage serves as a portfolio showcasing my coursework for ISSS608: Visual Analytics and Applications at Singapore Management University (SMU).\nThroughout the course, I gained hands-on experience in using RStudio for implementing various data visualization techniques, as well as Tableau for creating interactive dashboards. I also developed an understanding of version control using GitHub and learned how to publish analytical reports and dashboards using Quarto and deploy them as a website via Netlify. This portfolio reflects the practical skills and concepts I acquired in the course.\n\n\n\n\n\n\nNote\n\n\n\nPlease use the toggle at the top right to switch between light and dark mode based on your preference!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "",
    "text": "In this chapter, following visualisations will be covered:\n\nPlotting a calender heatmap using ggplot2 functions\nPlotting a cycle plot using ggplot2 functions\nPlotting a slopegraph\nPlotting a horizon chart",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#the-data",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.1 The Data",
    "text": "6: 3.1 The Data\nThe eventlog.csv file will be used for this exercise. This data file consists of 199,999 rows of time-series cyber attack records by country.",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#importing-the-data",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.2 Importing the Data",
    "text": "6: 3.2 Importing the Data\nThe code chunk below imports eventlog.csv into the R environment and calls this data frame attacks.\n\n\nShow code\nattacks &lt;- read_csv(\"data/eventlog.csv\")",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examining-the-data-structure",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#examining-the-data-structure",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.3 Examining the Data Structure",
    "text": "6: 3.3 Examining the Data Structure\nThe code chunk below will be used to examine the imported data frame before further analysis is performed. The function kable() is used to review the structure of the imported data frame.\n\n\nShow code\nkable(head(attacks))\n\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are 3 columns: timestamp, source_country, and tz.\n\ntimestamp: Stores data-time values in POSIXct format\nsource_country: Stores the source of the attack. It is in ISO3166-1 alpha-2 country code\ntz: Stores time zone of the source IP address",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#data-preparation",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.4 Data Preparation",
    "text": "6: 3.4 Data Preparation\n\nStep 1: Deriving weekday and hour of day fields\nTwo new fields namely wkday and hour needs to be derived before plotting the calendar heatmap. The code chunk below contains the function to perform this task.\n\n\nShow code\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts,\n                        tz = tz[1],\n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n}\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package\nweekdays() is a base R function.\n\n\n\n\n\nStep 2: Deriving the attacks tibble data frame\n\n\nShow code\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into the attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they will be ordered when plotting.\n\n\nThe table below shows the tibble table after processing.\n\n\nShow code\nkable(head(attacks))\n\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmap",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-the-calendar-heatmap",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.5 Building the Calendar Heatmap",
    "text": "6: 3.5 Building the Calendar Heatmap\nThe values every combination is available and there is no need to further process the data. The calendar heatmap will be created by grouping the count by hour and wkday and plotting it.The code chunk below is used to build the calendar heatmap.\n\ntheme_tufte()Default Theme\n\n\n\n\nShow code\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ntheme_tufte(base_family = \"Helvetica\") + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\ngrouped &lt;- attacks %&gt;% \n  count(wkday, hour) %&gt;% \n  ungroup() %&gt;%\n  na.omit()\n\nggplot(grouped, \n       aes(hour, \n           wkday, \n           fill = n)) + \ngeom_tile(color = \"white\", \n          size = 0.1) + \ncoord_equal() +\nscale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\nlabs(x = NULL, \n     y = NULL, \n     title = \"Attacks by weekday and time of day\") +\ntheme(axis.ticks = element_blank(),\n      plot.title = element_text(hjust = 0.5),\n      legend.title = element_text(size = 8),\n      legend.text = element_text(size = 6) )\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nA tibble data table called grouped is derived by aggregating the attack by wkday and hour fields.\nA new field called n is derived by using group_by() and count() functions.\nna.omit() is used to exclude missing values.\ngeom_tile() is used to plot tiles (grids) at each x and y position. color and size arguments are used to specify the border colour and line size of the tiles.\ntheme_tufte() of ggthemes package is used to remove unnecessary chart junk.\n\nThere is a dashed line around the default plot that is removed by using theme_tufte.\n\ncoord_equal() is used to ensure the plot will have an aspect ratio of 1:1.\nscale_fill_gradient() function is used to create a two colour gradient (low-high).",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#building-multiple-calendar-heatmaps",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 3.6 Building Multiple Calendar Heatmaps",
    "text": "6: 3.6 Building Multiple Calendar Heatmaps\nChallenge: Build multiple heatmaps for the top four countries with the highest number of attacks. An example of the desired graph is below.\n\n\n\n\n\n\nStep 1: Derive number of attacks by country object\nTo identify the top 4 countries with the highest attack numbers, the code below will achieve the following:\n\nCount the number of attacks by country\nCalculate the percentage of attacks by country\nSave the result in a tibble data frame\n\n\n\nShow code\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))\n\n\n\n\nStep 2: Prepare the tidy data frame\nThe code below extracts the top 4 countries from attacks data frame and saves the data in a new tibble data frame top4_attacks.\n\n\nShow code\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()\n\n\n\n\nStep 3: Plot the multiple calendar heatmap using the ggplot2 package\n\n\nShow code\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"sky blue\", \n                    high = \"dark blue\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 4.1 Step 1: Data Import",
    "text": "6: 4.1 Step 1: Data Import\nThe dataset arrivals_by_air.xlsx will be used for this exercise. The code chunk below imports it using read_excel() of the readxl package and saves it as a tibble data frame called air.\n\n\nShow code\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-deriving-month-and-year-fields",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 4.2 Step 2: Deriving Month and Year Fields",
    "text": "6: 4.2 Step 2: Deriving Month and Year Fields\nThe columns month and year are derived from the Month-Year field.\n\n\nShow code\nair$month &lt;- factor(month(air$'Month-Year'),\n                    levels = 1:12,\n                    labels = month.abb,\n                    ordered = TRUE)\nair$year &lt;- year(ymd(air$'Month-Year'))",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-3-extracting-the-target-country",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 4.3 Step 3: Extracting the Target Country",
    "text": "6: 4.3 Step 3: Extracting the Target Country\nNext, the code chunk below is use to extract data for the target country Vietnam.\n\n\nShow code\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-compute-year-avg-arrival-by-month",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-4-compute-year-avg-arrival-by-month",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 4.4 Step 4: Compute year avg arrival by month**",
    "text": "6: 4.4 Step 4: Compute year avg arrival by month**\nThe average arrival by month across the years will be computed using group_by() and summarise() from dplyr.\n\n\nShow code\nhline.data &lt;- Vietnam %&gt;%\n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#plotting-the-cycle-plot",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 4.5 Plotting the cycle plot",
    "text": "6: 4.5 Plotting the cycle plot\nThe code chunk below plots the cycle plot.\n\n\nShow code\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month) +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_tufte(base_family = \"Helvetica\")",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-1-data-import-1",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 5.1 Step 1: Data Import",
    "text": "6: 5.1 Step 1: Data Import\nThe code chunk below is used to import the rice data set into the R environment.\n\n\nShow code\nrice &lt;- read_csv(\"data/rice.csv\")\n\nkable(head(rice))\n\n\n\n\n\nCountry\nYear\nYield\nProduction\n\n\n\n\nChina\n1961\n20787\n56217601\n\n\nChina\n1962\n23700\n65675288\n\n\nChina\n1963\n26833\n76439280\n\n\nChina\n1964\n28289\n85853780\n\n\nChina\n1965\n29667\n90705630\n\n\nChina\n1966\n31445\n98403990",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex06/Hands-on_Ex06.html#step-2-plotting-the-slopegraph",
    "title": "Hands-On Exercise 6: Visualising and Analysing Time-oriented Data",
    "section": "6: 5.2 Step 2: Plotting the slopegraph",
    "text": "6: 5.2 Step 2: Plotting the slopegraph\nThe code chunk below will be used to plot a basic slopegraph.\n\nImproved PlotDefault Plot\n\n\n\n\nShow code\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Calvin Tan\",\n                DataTextSize = 2,\n                DataLabelLineSize = 0.2,\n                DataLabelFillColor = \"lightblue\") +\n  theme_hc() +\n  theme(legend.position = \"none\",\n        axis.text.y = element_text(size = 6, color = \"black\")) +\n  labs(y = \"Rice Yield\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = \"Prepared by: Dr. Kam Tin Seong\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to learn\n\n\n\nFor effective data visualisation design, factor() is used to convert the value type of Year field from numeric to factor.",
    "crumbs": [
      "Hands-On Exercises",
      "6: Visualising and Analysing Time-oriented Data"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "",
    "text": "Visualising uncertainty is relatively new in statistical graphics. This exercise will cover creating statistical graphics for visualising uncertainty which includes the following:\n\nPlot statistics error bars by using ggplot2\nPlot interactive error bars by combining ggplot2, plotly and DT\nCreate advance visualisations using ggdist\nCreate hypothetical outcome plots (HOPs) with ungeviz package",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#installing-and-loading-packages",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 2.1 Installing and Loading Packages",
    "text": "4-4: 2.1 Installing and Loading Packages\nThe following R packages will be used for this exercise:\n\ntidyverse: A family of R packages for data science process\nplotly: Create interactive plots\ngganimate: Create animation plots\nDT: Display interactive HTML tables\ncrosstalk: Implement cross-widget interactions (currently, linked brushing and filtering)\nggdist: Visualise distribution and uncertainty\n\n\n\nShow code\npacman::p_load(plotly, crosstalk, DT, \n               ggdist, ggridges, colorspace,\n               gganimate, tidyverse)",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#importing-data",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 2.2 Importing data",
    "text": "4-4: 2.2 Importing data\nThe Exam_data.csv dataset will be used for this exercise.\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 3.1 Plotting Standard Error Bars of Point Estimates",
    "text": "4-4: 3.1 Plotting Standard Error Bars of Point Estimates\nThe preparation above enables plotting standard error bars for the mean Maths score by Race.\n\nImproved PlotOriginal Plot\n\n\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard Error of Mean Maths Score by Race\") +\n  labs(\n    x = NULL,\n    y = 'Maths Score')\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by rac\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe improved plot fixes the title, removes the unnecessary x-axis and renames the y-axis.",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 3.2 Plotting Confidence Interval of Point Estimates",
    "text": "4-4: 3.2 Plotting Confidence Interval of Point Estimates\nInstead of plotting error bars of point estimates, we can also plot confidence intervals of the mean Maths score by Race.\n\nImproved PlotOriginal Plot\n\n\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"95% Confidence Interval of Mean Maths Score by Race\") +\n  labs(\n    x = NULL,\n    y = 'Maths Score')\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    linewidth=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nThe Confidence Intervals are computed by using the formula mean +/- 1.96*se\nThe error bars are sorted using the average maths scores\nlabs() argument of ggplot2 is used to change the axis labels\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe improved plot fixes the wrongly labelled x-axis to the y-axis.",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 3.3 Visualising the Uncertainty of Point Estimates with Interactive Error Bars",
    "text": "4-4: 3.3 Visualising the Uncertainty of Point Estimates with Interactive Error Bars\nThis section will cover plotting interactive error bars for the 99% confidence interval of the mean Maths score by Race.\n\nImproved PlotOriginal Plot\n\n\n\n\nShow code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(5,7),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(NULL) + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1),\n                     plot.title = element_text(size = 12)) +\n                   ggtitle(\"99% CI of Avg Maths &lt;br&gt;Score by Race\")), \n                tooltip = \"text\"),\n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     colnames = c(\"No. of Pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe original plot has a very compressed graph and the title is cut off. This was fixed by adjusting bscols(widths), shortening the title, and adjust the title font size.",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-1",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-1",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 4.1 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 1)",
    "text": "4-4: 4.1 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 1)\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying the distribution of Maths score by Race.\n\nDefault PlotModified Plot (95%, Median, QI)\n\n\n\n\nShow code\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval() +\n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow code\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n  .point = median,\n  .interval = qi) +\n  labs(\n    title = \"Visualising confidence intervals of median math score\",\n    subtitle = \"Median Point + Multiple-interval plot\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis function comes with many arguments. The second plot is modified with the following: - .width = 0.95 - .point = median (Options: mean, median, or mode) - .interval = qi (Options: quantile interval [qi], highest-density interval [hdi]; or highest-density continuous interval [hdci])",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-2",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-2",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 4.2 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 2)",
    "text": "4-4: 4.2 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 2)\nThe plot below shows the 95% and 99% confidence intervals.\n\n\nShow Code\nexam %&gt;%\n  ggplot(aes(x = RACE, y = MATHS)) +\n  stat_pointinterval(\n    .width = c(0.95, 0.99),\n    .point = mean,\n    aes(\n      interval_color = after_stat(level)\n      ),\n    .interval = qi,\n    show.legend = FALSE\n  ) +   \n  labs(\n    title = \"Visualising Confidence Intervals of Mean Maths Score by Race\",\n    subtitle = \"Mean (Black) Point + 95% (Grey) and 99% (Red) CI\",\n    x = NULL,\n    y = 'Maths Score'\n  ) +\n  scale_color_manual(\n    values = c(\"red\", \"grey50\"),\n    aesthetics = \"interval_color\"\n  ) +\n  theme_minimal()",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-3",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-the-uncertainty-of-point-estimates-ggdist-methods-part-3",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 4.3 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 3)",
    "text": "4-4: 4.3 Visualising the Uncertainty of Point Estimates: ggdist Methods (Part 3)\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of Maths score by Race.\n\nImproved PlotPlot\n\n\n\n\nShow Code\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE,\n    aes(\n      interval_color = after_stat(level)\n      )\n  ) +                        \n  labs(\n    title = \"Visualising Confidence Intervals of Mean Math Score by Race\",\n    subtitle = \"Gradient + Interval Plot\",\n    x = NULL,\n    y = 'Maths Score') +\n  scale_color_manual(\n    values = c(\"red\", \"grey50\"),\n    aesthetics = \"interval_color\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualising confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#installing-ungeviz-package",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#installing-ungeviz-package",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 5.1 Installing ungeviz Package",
    "text": "4-4: 5.1 Installing ungeviz Package\n\n\nShow Code\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\n\n\n\n\nNote\n\n\n\nYou only need to perform this step once.",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#launch-the-application-in-r",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#launch-the-application-in-r",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 5.2 Launch the Application in R",
    "text": "4-4: 5.2 Launch the Application in R\n\n\nShow Code\nlibrary(ungeviz)",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "href": "Hands-on_Ex/Hands-on_Ex04-4/Hands-on_Ex04-4.html#visualising-uncertainty-with-hypothetical-outcome-plots-hops-1",
    "title": "Hands-On Exercise 4-4: Visualising Uncertainty",
    "section": "4-4: 5.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)",
    "text": "4-4: 5.3 Visualising Uncertainty with Hypothetical Outcome Plots (HOPs)\nThe code chunk below will be used to build the HOPs.\n\nMaths by Race PlotEnglish by Race PlotScience by Race PlotDefault Plot\n\n\n\n\nShow Code\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#FF0000\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  labs(\n    x = NULL,\n    y = 'Maths Score',\n    title = 'HOPS of Maths by Race')\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#1B00C0\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  labs(\n    x = NULL,\n    y = 'English Score',\n    title = 'HOPS of English by Race')\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#00A834\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3) +\n  labs(\n    x = NULL,\n    y = 'Science Score',\n    title = 'HOPS of Science by Race')\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nggplot(data = exam, \n       (aes(x = factor(RACE), \n            y = MATHS))) +\n  geom_point(position = position_jitter(\n    height = 0.3, \n    width = 0.05), \n    size = 0.4, \n    color = \"#0072B2\", \n    alpha = 1/2) +\n  geom_hpline(data = sampler(25, \n                             group = RACE), \n              height = 0.6, \n              color = \"#D55E00\") +\n  theme_bw() + \n  transition_states(.draw, 1, 3)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThis graph demonstrates visually that with a bigger dataset, there is more certainty since the variability is smaller.",
    "crumbs": [
      "Hands-On Exercises",
      "4-4: Visualising Uncertainty"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "",
    "text": "Visualising distribution is not new in statistical analysis. The popular statistical graphics methods for visualising distribution, such as histogram, probability density curve (pdf), boxplot, notch plot and violin plot, and how they can be created using ggplot2 can be found in Hands-On Exercise 1. In this exercise will focus on two relatively new statistical graphic methods for visualising distribution, namely ridgeline plot and raincloud plot using ggplot2 and its extensions.",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#installing-and-loading-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#installing-and-loading-packages",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 2.1 Installing and Loading Packages",
    "text": "4-2: 2.1 Installing and Loading Packages\nThe following R packages will be used for this exercise:\n\nggridges: A ggplot2 extension specially designed for plotting ridgeline plots\nggdist: A ggplot2 extension specially designed for visualising distribution and uncertainty\ntidyverse: A family of R packages to meet the modern data science and visual communication needs\nggthemes: A ggplot extension that provides the user additional themes, scales, and geoms for the ggplots package\ncolorspace: An R package providing a broad toolbox for selecting individual colours or colour palettes, manipulating these colours, and employing them in various kinds of visualisations.\npatchwork: an R package for preparing composite figure created using ggplot2\n\nThe code chunk below will be used to load these R packages into the RStudio environment.\n\n\nShow Code\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse, patchwork)",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#data-import",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 2.2 Data Import",
    "text": "4-2: 2.2 Data Import\nFor the purpose of this exercise, Exam_data.csv will be used.\nIn the code chunk below, read_csv() of readr package is used to import Exam_data.csv into R and saved it into a tibble data.frame.\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 3.1 Plotting ridgeline Graph: ggridges Method",
    "text": "4-2: 3.1 Plotting ridgeline Graph: ggridges Method\nThere are several ways to plot ridgeline plots with R. In this section, the ggridges package will be used to plot ridgeline plots.\nggridges package provides two main geom to plot ridgeline plots. They are: grom_ridgeline() and geom_density_ridges(). The former takes height values directly to draw the ridgelines, and the latter first estimates data densities and then draws those using ridgelines.\nThe ridgeline plot below is plotted by using geom_density_ridges().\n\n\nShow code\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"#7097BB\", .3),\n    color = \"white\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = \"CLASS\", expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#varying-fill-colours-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#varying-fill-colours-along-the-x-axis",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 3.2 Varying Fill Colours Along the X-Axis",
    "text": "4-2: 3.2 Varying Fill Colours Along the X-Axis\nSometimes we would like to have the area under a ridgeline not filled with a single solid colour but rather with colours that vary in some form along the x axis. This effect can be achieved by using either geom_ridgeline_gradient() or geom_density_ridges_gradient().\nBoth geoms work just like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colours. However, they do not allow for alpha transparency in the fill. For technical reasons, it can either be changing fill colours or transparency but not both.\n\n\n\n\n\n\nNote\n\n\n\nThe available colours are “A” to “H”.\n\n\n\nPlasmaOthers 1Others 2\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"C\") + # Available options are A to H\n  scale_x_continuous(name = \"English grades\",\n                     expand = c(0,0)\n  ) +\n  scale_y_discrete(name = \"CLASS\", expand = expansion(add = c(0.2, 2.6))) +\n    theme_ridges() +\n  ggtitle('Plasma')",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#mapping-the-probabilities-directly-onto-colour",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#mapping-the-probabilities-directly-onto-colour",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 3.3 Mapping the Probabilities Directly onto Colour",
    "text": "4-2: 3.3 Mapping the Probabilities Directly onto Colour\nBesides providing additional geom objects to support the need to plot ridgeline plot, ggridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nFigure below is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nscale_fill_viridis_bscale_fill_viridis_c\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, y = CLASS,\n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom=\"density_ridges_gradient\",\n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_b(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges() \n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = ENGLISH, y = CLASS,\n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom=\"density_ridges_gradient\",\n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = -1) +\n  theme_ridges() \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nscale_fill_viridis_b / c controls how granular the colours are mixed\nscale_fill_viridis_d is for discrete variables",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 3.4 Ridgeline Plots with Quantile Lines",
    "text": "4-2: 3.4 Ridgeline Plots with Quantile Lines\nBy using geom_density_ridges_gradient(), we can colour the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the first figure below.\nOr, instead of using number to define the quantiles, we can also specify quantiles by cutting points such as 2.5% and 97.5% tails to colour the ridgeline plot, shown in the second figure below.\n\n4 QuantilesManual Quantiles\n\n\n\n\nShow Code\nggplot(exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"Density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quantiles\") +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nggplot(exam,\n       aes(x = ENGLISH,\n           y = CLASS,\n           fill = factor(stat(quantile)))) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE,\n    quantiles = c(0.025, 0.975)\n  ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"#FF0000A0\", \"#A0A0A0A0\", \"#0000FFA0\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#plotting-a-half-eye-graph",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 4.1 Plotting a Half Eye Graph",
    "text": "4-2: 4.1 Plotting a Half Eye Graph\nFirst, a Half-Eye graph will be plotted by using stat_halfeye() of ggdist package.\nThis produces a Half Eye visualisation, which contains a half-density and a slab-interval.\n\nPlot (with slab interval)Plot (without slab interval)\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\nThe slab interval was removed by setting .width = 0 and point_colour = NA.",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#adding-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#adding-boxplot-with-geom_boxplot",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 4.2 Adding Boxplot with geom_boxplot()",
    "text": "4-2: 4.2 Adding Boxplot with geom_boxplot()\nNext, the second geometry layer will be added using geom_boxplot() of ggplot2. This produces a narrow boxplot. The width will be reduced and the opacity will be adjusted.\n\n\n\n\n\n\nNote\n\n\n\nBut it seems that opacity of boxplot cannot be adjusted using alpha.\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = 0.2,\n               outlier.shape = NA)",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#adding-dot-plot-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#adding-dot-plot-with-stat_dots",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 4.3 Adding Dot plot with stat_dots",
    "text": "4-2: 4.3 Adding Dot plot with stat_dots\nNext, the third geometry layer will be added using stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = 0.2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            binwidth = .5,\n            dotsize = 2)",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex04-2/Hands-on_Ex04-2.html#finishing-touch",
    "title": "Hands-On Exercise 4-2: Visualising Distribution",
    "section": "4-2: 4.4 Finishing Touch",
    "text": "4-2: 4.4 Finishing Touch\nLastly, coord_flit() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nImproved PlotOriginal Plot\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = 0.2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggplot(exam,\n       aes(x = RACE,\n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA) +\n  geom_boxplot(width = 0.2,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\",\n            justification = 1.2,\n            binwidth = .5,\n            dotsize = 1.5) +\n  coord_flip() +\n  theme_economist()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe bin width is an important variable and resulted in the first graph having points clipped out due to coord_flip(). This can be left empty to let the graph decide automatically.",
    "crumbs": [
      "Hands-On Exercises",
      "4-2: Visualising Distribution"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When telling a visually-driven data story, animated graphics tends to attract the interest of the audience and make deeper impression than static graphics. In this hands-on exercise, animated data visualisation will be created using gganimate and plotly r packages. At the same time, data (i) reshaped by using tidyr package, and (ii) processed, wrangled and transformed with dplyr package.\n\n\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot to convey motion, which is built using some relevant subset of the aggregated data.The subset drives the flow of the animation when stitched back together.\n\n\n\n\n\n\n\n\nBefore diving into the steps for creating an animated statistical graph, it is important to understand some of the key concepts and terminology related to this type of visualisation.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nDoes it make sense to go through the effort of making animated graphs?\n\n\n\nBefore making animated graphs, think of the above question first.\n\nAn animated graphic may not be worth the time investment for just exploratory data analysis.\nHowever, in a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts.",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#basic-xoncepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#basic-xoncepts-of-animation",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot to convey motion, which is built using some relevant subset of the aggregated data.The subset drives the flow of the animation when stitched back together.",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#terminology",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "Before diving into the steps for creating an animated statistical graph, it is important to understand some of the key concepts and terminology related to this type of visualisation.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nDoes it make sense to go through the effort of making animated graphs?\n\n\n\nBefore making animated graphs, think of the above question first.\n\nAn animated graphic may not be worth the time investment for just exploratory data analysis.\nHowever, in a presentation, a few well-placed animated graphics can help an audience connect with your topic remarkably better than static counterparts.",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#loading-the-r-packages",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 2.1 Loading the R packages",
    "text": "3-2: 2.1 Loading the R packages\nFirst, write a code chunk to check, install and load the following R packages:\n\nplotly: An R library for plotting interactive statistical graphs\ngganimate: A ggplot extension for creating animated statistical graphs\ngifski: Converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colours per frame.\ngapminer: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme\ntidyverse: A family of modern R packages specially designed to support data science, analysis and communication task including creating static statistical graphs.\n\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#importing-the-data",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 2.2 Importing the Data",
    "text": "3-2: 2.2 Importing the Data\nIn this hands-on exercise, the Data worksheet from GlobalPopulation Excel workbook will be used.\nWrite a code chunk to import Data worksheet from GlobalPopulation Excel workbook by using appropriate R package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_each_(funs(factor(.)), col) %&gt;% # mutate_each\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nread_xls of readxl package is used to import the Excel worksheet\nmutate_each_() of dplyr package is used to convert all character data type into factor\nmutate of dplyr package is used to convert data values of Year field into integer\n\n\n\nUnfortunately, mutate_each_() was deprecated in dplyr 0.7.0 and funs() was deprecated in dplyr 0.8.0.\n\nIn view of this, we will re-write the code by using mutate_at()(link is different from notes) as shown in the code chunk below\nInstead of using mutate_at(), across() can be used to derive the same outputs\n\n\nUsing mutate_at()Using mutate(across())\n\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet = \"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;% # mutate_at()\n  mutate(Year = as.integer(Year))\n\n\n\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet = \"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;% # mutate(across())\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBoth methods achieve the same results!",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-a-static-population-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-a-static-population-bubble-plot",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 3.1 Building a Static Population Bubble Plot",
    "text": "3-2: 3.1 Building a Static Population Bubble Plot\nIn the code chunk below, the basic ggplot2 functions are used to create a static bubble plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young,\n                      size = Population,\n                      colour = Country)) +\n  geom_point(alpha = 0.7,\n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2,12)) +\n  labs(title = 'Year: {frame_time}',\n       x = '% Aged',\n       y = '% Young')",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-the-animated-bubble-plot",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-the-animated-bubble-plot",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 3.2 Building the Animated Bubble Plot",
    "text": "3-2: 3.2 Building the Animated Bubble Plot\nIn the code chunk below,\n\ntransition_time() of gganimate is used to create transition through distinct states in time (i.e. Year)\nease_aes() is used to control easing of aesthetics. The default is linear.\n\nOther methods are: quadratic, cubic, quartic, quintic, sine, circular, exponential, elastic, back, and bounce.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-an-animated-bubble-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-an-animated-bubble-plot-ggplotly-method",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 4.1 Building an Animated Bubble Plot: ggplotly() Method",
    "text": "3-2: 4.1 Building an Animated Bubble Plot: ggplotly() Method\nIn this sub-section, an animated bubble plot will be created by using the ggplotly() method.\n\nNew Plot (without legend)CodeOriginal Plot (with legend)\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe animated bubble plot above includes a play/pause button and a slider component for controlling the animation\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nAppropriate ggplot2 functions are used to create a static bubble plot. The output is then saved as an R object called gg.\nggplotly() is then used to convert the R graphic object into an animated svg object.\n\n\n\nNotice that although show.legend = FALSE argument was used, the legend still appears on the plot. To overcome this problem, theme(legend.position='none') should be used as shown in the plot and code chunk below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-an-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#building-an-animated-bubble-plot-plot_ly-method",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 4.2 Building an Animated Bubble Plot: plot_ly() Method",
    "text": "3-2: 4.2 Building an Animated Bubble Plot: plot_ly() Method\nIn this sub-section, an animated bubble plot will be created with the plot_ly() method.\n\nplot_ly() Plotplot_ly() Codeggplotly() Code\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old,\n          y = ~ Young,\n          size = ~Population,\n          color = ~Continent,\n          sizes = c(2,100),\n          frame = ~Year,\n          text = ~Country,\n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\n\n\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nggplotly(gg)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe plot_ly() method is much simpler and easier to read and code compared to the ggplotly() method due to its simpler syntax and fewer layers of customisation.\n\nThe execution time needed for plot_ly() is also lower.",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#improving-animated-bubble-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-2/Hands-on_Ex03-2.html#improving-animated-bubble-plot-plot_ly-method",
    "title": "Hands-On Exercise 3-2: Programming Animated Statistical Graphics with R",
    "section": "3-2: 4.3 Improving Animated Bubble Plot: plot_ly() Method",
    "text": "3-2: 4.3 Improving Animated Bubble Plot: plot_ly() Method\nChanges implemented: - Bubble size - Added legend\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old,\n          y = ~ Young,\n          size = ~Population,\n          color = ~Continent,\n          sizes = c(10,600),\n          frame = ~Year,\n          text = ~Country,\n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          )\nbp\n\n\n3-2: 5 Reference\n\nGetting Started\nVisit this link for a very interesting implementation of gganimate by an SMU senior\nBuilding an animation step-by-step with gganimate\nCreating a composite gif with multiple gganimate panels",
    "crumbs": [
      "Hands-On Exercises",
      "3-2: Programming Animated Statistical Graphics with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this chapter, several ggplot2 extensions were used to create a more elegant and effective statistical graphics. By the end of this exercise, the following will be performed:\n\nControl the placement of annotation on a graph by using functions provided in ggrepel package\nCreate professional publication quality figure by using functions provided in ggthemes and hrbrtheme packages\nPlot composite figure by combing ggplot2 graphs by using patchwork package",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#install-and-load-the-required-libraries",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 2.1 Install and Load the Required Libraries",
    "text": "2: 2.1 Install and Load the Required Libraries\nIn this exercise, besides tidyverse (Explored in Hands-on Exercised 1), four R packages will be used. They are:\n\nggrepel: an R package providing geoms for ggplot2 to repel overlapping text labels\nggthemes: an R package providing some extra themes, geoms, and scales for ggplot2\nhrbrthemes: an R package providing typography-centric themes and theme components for ggplot2\npatchwork: an R package for preparing composite figure created using ggplot2\n\nCode chunk below will be used to check if these packages have been installed and also load them onto my working R environment.\n\npacman::p_load(ggrepel, patchwork,\n               ggthemes, hrbrthemes,\n               tidyverse,stringr)",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 2.2 Importing Data",
    "text": "2: 2.2 Importing Data\nFor the purpose of this exercise, a data file called Exam_data will be used. It consists of year end examination grades of a cohort of primary 3 students from a local school. It is in csv file format.\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package. readr is one of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThere are a total of seven attributes in the exam_data tibble data frame. Four of them are categorical data type and the other three are in continuous data type.\n\nCategorical Attributes: ID, CLASS, GENDER and RACE.\nContinuous Attributes: MATHS, ENGLISH and SCIENCE.",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 3.1 Working with ggrepel",
    "text": "2: 3.1 Working with ggrepel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nUsing the Repel code modifies the Default Plot such that only non-overlapping labels are shown and the Best-fit Curve is visible now as compared to being blocked by all the labels in the Default Plot.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code uses patchwork for easier comparisons between graphs. Further explanation on how to create it can be found in Section 2.5.1\n\n\n\nDefault CodeWith Repel Code\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm,\n              linewidth=0.5) +\n  geom_label(aes(label = ID),\n             hjust = .5,\n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"Default\")\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS,\n           y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm,\n              linewidth = 0.5) +\n  geom_label_repel(aes(label = ID),\n                   fontface = \"bold\") +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  ggtitle(\"With Repel\")",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-packages",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-packages",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 4.1 Working with ggtheme Packages",
    "text": "2: 4.1 Working with ggtheme Packages\nggthemes provides ggplot2 themes that replicate the look of plots by Edward Tuffe, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nIn the example below, a plot of “Distribution of Maths Scores” was done using various themes.\n\nggtheme 1ggtheme 2ggtheme 3Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins = 20,\n                 boundary = 100,\n                 color = \"grey25\",\n                 fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist() # Change this to different themes\n                    # ggtheme2 top right is theme_solid\n\n\n\n\nIt also provides some extra geoms and scales for ggplot2. Consult this vignette to learn more.",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 4.2 Working with hrbrthemes Package",
    "text": "2: 4.2 Working with hrbrthemes Package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\nThe second goal centers around productivity for a production workflow. In fact, this “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\nIn the example below, a plot of “Distribution of Maths Scores” was done using various settings.\n\nDefault theme vs Default theme_ipsum()Default theme_ipsum() vs Modified theme_ipsum()Code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data,\n       aes(x = MATHS)) +\n  geom_histogram(bins=20,\n                 boundary=100,\n                 color=\"grey25\",\n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_text_size = 18,\n              base_size = 15,\n              grid = \"Y\") # Default has no theme, and Default theme_ipsum has no extra parameters\n\n\n\n\n\n\n\n\n\n\nWhat can we learn from the code chunk above?\n\n\n\n\naxis_title_size argument is used to increase the font size of the axis title to 18\nbase_size argument is used to increase the default axis label to 15\ngrid argument is used to remove the x-axis grid lines",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-patchwork-methods",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.1 Creating Composite Graphics: patchwork Methods",
    "text": "2: 5.1 Creating Composite Graphics: patchwork Methods\nThere are several ggplot2 extension’s functions support the needs to prepare composite figure by combining several graphs such as grid.arrange() of gridExtra package and plot_grid() of cowplot package. The ggplot2 extension extension called patchwork  is specially designed for combining separate ggplot2 graphs into a single figure.\nPatchwork package has a very simple syntax for creating layouts super easily. The general syntax is:\n\nTwo-Column Layout using the Plus sign “+”\nParenthesis “()” to create a subplot group\nTwo-Row Layout using the Division design “/”",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combing-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combing-two-ggplot2-graphs",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.2 Combing Two ggplot2 Graphs",
    "text": "2: 5.2 Combing Two ggplot2 Graphs\nThe figure in the tabset below shows a composite of two histograms created using patchwork. The code and syntax used to create the plot simple!\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 + p2",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.3 Combining Three ggplot2 Graphs",
    "text": "2: 5.3 Combining Three ggplot2 Graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“/” operator to stack two ggplot2 graphs\n“|” operator to place the plots beside each other\n“()” operator to define the sequence of the plotting\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(p1 / p2) | p3\n\n\n\n\nTo learn more, refer to Plot Assembly.",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tagging",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tagging",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.4 Creating a Composite Figure with Tagging",
    "text": "2: 5.4 Creating a Composite Figure with Tagging\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n((p1 / p2) | p3) +\n  plot_annotation(tag_levels = 'I')\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nTake note that the tagging goes from top left -&gt; btm left -&gt; top right -&gt; btm right!",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insertion",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-figure-with-insertion",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.5 Creating Figure with Insertion",
    "text": "2: 5.5 Creating Figure with Insertion\nPatchwork allows more than just providing functions to place plots next to each other based on the provided layout. With inset_element(), one or several plots or graphic elements can be placed freely on top or below another plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np3 + inset_element(p2,\n                   left = 0.02,\n                   bottom = 0.7,\n                   right = 0.5,\n                   top = 1)",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-On Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2: 5.6 Creating a Composite Figure by Using patchwork and ggtheme",
    "text": "2: 5.6 Creating a Composite Figure by Using patchwork and ggtheme\nThe figure below is created by combining patchwork and theme_economist() of ggthemes package discussed earlier.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npatchwork &lt;- (p1 / p2) | p3 \npatchwork & theme_economist()",
    "crumbs": [
      "Hands-On Exercises",
      "2: Beyond ggplot2 Fundamentals"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This website was created as part of the coursework for ISSS608: Visual Analytics and Applications, a module under the Master of IT in Business (MITB) program at Singapore Management University (SMU). It was developed using RStudio with Quarto, version-controlled via GitHub, and published through Netlify.\nThe author, Calvin Tan Song Hao, is an aspiring Data Analyst and a current student in the SMU MITB program. With a background in R&D engineering, I aim to leverage my analytical skills and technical expertise to solve real-world problems and uncover data-driven insights that support impactful decision-making.\n\n\n\n\n\n\nNote\n\n\n\nPlease feel free to click on my LinkedIn and GitHub links for more info!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "",
    "text": "In this chapter, the basic principles and essential components of ggplot2 will be explored. At the same time, I will develop hands-on experience using these components to plot statistical graphics based on the principle of Layered Grammar of Graphics. By then end of this chapter, I will apply the essential graphical elements provided by ggplot2 to create elegant and yet functional statistical graphics.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-load-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-load-the-required-libraries",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 2.1 Install and Load the Required Libraries",
    "text": "1: 2.1 Install and Load the Required Libraries\nThe code chunk below uses p_load() of pacman package to check if tidyverse these packages are installed in the computer. If they are, then they will be launched into R.\nBefore starting, it is important to ensure that the required R packages have been installed. If they are installed, the R packages will be loaded. Otherwise, the the R packages will first be installed then loaded into the R environment.\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below assumes that pacman package is already installed. If not, install pacman first.\n\n\n\npacman::p_load(tidyverse, patchwork)\n\n\n\n\n\n\n\nNote\n\n\n\nPatchwork is used for easier comparisons between graphs. Further explanation on how to create it can be found in Hands-On Exercise 2: Section 5.1",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 2.2 Importing the Data",
    "text": "1: 2.2 Importing the Data\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package since the file is in csv format. The readr part of the tidyverse package.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nThe data:\n\nYear end examination grades of a cohort of primary 3 students from a local school.\nThere are a total of seven attributes. Four of them are categorical data type and the other three are in continuous data type.\n\nCategorical Attributes: ID, CLASS, GENDER and RACE.\nContinuous Attributes: MATHS, ENGLISH and SCIENCE.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#r-graphics-vs-ggplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 3.1 R Graphics VS ggplot",
    "text": "1: 3.1 R Graphics VS ggplot\nComparing how R Graphics, the core graphical functions of Base R and ggplot plot a simple histogram.\n\nR Graphicsggplot2\n\n\n\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n\n\n\n\n\n\n\n\nAs you can see that the code chunk is relatively simple if R Graphics is used. Then, the question is why ggplot2 is recommended?\nAs pointed out by Hadley Wickham\n\n\n\n\n\n\nImportant\n\n\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive.\n\n\n\n\n\n\n\n\nTip\n\n\n\nggplot2 gives much more functionalities on how to style the graph",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#a-layered-grammar-of-graphics",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 4.1 A Layered Grammar of Graphics",
    "text": "1: 4.1 A Layered Grammar of Graphics\nggplot2 is an implementation of Leland Wilkinson’s Grammar of Graphics. Figure below shows the seven grammars of ggplot2.\n\n\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\nA short description of each building block are as follows:\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statistical transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_bar",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.1 Geometric Objects: geom_bar()",
    "text": "1: 7.1 Geometric Objects: geom_bar()\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhat if I want to show the code only or the graph only?\n\n\n\n\n\n\n\nUse #| eval: false to show code without plotting graph\n\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\nUse #| echo: false to plot graph without showing code\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\neval and echo is very useful in patchwork and panel-tabset",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_dotplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.2 Geometric Objects: geom_dotplot()",
    "text": "1: 7.2 Geometric Objects: geom_dotplot()\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\nIn the code chunk below, geom_dotplot() of ggplot2 is used to plot a dot plot.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5) +\n  ggtitle(\"With y-axis\")\n\nd2 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) +\n  ggtitle(\"Without y-axis\")\n\nd1 + d2\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code uses patchwork for easier comparisons between graphs. Further explanation on how to create it can be found in Hands-On Exercise 2: Section 5.1",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_histogram",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.3 Geometric Objects: geom_histogram()",
    "text": "1: 7.3 Geometric Objects: geom_histogram()\nIn the code chunk below, geom_histogram() is used to create a simple histogram by using values in MATHS field of exam_data.\n\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNote that the default bin is 30",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-geom",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.4 Modifying a geometric object by changing geom()",
    "text": "1: 7.4 Modifying a geometric object by changing geom()\nIn the code chunk below:\n\nBins argument is used to change the number of bins to 20,\nFill argument is used to shade the histogram with light blue color, and\nColor argument is used to change the outline colour of the bars in black\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram()  +\n  ggtitle(\"Default\")\n\nh2 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  +\n  ggtitle(\"Modifying Bins and Colour\")\n\nh1 + h2\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nAdjusting bin size fixes the gap and adding colour makes the plot more visually appealing",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#modifying-a-geometric-object-by-changing-aes",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.5 Modifying a geometric object by changing aes()",
    "text": "1: 7.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh3 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\")  +\n  ggtitle(\"Modifying Bins and Colour\")\n\nh4 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")  +\n  ggtitle(\"Adding Subgroup\")\n\nh3 + h4\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nUsing sub-groups allows for bivariate analysis\nThis approach can be used to adjust colour, fill and alpha of the geometric elements",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom-density",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.6 Geometric Objects: geom-density()",
    "text": "1: 7.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\nLeft Graph: Plots the distribution of Maths scores in a kernel density estimate plot\nRight Graph: Plots two kernel density lines by using colour or fill arguments of aes()\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nk1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density() +\n  ggtitle(\"Default\")\n\nk2 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density() +\n  ggtitle(\"Gender Sub-group\")\n\nk1 + k2",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_boxplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.7 Geometric Objects: geom_boxplot()",
    "text": "1: 7.7 Geometric Objects: geom_boxplot()\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\n\nLeft Graph: Plots boxplots by using geom_boxplot().\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\n\nRight Graph: Plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb1 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot() +\n  ggtitle(\"Default\")\n\nb2 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE) +\n  ggtitle(\"Notched\")\n\nb1 + b2",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geom_violin",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.8 Geometric Objects: geom_violin",
    "text": "1: 7.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it is easier to compare several distributions since they are placed side by side.\nThe code below plot the distribution of Maths score by gender in violin plot.\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin()",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geometric-objects-geom_point",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geometric-objects-geometric-objects-geom_point",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.9 Geometric Objects: Geometric Objects: geom_point()",
    "text": "1: 7.9 Geometric Objects: Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point()",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#geom-objects-can-be-combined",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 7.10 geom objects can be combined",
    "text": "1: 7.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5)",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 8.1 Working with stat()",
    "text": "1: 8.1 Working with stat()\nThe boxplots below are incomplete because the positions of the means were not shown.\n\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-stat_summary-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 8.2 Working with stat - the stat_summary() method",
    "text": "1: 8.2 Working with stat - the stat_summary() method\nThe left graph adds mean values by using stat_summary() function and overriding the default geom.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-stat---the-geom-method",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 8.3 Working with stat - the geom() method",
    "text": "1: 8.3 Working with stat - the geom() method\nThe right graph adds mean values by using geom_() function and overriding the default stat.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ns1 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour =\"red\",        \n               size=4) +\n  ggtitle(\"stat_summary() method\")\n\ns2 &lt;- ggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun=\"mean\",           \n             colour=\"red\",          \n             size=4) +\n  ggtitle(\"geom_() method\")\n\ns1 + s2\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nBoth methods achieves the same result by adding a red marker to represent the mean.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#adding-a-best-fit-curve-on-a-scatterplot",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 8.4 Adding a Best-Fit Curve on a Scatterplot?",
    "text": "1: 8.4 Adding a Best-Fit Curve on a Scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best-fit curve.\n\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nLeft Graph: geom_smooth() is used to plot a best-fit curve on the scatterplot.\nRight Graph: The default smoothing method is overridden to show a linear best fit-line.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nf1 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(linewidth=0.5)\n\nf2 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              linewidth=0.5)\n\nf1 + f2",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_wrap",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 9.1 Working with facet_wrap()",
    "text": "1: 9.1 Working with facet_wrap()\nfacet_wrap() wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid() because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_grid",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-facet_grid",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 9.2 Working with facet_grid()",
    "text": "1: 9.2 Working with facet_grid()\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_grid(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nfacet_grid() is also ideal for displaying sequential variables like the performance of different classes. For the above example, facet_grid() is better than facet_wrap() since it allows easiy comparisons across all classes.",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#working-with-coordinate",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 10.1 Working with Coordinate",
    "text": "1: 10.1 Working with Coordinate\n\nLeft Graph: By the default, the bar chart of ggplot2 is in vertical form\nRight Graph: coord_flip() flips the horizontal bar chart into vertical bar chart\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nb3 &lt;- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  ggtitle(\"Default\")\n\nb4 &lt;- ggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  ggtitle(\"coord_flip()\")\n\nb3 + b4",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#changing-the-y--and-x-axis-range",
    "title": "Hands-On Exercise 1: A Layered Grammar of Graphics: ggplot2 methods",
    "section": "1: 10.1 Changing the y- and x-axis Range",
    "text": "1: 10.1 Changing the y- and x-axis Range\n\nLeft Graph: The default scatterplot is slightly misleading because the y-aixs and x-axis range are not equal.\nRight Graph: Fixed both the y-axis and x-axis range from 0-100.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nr1 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5) +\n  ggtitle(\"Default\")\n\nr2 &lt;- ggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"Equal y- and x-axis Range\")\n\nr1 + r2",
    "crumbs": [
      "Hands-On Exercises",
      "1: A Layered Grammar of Graphics: ggplot2 methods"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this hands-on exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#tooltip-effect-with-tooltip-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#tooltip-effect-with-tooltip-aesthetic",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 4.1 Tooltip Effect with Tooltip Aesthetic",
    "text": "3-1: 4.1 Tooltip Effect with Tooltip Aesthetic\nBelow shows a typical code chunk to plot an interactive statistical graph by using ggiraph package. Notice that the code chunk consists of two parts. First, a ggplot object will be created. Next, girafe() of ggiraph will be used to create an interactive svg object.\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL\n  )\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\nNotice that two steps are involved.\nFirst, an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()) will be used to create the basic graph. Then, girafe() will be used to generate an svg object to be displayed on an html page.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#displaying-multiple-information-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#displaying-multiple-information-on-tooltip",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 5.1 Displaying Multiple Information on Tooltip",
    "text": "3-1: 5.1 Displaying Multiple Information on Tooltip\nThe content of the tooltip can be customised by including a list object as shown in the code chunk below.\n\nexam_data$tooltip &lt;- c(paste0(\n  \"Name = \", exam_data$ID,\n  \"\\n Class =\", exam_data$CLASS))\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks=NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\nThe first three lines of codes in the code chunk create a new field called tooltip. At the same time, it populates text in ID and CLASS fields into the newly created field. Next, this newly created field is used as tooltip field as shown in the code of line 7.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#customising-tooltip-style",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#customising-tooltip-style",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.1 Customising Tooltip Style",
    "text": "3-1: 6.1 Customising Tooltip Style\nCode chunk below uses opts_tooltip() of ggiraph to customise tooltip rendering by adding css declarations.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ntooltip_css &lt;- \"background-color: white;  #&lt;&lt;\nfront-style:bold; color: #ff0000;\" #&lt;&lt;\n\np &lt;- ggplot(data = exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe background colour of the tooltip is white and the font colour is red and bold\nRefer to Customizing girafe objects to learn more about how to customise ggriaph objects",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#displaying-statistics-on-tooltip",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#displaying-statistics-on-tooltip",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.2 Displaying statistics on tooltip",
    "text": "3-1: 6.2 Displaying statistics on tooltip\nCode chunk below shows an advanced way to customise tooltip. In this example, a function is used to compute 90% confident interval of the mean. The derived statistics are then displayed in the tooltip.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores: \", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data,\n                  aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS,\n                   tooltip = after_stat(\n                     tooltip(y, ymax))),\n               fun.data = mean_se,\n               geom = GeomInteractiveCol,\n               fill = \"light blue\"\n              ) + \n              stat_summary(aes(y = MATHS),\n                fun.data = mean_se,\n                geom = \"errorbar\", width = 0.2, size = 0.2\n              )\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#hover-effect-with-data_id-aesthetic",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#hover-effect-with-data_id-aesthetic",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.3 Hover effect with data_id aesthetic",
    "text": "3-1: 6.3 Hover effect with data_id aesthetic\nCode chunk below shows the second interactive feature of ggiraph, namely data_id.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL\n  )\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\nInteractive\n\n\n\nElements associated with a data_id (i.e. CLASS) will be highlighted upon mouse over.\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default value of the hover css is hover_css = “fill:orange;”.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#styling-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#styling-hover-effect",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.4 Styling Hover Effect",
    "text": "3-1: 6.4 Styling Hover Effect\nIn the code chunk below, css codes are used to change the highlighting effect.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id=CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL\n  )\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_hover(css = \"fill:#202020;\"),\n    opts_hover_inv(css = \"opacity:0.2;\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\nInteractive\n\n\n\nElements associated with a data_id (i.e. CLASS) will be highlighted upon mouse hover\n\n\n\n\n\n\n\n\nNote\n\n\n\nDifferent from previous example, in this example the css customisation request are encoded directly",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#combining-tooltip-and-hover-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#combining-tooltip-and-hover-effect",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.5 Combining Tooltip and Hover Effect",
    "text": "3-1: 6.5 Combining Tooltip and Hover Effect\nThere are times when we want to combine tooltip and hover effect on the interactive statistical graph as shown in the code chunk below.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = CLASS, #tooltip here\n        data_id = CLASS),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618,\n  options = list(\n    opts_hover(css = \"fill: #2020202;\"),\n    opts_hover_inv(css = \"opacity:0.2\")\n  )\n)\n\n\n\n\n\n\n\n\n\n\nInteractive\n\n\n\nElements associated with a data_id (i.e. CLASS) will be highlighted upon mouse over. At the same time, the tooltip will show the CLASS.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#click-effect-with-onclick",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#click-effect-with-onclick",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.6 Click Effect with onclick",
    "text": "3-1: 6.6 Click Effect with onclick\nonclick argument of ggiraph provides hotlink interactivity on the web.\nThe code chunk below shown an example of onclick.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID)) #onclic link here\n\np &lt;- ggplot(data=exam_data,\n            aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(onclick = onclick),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,\n                     breaks = NULL\n  )\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\nInteractive\n\n\n\nWeb document link with a data object will be displayed on the web browser upon mouse click.\n\n\n\n\n\n\n\n\nWarning\n\n\n\nNote that click actions must be a string column in the dataset containing valid JavaScript instructions.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 6.7 Coordinated Multiple Views with ggiraph",
    "text": "3-1: 6.7 Coordinated Multiple Views with ggiraph\nCoordinated multiple views methods has been implemented in the data visualisation below.\nIn order to build a coordinated multiple views as shown in the example above, the following programming strategy will be used:\n\nAppropriate interactive functions of ggiraph will be used to create the multiple views.\npatchwork function of patchwork package will be used inside girafe function to create the interactive coordinated multiple views.\n\n\n\n\n\n\n\nNote\n\n\n\nWhen a data point of one of the dotplot is selected, the corresponding data point ID on the second data visualisation will be highlighted too.\n\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot(data=exam_data,\n             aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID,),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  coord_cartesian(xlim = c(0,100)) +\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data,\n             aes(x = ENGLISH)) +\n  geom_dotplot_interactive(\n    aes(data_id = ID),\n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  coord_cartesian(xlim = c(0,100)) + #patchwork here\n  scale_y_continuous(NULL,\n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2),\n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill:#202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n       ))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe data_id aesthetic is critical to link observations between plots and the tooltip aesthetic is optional but nice to have when mouse over a point.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#creating-an-interactive-scatter-plot-plot_ly-method",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 7.1 Creating an Interactive Scatter Plot: plot_ly() Method",
    "text": "3-1: 7.1 Creating an Interactive Scatter Plot: plot_ly() Method\nThe tabset below shows an example of a basic interactive plot created by using plot_ly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(\n  data=exam_data,\n  x = ~MATHS,\n  y = ~ENGLISH\n)\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe code using plot_ly() is simpler than ggplot2\nplot_ly() is interactive by default as compared to ggplot2 Hands-On Exercise 3-1: Section 1.5",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#working-with-visual-variable-plot_ly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#working-with-visual-variable-plot_ly-method",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 7.2 Working with Visual Variable: plot_ly() Method",
    "text": "3-1: 7.2 Working with Visual Variable: plot_ly() Method\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data=exam_data,\n        x = ~ENGLISH,\n        y = ~MATHS,\n        color = ~RACE)\n\n\n\n\n\n\n\n\n\n\nInteractive\n\n\n\nClick on the colour symbol at the legend",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#creating-an-interactive-scatter-plot-ggplotly-method",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 7.3 Creating an Interactive Scatter Plot: ggplotly() Method",
    "text": "3-1: 7.3 Creating an Interactive Scatter Plot: ggplotly() Method\nThe code chunk below plots an interactive scatter plot by using ggplotly().\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNotice that the only extra line needed in the code chunk is ggplotly().\nThis is much simpler as compared to the ggplot2 tooltip method in Hands-On Exercise 3-1: Section 5.1",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#coordinated-multiple-views-with-plotly",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 7.4 Coordinated Multiple Views with plotly",
    "text": "3-1: 7.4 Coordinated Multiple Views with plotly\nThe creation of a coordinated linked plot by using plotly involves three steps:\n\nhighlight_key() of plotly package is used as shared data.\nTwo scatter plots will be created by using ggplot2 functions.\nLastly, subplot() of plotly package is used to place them next to each other side-by-side.\n\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nClick on a data point of one of the scatterplot and see how the corresponding point on the other scatterplot is selected. - But clicking on any data point results in a permanent selection, with no way to deselect it.\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nhighlight_key() simply creates object of class crosstalk::SharedData\nLearn more about crosswalk\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThis code is much simpler than the ggiraph method in Hands-On Exercise 3-1: Section 6.7,\nAnother difference is that the plotly highlight_key() method shows it’s corresponding point on click but the ggiraph method shows it’s corresponding point on hover",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#improving-coordinated-multiple-views-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#improving-coordinated-multiple-views-with-plotly",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 7.5 Improving Coordinated Multiple Views with plotly",
    "text": "3-1: 7.5 Improving Coordinated Multiple Views with plotly\nThere are a few issues with the coordinated multiple view plot above.\n\n\n\n\n\n\nHow to fix the annoying permanent selection issue?\n\n\n\nAdding selectize = FALSE allows for the user to do a double-click on any blank space to reset selection and shows all points again\n\n\n\n\n\n\n\n\nCan the selection method be on hover instead of on click?\n\n\n\n\nBy default, highlight_key() works on click, not hover but using plotly_hover allows it to mirror the ggiraph method in Hands-On Exercise 3-1: Section 6.7\n\n\n\n\n\n\n\n\n\nLastly, where are the axis labels?\n\n\n\n\nUse labs(), titleX and titleY to add axis labels\nUse margin so that the labels will not overlap the graph\n\n\n\nThe plot below implements the solutions to the questions above.\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS, y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  labs(x = \"MATHS\", y = \"ENGLISH\")\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS, y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100), ylim=c(0,100)) +\n  labs(x = \"MATHS\", y = \"SCIENCE\")\n\nsubplot(\n  ggplotly(p1),\n  ggplotly(p2),\n  titleX = TRUE,\n  titleY = TRUE,\n  margin = 0.05) %&gt;%\n  highlight(on = \"plotly_hover\", selectize = FALSE)",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#interactive-data-table-dt-package",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 8.1 Interactive Data Table: DT Package",
    "text": "3-1: 8.1 Interactive Data Table: DT Package\n\nA wrapper of the JavaScript Library DataTables\nData objects in R can be rendered as HTML tables using the JavaScript library ‘DataTables’ (typically via R Markdown or Shiny).\n\n\nTableCode\n\n\n\n\n\n\n\n\n\n\n\nDT::datatable(exam_data, class = \"compact\")",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#linked-brushing-crosstalk-method",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 8.2 Linked Brushing: crosstalk Method",
    "text": "3-1: 8.2 Linked Brushing: crosstalk Method\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nd &lt;- highlight_key(exam_data)\np &lt;- ggplot(d,\n            aes(ENGLISH,\n                MATHS)) +\n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\ngg &lt;- highlight(ggplotly(p),\n                \"plotly_selected\")\n\ncrosstalk::bscols(gg,\n                  DT::datatable(d),\n                  widths = 5)       \n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nhighlight() is a function of plotly package. It sets a variety of options for brushing (i.e., highlighting) multiple plots. These options are primarily designed for linking multiple plotly graphs, and may not behave as expected when linking plotly to another htmlwidget package via crosstalk. In some cases, other htmlwidgets will respect these options, such as persistent selection in leaflet.\nbscols() is a helper function of crosstalk package. It makes it easy to put HTML elements side by side. It can be called directly from the console but is especially designed to work in an R Markdown document. Warning: This will bring in all of Bootstrap!.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#ggiraph",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 9.1 ggiraph",
    "text": "3-1: 9.1 ggiraph\nThis link provides an online version of the reference guide and several useful articles. Use this link to download the PDF version of the reference guide.\n\nHow to plot with ggiraph\nInteractive map of France with ggiraph\nCustom interactive sunbursts with ggplot in R\nThis link provides code example on how ggiraph is used to create interactive graphs for Swiss Olympians - the solo specialists.",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#plotly-for-r",
    "href": "Hands-on_Ex/Hands-on_Ex03-1/Hands-on_Ex03-1.html#plotly-for-r",
    "title": "Hands-On Exercise 3-1: Programming Interactive Data Visualisation with R",
    "section": "3-1: 9.2 plotly for R",
    "text": "3-1: 9.2 plotly for R\n\nGetting started with Plotly in R\nA collection of plotly R graphs are available via this link\nCarson Sievert (2020) Interactive web-based data visualization with R, plotly, and shiny, Chapman and Hall/CRC is the best resource to learn plotly for R. The online version is available via this link\nPlotly R Figure Reference provides a comprehensive discussion of each visual representations.\nPlotly R Library Fundamentals is a good place to learn the fundamental features of Plotly’s R API.\nGetting Started\nThis link provides a very interesting implementation of gganimate by an SMU senior.\nBuilding an animation step-by-step with gganimate\nCreating a composite gif with multiple gganimate panels",
    "crumbs": [
      "Hands-On Exercises",
      "3-1: Programming Interactive Data Visualisation with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "Funnel plot is a specially designed data visualisation for unbiased comparison between outlets, stores or business entities. The following will be explored in this exercise:\n\nPlotting funnel plots using funnelPlotR package\nPlotting static funnel plot with ggplot2 package\nplotting interactive funnel plot by using both plotly R and ggplot2 packages",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#to-4.3-funnelplotr-methods-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#to-4.3-funnelplotr-methods-basic-plot",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "4-1: 4.1 to 4.3 FunnelPlotR methods: Basic plot",
    "text": "4-1: 4.1 to 4.3 FunnelPlotR methods: Basic plot\nThe code below plots a funnel plots of increasing complexity.\n\n4.1 Basic Plot4-1: 4.2 Makeover 14-1: 4.3 Makeover 2\n\n\n\n\nShow code\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 1 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\ngroup: This function is different from its use in a scatterplot. Here, it defines the level of the points to be plotted, ie., Sub-district, District or City. If City is chosen, there are only six data points.\ndata_type: The default argument is “SR”.\nlimit: The accepted values for plot limits are 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution.\n\n\n\n\n\n\n\n\n\nThings to Improve\n\n\n\n\nThe scale is wrong, the data is very compressed.\nHowever, changing yrange results in missing 267 rows containing missing values or values outside the scale. Therefore, to adjust yrange, the data type should be changed to “PR”\n\n\n\n\n\n\n\nShow code\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  xrange = c(0, 6500),\n  yrange = c(0, 0.05)\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn\n\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e., proportions).\nxrange and yrange are used to set the range of x-axis and y-axis.\n\n\n\n\n\n\n\n\n\nThings to Improve\n\n\n\n\nWhile the scale is fixed now, the chart title and axis titles are not appropriate.\nThe sub-district labels are distracting and do not provide more info into the chart.\n\n\n\n\n\n\n\nShow code\nfunnel_plot(\n  .data = covid19,\n  numerator = Death,\n  denominator = Positive,\n  group = `Sub-district`,\n  data_type = \"PR\",\n  xrange = c(0, 6500),\n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by \\nCumulative Total Number of Postive Cases\",\n  x_label = \"Cumulative COVID-19 Positive Cases\",\n  y_label = \"Cumulative Fatality Rate\"\n)\n\n\n\n\n\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nlabel = NA argument is to remove the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles.",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#computing-the-basic-derived-fields",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "4-1: 5.1 Computing the Basic Derived Fields",
    "text": "4-1: 5.1 Computing the Basic Derived Fields\nTo plot the funnel plot from scratch, the following values were calculated:\n\nDerive cumulative death rate\nStandard error of cumulative death rate\n\n\n\nShow code\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death/Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\n\nNext, fit.mean was computed.\n\n\nShow Code\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "4-1: 5.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "4-1: 5.2 Calculate lower and upper limits for 95% and 99.9% CI\nLastly, the lower and upper limits for 95% confidence interval was derived.\n\n\nShow Code\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\ndfCI &lt;- data.frame(number.ll95, number.ul95, \n                   number.ll999, number.ul999,\n                   number.seq, fit.mean)\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe 1.96 used in the code above refers to 1.96 standard deviations of the mean and corresponds to a 95% confidence interval.\nThe 3.29 used in the code above refers to 1.96 standard deviations of the mean and corresponds to a 99.9% confidence interval.",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#plotting-a-static-funnel-plot",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "4-1: 5.3 Plotting a Static Funnel Plot",
    "text": "4-1: 5.3 Plotting a Static Funnel Plot\nA static funnel plot was created using ggplot2 functions.\n\n\nShow code\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label = `Sub-district`),\n             alpha = 0.4) +\n  geom_line(data = dfCI,\n            aes(x = number.seq,\n                y = number.ll95),\n            size = 0.4,\n            colour = \"skyblue\",\n            linetype = \"dashed\") +\n  geom_line(data = dfCI,\n            aes(x = number.seq,\n                y = number.ul95),\n            size = 0.4,\n            colour = \"skyblue\",\n            linetype = \"dashed\") +\n  geom_line(data = dfCI,\n            aes(x = number.seq,\n                y = number.ll999),\n            size = 0.4,\n            colour = \"skyblue\") +\n  geom_line(data = dfCI,\n            aes(x = number.seq,\n                y = number.ul999),\n            size = 0.4,\n            colour = 'skyblue') +\n  geom_hline(data = dfCI,\n             aes(yintercept = fit.mean),\n             size = 0.4,\n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0, 0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") +\n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") +\n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") +\n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size = 12),\n        legend.position = c(0.91, 0.85),\n        legend.title = element_text(size = 7),\n        legend.text = element_text(size = 7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex04-1/Hands-on_Ex04-1.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-On Exercise 4-1: Funnel Plots for Fair Comparisons",
    "section": "4-1: 5.4 Interactive funnel plot: plotly + ggplot2",
    "text": "4-1: 5.4 Interactive funnel plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions above can be made interactive ggplotly() from plotly R package.\n\n\nShow code\nfp_ggplotly &lt;- ggplotly(p,\n                        tooltip = c(\"label\",\n                                    \"x\",\n                                    \"y\"))\nfp_ggplotly",
    "crumbs": [
      "Hands-On Exercises",
      "4-1: Funnel Plots for Fair Comparisons"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "",
    "text": "In this hands-on exercise, the following will be covered:\n\nggstatsplot Package: Create visual graphics with rich statistical information\nperformance Package: Visualise model diagnostics\nparameters Package: Visualise model parameters",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#installing-and-launching-r-packages",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.1 Installing and Launching R Packages",
    "text": "4-3: 3.1 Installing and Launching R Packages\nIn this exercise, ggstatsplot and tidyverse will be used.\n\n\nShow code\npacman::p_load(ggstatsplot, tidyverse)",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#importing-data",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.2 Importing Data",
    "text": "4-3: 3.2 Importing Data\nImporting Exam-csv data by using read_csv().\n\n\nShow code\nexam &lt;- read_csv(\"data/Exam_data.csv\")\n\nlibrary(knitr)\nkable(head(exam, 10))\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nENGLISH\nMATHS\nSCIENCE\n\n\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n16\n\n\nStudent289\n3H\nMale\nChinese\n26\n16\n16\n\n\nStudent227\n3F\nMale\nChinese\n27\n77\n31\n\n\nStudent318\n3I\nMale\nMalay\n27\n11\n25\n\n\nStudent306\n3I\nFemale\nMalay\n31\n16\n16\n\n\nStudent313\n3I\nMale\nChinese\n31\n21\n25\n\n\nStudent316\n3I\nMale\nMalay\n31\n18\n27\n\n\nStudent312\n3I\nMale\nMalay\n33\n19\n15\n\n\nStudent297\n3H\nMale\nIndian\n34\n49\n37",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#one-sample-test-gghistostats-method",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.3 One-Sample Test: gghistostats() Method",
    "text": "4-3: 3.3 One-Sample Test: gghistostats() Method\nIn the code chunk below, gghistostats() is used to build an visual of one-sample test on English scores.\n\n\nShow the code\nset.seed(1234)\n\ngghistostats(\n  data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\"\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDefault Information\n\n\n\n\nStatistical Details\nBayes Factor\nSample Sizes\nDistribution Summary",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#unpacking-the-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#unpacking-the-bayes-factor",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.4 Unpacking the Bayes Factor",
    "text": "4-3: 3.4 Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favour of one theory among two competing theories.\nThat is because the Bayes factor gives us a way to evaluate the data in favour of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favour of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes factor is often written as B10. It can be defined mathematically as:\n\n\n\n\n\n\n\nThe Schwarz criterion is one of the easiest ways to calculate rough estimation of the Bayes factor.",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#how-to-interpret-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#how-to-interpret-bayes-factor",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.5 How to Interpret Bayes Factor",
    "text": "4-3: 3.5 How to Interpret Bayes Factor\nA Bayes Factor can be any positive number. One of the most common interpretation is this: First proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagemakers in 2013.",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.6 Two-Sample Mean Test: ggbetweenstats()",
    "text": "4-3: 3.6 Two-Sample Mean Test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = GENDER,\n  y = MATHS,\n  type = \"np\",\n  message = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDefault Information\n\n\n\n\nStatistical Details\nBayes Factor\nSample Sizes\nDistribution Summary\n\n\n\n\n\n\n\n\n\nType Options\n\n\n\nThe type (of test) argument also accepts the following abbreviations:\n\n“p” (Parametric - for normally distributed data)\n“np” (Non-parametric)\n“r” (Robust - for removing outliers)\n“bf” (Bayes Factor)",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#oneway-anova-test-ggbetweentats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#oneway-anova-test-ggbetweentats-method",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.7 Oneway ANOVA Test: ggbetweentats() Method",
    "text": "4-3: 3.7 Oneway ANOVA Test: ggbetweentats() Method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English scores by Race.\n\n\nShow the code\nggbetweenstats(\n  data = exam,\n  x = RACE,\n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE,\n  pariwise.comparisons = TRUE,\n  pairwise.display = \"s\",\n  p.adjust.methods = \"fdr\",\n  message = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPairwise Display Options\n\n\n\n\n“na” → only non-significant\n“s” → only significant\n“all” → everything\n\n\n\n\n4-3: 3.7.1 ggbetweentats() - Summary of Tests",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.8 Significant Test of Correlation: ggscatterstats()",
    "text": "4-3: 3.8 Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nWithout MarginalWith Marginal Plot\n\n\n\n\nShow the code\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nggscatterstats(\n  data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = TRUE\n)",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#significant-test-of-association-dependence-ggbarstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex04-3/Hands-on_Ex04-3.html#significant-test-of-association-dependence-ggbarstats-method",
    "title": "Hands-On Exercise 4-3: Visual Statistical Analysis",
    "section": "4-3: 3.9 Significant Test of Association (Dependence): ggbarstats() Method",
    "text": "4-3: 3.9 Significant Test of Association (Dependence): ggbarstats() Method\nIn the code chunk below, the Maths scores are binned into a 4-class variable width by using cut()\n\n\nShow the code\nexam1 &lt;- exam %&gt;%\n  mutate(MATHS_bins = \n           cut(MATHS,\n               breaks = c(0,60,75,85,100)))\n\n\nAnd the code chunt below uses ggbarstats() to build a visual for Significant Test of Association.\n\n\nShow the code\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)",
    "crumbs": [
      "Hands-On Exercises",
      "4-3: Visual Statistical Analysis"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "",
    "text": "This exercise will cover modelling, analysing and visualising network data using R and includes the following:\n\nCreate graph object data frames and manipulate them using appropriate functions of dplyr, lubridate, and tidygraph\nBuild network graph visualisation using appropriate functions of ggraph\nCompute network geometrics using tidygraph\nBuild advanced graph visualisation by incorporating the network geometrics\nBuild interactive network visualisation using visNetwork package",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#instal-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#instal-and-launch-r-packages",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 2.1 Instal and Launch R Packages",
    "text": "5: 2.1 Instal and Launch R Packages\nFour network data modelling and visualisation packages will be installed and launched for this exercise:\n\nigraph\ntidygraph\nggraph\nvisNetwork\n\nBeside these four packages, tidyverse and lubridate, an R package specially designed to handle and wrangling time data will be installed and launched too.\n\n\nShow code\npacman::p_load(igraph, tidygraph, ggraph, \n               visNetwork, lubridate, clock,\n               tidyverse, graphlayouts, \n               concaveman, ggforce)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-edges-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-edges-data",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.1 The Edges Data",
    "text": "5: 3.1 The Edges Data\nGAStech-email_edges.csv consists of two weeks of 9063 emails correspondences between 55 employees.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-nodes-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-nodes-data",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.2 The Nodes Data",
    "text": "5: 3.2 The Nodes Data\nGAStech_email_nodes.csv which consist of the names, department and title of the 55 employees.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-network-data-from-files",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#importing-network-data-from-files",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.3 Importing Network Data from Files",
    "text": "5: 3.3 Importing Network Data from Files\nThe two data sets, GAStech_email_node.csv and GAStech_email_edges.csv, are imported into the RStudio environment using read_csv() of readr package.\n\n\nShow code\nGAStech_nodes &lt;- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges &lt;- read_csv(\"data/GAStech_email_edge-v2.csv\")",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-imported-data",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-imported-data",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.4 Reviewing the Imported Data",
    "text": "5: 3.4 Reviewing the Imported Data\nThe structure of the data frames can be examined using glimpse() of dplyr.\n\n\nShow code\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 8\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;chr&gt; \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\", \"6/1/2014\"…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe output report of GAStech_edges above reveals that the SentDate is treated as “Character”” data type instead of date data type. This is an error! It is important to change the data type of SentDate field back to the “Date”” data type.\n\n\n\n\nShow code\nglimpse(GAStech_nodes)\n\n\nRows: 54\nColumns: 4\n$ id         &lt;dbl&gt; 1, 2, 3, 4, 5, 6, 7, 44, 45, 46, 8, 9, 10, 11, 12, 13, 14, …\n$ label      &lt;chr&gt; \"Mat.Bramar\", \"Anda.Ribera\", \"Rachel.Pantanal\", \"Linda.Lago…\n$ Department &lt;chr&gt; \"Administration\", \"Administration\", \"Administration\", \"Admi…\n$ Title      &lt;chr&gt; \"Assistant to CEO\", \"Assistant to CFO\", \"Assistant to CIO\",…",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-wrangling",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.5 Data Wrangling",
    "text": "5: 3.5 Data Wrangling\nThe code chunk below will be used to perform the data type changes.\n\n\nShow code\nGAStech_edges$SentDate  = dmy(GAStech_edges$SentDate)\nGAStech_edges$Weekday = wday(GAStech_edges$SentDate, \n                             label = TRUE, \n                             abbr = FALSE)\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nBoth dmy() and wday() are functions of lubridate lubridate package. It is an R package that makes it easier to work with dates and times.\n\ndmy(): Transforms the SentDate to Date data type.\nwday() : Returns the day of the week as a decimal number or an ordered factor if label is TRUE.\n\nThe argument abbr is FALSE to keep the daya spelled in full, i.e. Monday. The function will create a new column in the dataframe i.e. Weekday and the output of wday() will be saved in this newly created field.\nThe values in the Weekday field are in ordinal scale.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-date-fields",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-date-fields",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.6 Reviewing the Revised Date Fields",
    "text": "5: 3.6 Reviewing the Revised Date Fields\nThe table below shows the data structure of the reformatted GAStech_edges data frame.\n\n\nShow code\nglimpse(GAStech_edges)\n\n\nRows: 9,063\nColumns: 9\n$ source      &lt;dbl&gt; 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 26, 26, 26…\n$ target      &lt;dbl&gt; 41, 40, 51, 52, 53, 45, 44, 46, 48, 49, 47, 54, 27, 28, 29…\n$ SentDate    &lt;date&gt; 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-06, 2014-01-0…\n$ SentTime    &lt;time&gt; 08:39:00, 08:39:00, 08:58:00, 08:58:00, 08:58:00, 08:58:0…\n$ Subject     &lt;chr&gt; \"GT-SeismicProcessorPro Bug Report\", \"GT-SeismicProcessorP…\n$ MainSubject &lt;chr&gt; \"Work related\", \"Work related\", \"Work related\", \"Work rela…\n$ sourceLabel &lt;chr&gt; \"Sven.Flecha\", \"Sven.Flecha\", \"Kanon.Herrero\", \"Kanon.Herr…\n$ targetLabel &lt;chr&gt; \"Isak.Baza\", \"Lucas.Alcazar\", \"Felix.Resumir\", \"Hideki.Coc…\n$ Weekday     &lt;ord&gt; Monday, Monday, Monday, Monday, Monday, Monday, Monday, Mo…",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#wrangling-attributes",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.7 Wrangling attributes",
    "text": "5: 3.7 Wrangling attributes\nA close examination of GAStech_edges data frame reveals that it consists of individual e-mail flow records. This is not very useful for visualisation.\nIn view of this, aggregation will be conducted on the individual records by senders, receivers and day of the week.\n\n\nShow code\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(source, target, Weekday) %&gt;%\n    summarise(Weight = n()) %&gt;%\n  filter(source!=target) %&gt;%\n  filter(Weight &gt; 1) %&gt;%\n  ungroup()\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nFour functions from dplyr package were used (filter(), group(), summarise(), and ungroup())\nThe output data frame is called GAStech_edges_aggregated\nA new field called Weight was added in GAStech_edges_aggregated",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-edges-file",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-revised-edges-file",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 3.8 Reviewing the Revised Edges File",
    "text": "5: 3.8 Reviewing the Revised Edges File\nTable below shows the data structure of the reformatted GAStech_edges data frame.\n\n\nShow code\nglimpse(GAStech_edges_aggregated)\n\n\nRows: 1,456\nColumns: 4\n$ source  &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ target  &lt;dbl&gt; 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7,…\n$ Weekday &lt;ord&gt; Monday, Tuesday, Wednesday, Friday, Monday, Tuesday, Wednesday…\n$ Weight  &lt;int&gt; 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4, 3, 5, 8, 4,…",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-tbl_graph-object",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.1 The tbl_graph object",
    "text": "5: 4.1 The tbl_graph object\nTwo functions of tidygraph package can be used to create network objects:\n\ntbl_graph() creates a tbl_graph network object from nodes and edges data\nas_tbl_graph() converts network data and objects to a tbl_graph network. The network data and objects supported are:\n\nA node data.frame and an edge data.frame\ndata.frame, list, matrix from base\nigraph from igraph\nnetwork from network\ndendrogram and hclust from stats\nNode from data.tree\nphylo and evonet from ape\ngraphNEL, graphAM, graphBAM from graph (in Bioconductor)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-dplyr-verbs-in-tidygraph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#the-dplyr-verbs-in-tidygraph",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.2 The dplyr verbs in tidygraph",
    "text": "5: 4.2 The dplyr verbs in tidygraph\n\n\n\n\n\nA sample code is given above:\n\nactivate() verb from tidygraph serves as a switch between tibbles for nodes and edges. All dplyr verbs applied to tbl_graph object are applied to the active tibble.\nThe .N() function is used to gain access to the node data while manipulating the edge data. Similarly .E() will access the edge data and .G() will access the tbl_graph object itself.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#using-tbl_graph-to-build-tidygraph-data-model",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.3 Using tbl_graph() to Build tidygraph Data Model",
    "text": "5: 4.3 Using tbl_graph() to Build tidygraph Data Model\nIn this section, tbl_graph() of tinygraph package will be used to build a tidygraph’s network graph data.frame.\nVisit the reference guide of tbl_graph() to find out more about the function.\n\n\nShow code\nGAStech_graph &lt;- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#reviewing-the-output-tidygraphs-graph-object",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.4 Reviewing the Output tidygraph’s Graph Object",
    "text": "5: 4.4 Reviewing the Output tidygraph’s Graph Object\n\n\nShow code\nGAStech_graph\n\n\n# A tbl_graph: 54 nodes and 1456 edges\n#\n# A directed multigraph with 1 component\n#\n# Node Data: 54 × 4 (active)\n      id label               Department     Title                               \n   &lt;dbl&gt; &lt;chr&gt;               &lt;chr&gt;          &lt;chr&gt;                               \n 1     1 Mat.Bramar          Administration Assistant to CEO                    \n 2     2 Anda.Ribera         Administration Assistant to CFO                    \n 3     3 Rachel.Pantanal     Administration Assistant to CIO                    \n 4     4 Linda.Lagos         Administration Assistant to COO                    \n 5     5 Ruscella.Mies.Haber Administration Assistant to Engineering Group Mana…\n 6     6 Carla.Forluniau     Administration Assistant to IT Group Manager       \n 7     7 Cornelia.Lais       Administration Assistant to Security Group Manager \n 8    44 Kanon.Herrero       Security       Badging Office                      \n 9    45 Varja.Lagos         Security       Badging Office                      \n10    46 Stenig.Fusil        Security       Building Control                    \n# ℹ 44 more rows\n#\n# Edge Data: 1,456 × 4\n   from    to Weekday   Weight\n  &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n1     1     2 Monday         4\n2     1     2 Tuesday        3\n3     1     2 Wednesday      5\n# ℹ 1,453 more rows",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#analysing-the-output-tidygraphs-graph-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#analysing-the-output-tidygraphs-graph-object",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.5 Analysing the Output tidygraph’s Graph Object",
    "text": "5: 4.5 Analysing the Output tidygraph’s Graph Object\n\nThe output above reveals that GAStech_graph is a tbl_graph object with 54 nodes and 4541 edges\nThe command also prints the first six rows of “Node Data” and the first three of “Edge Data”\nIt states that the Node Data is active. The notion of an active tibble within a tbl_graph object makes it possible to manipulate the data in one tibble at a time.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-active-object",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 4.6 Changing the active object",
    "text": "5: 4.6 Changing the active object\nThe nodes tibble data frame is activated by default, but you can change which tibble data frame is active with the activate() function. Thus, in order to rearrange the rows in the edges tibble to list those with the highest “weight” first, activate() can be used first and then arrange().\nThe code chunk below provides an example of this.\n\n\nShow code\nGAStech_graph %&gt;%\n  activate(edges) %&gt;%\n  arrange(desc(Weight))\n\n\n# A tbl_graph: 54 nodes and 1456 edges\n#\n# A directed multigraph with 1 component\n#\n# Edge Data: 1,456 × 4 (active)\n    from    to Weekday   Weight\n   &lt;int&gt; &lt;int&gt; &lt;ord&gt;      &lt;int&gt;\n 1    40    41 Tuesday       23\n 2    40    43 Tuesday       19\n 3    41    43 Tuesday       15\n 4    41    40 Tuesday       14\n 5    42    41 Tuesday       13\n 6    42    40 Tuesday       12\n 7    42    43 Tuesday       11\n 8    43    42 Wednesday     11\n 9    36    32 Wednesday      9\n10    40    41 Monday         9\n# ℹ 1,446 more rows\n#\n# Node Data: 54 × 4\n     id label           Department     Title           \n  &lt;dbl&gt; &lt;chr&gt;           &lt;chr&gt;          &lt;chr&gt;           \n1     1 Mat.Bramar      Administration Assistant to CEO\n2     2 Anda.Ribera     Administration Assistant to CFO\n3     3 Rachel.Pantanal Administration Assistant to CIO\n# ℹ 51 more rows\n\n\nVisit the reference guide of activate() to find out more about the function.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-a-basic-network-graph",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.1 Plotting a Basic Network Graph",
    "text": "5: 5.1 Plotting a Basic Network Graph\nThe code chunk below uses ggraph(), geom-edge_link() and geom_node_point() to plot a network graph by using GAStech_graph.\nPlease refer to the respective reference guides provided for more information.\n\n\nShow code\nggraph(GAStech_graph) +\n  geom_edge_link() +\n  geom_node_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nThe basic plotting function is ggraph(), which takes the data to be used for the graph and the type of layout desired\nBoth of the arguments for ggraph() are built around igraph.\nTherefore, ggraph() can use either an igraph object or a tbl_graph object",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-default-network-graph-theme",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.2 Changing the default network graph theme",
    "text": "5: 5.2 Changing the default network graph theme\nIn this section, theme_graph() will be used to remove the x- and y-axes. Please refer to the reference guide provided for more information.\n\n\nShow code\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes()) +\n  geom_node_point(aes())\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nggraph introduces a special ggplot theme (theme_graph()) that provides better defaults for network graphs than the normal ggplot defaults\ntheme_graph() allows for the removal of axis, grids, border, and changing the font to Arial Narrow (this can be overridden)\n\nThe ggraph theme can be set for a series of plots with the set_graph_style() command when it is run before the graphs are plotted or by using theme_graph() in the individual plots",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#changing-the-coloring-of-the-plot",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.3 Changing the Coloring of the Plot",
    "text": "5: 5.3 Changing the Coloring of the Plot\nFurthermore, theme_graph() makes it easy to change the colouring of the plot.\n\n\nShow code\ng &lt;- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-ggraphs-layouts",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.4 Working with ggraph’s Layouts",
    "text": "5: 5.4 Working with ggraph’s Layouts\nggraph() supports many layout for standard used:\n\nstar\ncircle\nnicely (default)\ndh\ngem\ngraphopt\ngrid\nmds\nspahere\nrandomly\nfr\nkk\ndrl\nlgl.\n\nThe figures shows the layouts supported by ggraph().",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#fruchterman-and-reingold-layout",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.5 Fruchterman and Reingold Layout",
    "text": "5: 5.5 Fruchterman and Reingold Layout\nThe code chunk below will be used to plot the network graph using the Fruchterman and Reingold layout.\n\n\nShow code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThing to Learn\n\n\n\nlayout argument is used to define the layout to be used",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-network-nodes",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.6 Modifying Network Nodes",
    "text": "5: 5.6 Modifying Network Nodes\nIn this section, each node will be coloured according to their respective department.\n\n\nShow code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department, \n                      size = 3))\n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\ngeom_node_point is equivalent in functionality to geo_point of ggplot2\nIt allows for simple plotting of nodes in different shapes, colours and sizes. In the code chunk above, colour and size were used.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#modifying-edges",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 5.7 Modifying Edges",
    "text": "5: 5.7 Modifying Edges\nIn the code chunk below, the thickness of the edges will be mapped with the Weight variable.\n\n\nShow code\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 3)\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\ngeom_edge_link draws edges in the simplest way - as straight lines between the start and end nodes. But, it can do more that that.\nIn the example above, argument width is used to map the width of the line in proportional to the Weight attribute and argument alpha is used to introduce opacity on the line.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-part-1",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-part-1",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 6.1 Working with facet_edges() (Part 1)",
    "text": "5: 6.1 Working with facet_edges() (Part 1)\nIn the code chunk below, facet_edges() is used. Please refer to the reference guide provided for more information.\n\n\nShow code\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\ng + facet_edges(~Weekday)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nfacet_edges() is used to segment the plot by weekdays",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-part-2",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_edges-part-2",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 6.2 Working with facet_edges() (Part 2)",
    "text": "5: 6.2 Working with facet_edges() (Part 2)\nThe code chunk below uses theme() to change the position of the legend from the right to the bottom.\n\n\nShow code\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2) +\n  theme(legend.position = 'bottom')\n  \ng + facet_edges(~Weekday)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#a-framed-facet-graph",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 6.3 A framed facet graph",
    "text": "5: 6.3 A framed facet graph\nThe code chunk below adds frame to each graph.\n\n\nShow code\nset_graph_style() \n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_edges(~Weekday) +\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-facet_nodes",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 6.4 Working with facet_nodes()",
    "text": "5: 6.4 Working with facet_nodes()\nIn the code chunk below, facet_nodes() is used. Please refer to the reference guide provided for more information.\n\n\nShow code\nset_graph_style()\n\ng &lt;- ggraph(GAStech_graph, \n            layout = \"nicely\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department), \n                  size = 2)\n  \ng + facet_nodes(~Department)+\n  th_foreground(foreground = \"grey80\",  \n                border = TRUE) +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nfacet_nodes() is used to segment the plot by departments",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#computing-centrality-indices",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 7.1 Computing Centrality Indices",
    "text": "5: 7.1 Computing Centrality Indices\nCentrality measures are a collection of statistical indices use to describe the relative important of actors in a network. There are four well-known centrality measures, namely: degree, betweenness, closeness and eigenvector.\nIt is beyond the scope of this hands-on exercise to cover the principles and mathematics of these measure here. Please refer to Chapter 7: Actor Prominence of A User’s Guide to Network Analysis in R to gain better understanding of theses network measures.\n\n\nShow code\ng &lt;- GAStech_graph %&gt;%\n  mutate(betweenness_centrality = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department,\n            size=betweenness_centrality))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nmutate() of dplyr is used to perform the computation\nThe algorithm used, on the other hand, is the centrality_betweenness() of tidygraph",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-network-metrics",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 7.2 Visualising network metrics",
    "text": "5: 7.2 Visualising network metrics\nIt is important to note that from ggraph v2.0 onwards, tidygraph algorithms such as centrality measures can be accessed directly in ggraph calls. This means that it is no longer necessary to precompute and store derived node and edge centrality measures on the graph in order to use them in a plot.\n\n\nShow code\ng &lt;- GAStech_graph %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = Department, \n                      size = centrality_betweenness()))\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to Learn\n\n\n\n\nThe mutate(betweenness_centrality = centrality_betweenness()) %&gt;% step in the previous section is no longer needed\nInstead, centrality_betweenness() can be added directly to the size attribute",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#visualising-community",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 7.3 Visualising Community",
    "text": "5: 7.3 Visualising Community\ntidygraph package inherits many of the community detection algorithms embedded into igraph and makes them available for use such as :\n\nEdge-betweenness (group_edge_betweenness)\nLeading eigenvector (group_leading_eigen)\nFast-greedy (group_fast_greedy)\nLouvain (group_louvain)\nWalktrap (group_walktrap)\nLabel propagation (group_label_prop)\nInfoMAP (group_infomap)\nSpinglass (group_spinglass)\nOptimal (group_optimal)\n\nSome community algorithms are designed to take into account direction or weight, while others ignore it. Please refer to this link to find out more about community detection functions provided by tidygraph.\nIn the code chunk below, group_edge_betweenness() is used.\n\n\nShow code\ng &lt;- GAStech_graph %&gt;%\n  mutate(community = as.factor(group_edge_betweenness(weights = Weight, directed = TRUE))) %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(colour = community))  \n\ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe output network graph is coloured according to community instead of departments\ngroup_edge_betweenness() groups densely connected nodes together\n\n\n\nIn order to support effective visual investigation, the community network above has been revised by using geom_mark_hull() of ggforce package.\n\n\nShow code\ng &lt;- GAStech_graph %&gt;%\n  activate(nodes) %&gt;%\n  mutate(community = as.factor(\n    group_optimal(weights = Weight)),\n         betweenness_measure = centrality_betweenness()) %&gt;%\n  ggraph(layout = \"fr\") +\n  geom_mark_hull(\n    aes(x, y, \n        group = community, \n        fill = community),  \n    alpha = 0.2,  \n    expand = unit(0.3, \"cm\"),  # Expand\n    radius = unit(0.3, \"cm\")  # Smoothness\n  ) + \n  geom_edge_link(aes(width=Weight), \n                 alpha=0.2) +\n  scale_edge_width(range = c(0.1, 5)) +\n  geom_node_point(aes(fill = Department,\n                      size = betweenness_measure),\n                      color = \"black\",\n                      shape = 21)\n  \ng + theme_graph()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nThe similar communities have been grouped together by overlaying highlighted regions.\nThe number of communities have dropped from 30 to 4.\nPlease be reminded that you must to install and include ggforce and concaveman packages before running the code chunk above",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#data-preparation",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.1 Data Preparation",
    "text": "5: 8.1 Data Preparation\nThe data model for the interactive network graph is prepared by using the code chunk below.\n\n\nShow code\nGAStech_edges_aggregated &lt;- GAStech_edges %&gt;%\n  left_join(GAStech_nodes, by = c(\"sourceLabel\" = \"label\")) %&gt;%\n  rename(from = id) %&gt;%\n  left_join(GAStech_nodes, by = c(\"targetLabel\" = \"label\")) %&gt;%\n  rename(to = id) %&gt;%\n  filter(MainSubject == \"Work related\") %&gt;%\n  group_by(from, to) %&gt;%\n    summarise(weight = n()) %&gt;%\n  filter(from!=to) %&gt;%\n  filter(weight &gt; 1) %&gt;%\n  ungroup()",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#plotting-the-first-interactive-network-graph",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.2 Plotting the First Interactive Network Graph",
    "text": "5: 8.2 Plotting the First Interactive Network Graph\nThe code chunk will be used to plot an interactive network graph using the data prepared in the previous step.\n\n\nShow code\nvisNetwork(GAStech_nodes, \n           GAStech_edges_aggregated)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-layout",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.3 Working with layout",
    "text": "5: 8.3 Working with layout\nIn the code chunk below, Fruchterman and Reingold layout is applied using visIgraphLayout. Please refer to the reference guide provided for more information.\n\n\nShow code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") \n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nAdding the Fruchterman and Reingold layout freezes the nodes and edges.",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---nodes",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.4 Working with Visual Attributes - Nodes",
    "text": "5: 8.4 Working with Visual Attributes - Nodes\nvisNetwork() looks for a field called “group” in the nodes object and colours the nodes according to the values of the group field.\nThe code chunk below renames Department field to group.\n\n\nShow code\nGAStech_nodes &lt;- GAStech_nodes %&gt;%\n  rename(group = Department) \n\n\nAdding visLegend() to the code chunk above allows visNetwork to shade the nodes by assigning unique colours to each category in the group field.\n\n\nShow code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#working-with-visual-attributes---edges",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.5 Working with Visual Attributes - Edges",
    "text": "5: 8.5 Working with Visual Attributes - Edges\nIn the code below visEdges() is used to symbolise the edges.\n\nThe argument arrows is used to define where to place the arrow.\n\nThe smooth argument is used to plot the edges using a smooth curve.\n\nPlease refer to the reference guide provided for more information.\n\n\nShow code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visEdges(arrows = \"to\", \n           smooth = list(enabled = TRUE, \n                         type = \"curvedCW\")) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05.html#interactivity",
    "title": "Hands-On Exercise 5: Modelling, Visualising and Analysing Network Data with R",
    "section": "5: 8.6 Interactivity",
    "text": "5: 8.6 Interactivity\nIn the code chunk below, visOptions() is used to incorporate interactivity features in the data visualisation.\n\nThe argument highlightNearest highlights nearest when clicking a node.\n\nThe argument nodesIdSelection adds an id node selection creating a HTML select element.\n\nPlease refer to the reference guide provided for more information.\n\n\nShow code\nvisNetwork(GAStech_nodes,\n           GAStech_edges_aggregated) %&gt;%\n  visIgraphLayout(layout = \"layout_with_fr\") %&gt;%\n  visOptions(highlightNearest = TRUE,\n             nodesIdSelection = TRUE) %&gt;%\n  visLegend() %&gt;%\n  visLayout(randomSeed = 123)",
    "crumbs": [
      "Hands-On Exercises",
      "5: Modelling, Visualising and Analysing Network Data with R"
    ]
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "This exercise will target to answer one of the three challenges from VAST 2025 which features a fictitious island nation, Oceanus, famous for fishing and quiet seaside communities.\nThe chosen challenge is Mini-Challenge 1.\n\n\nOne of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence.\n\n\n\n\nDesign and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years.\n\n\n\n\n\nThe data for this exercise is from VAST 2025 MC1.\n\n\n\nGraph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart.\n\n\n\n\nThe code chunk below, p_load() of pacman package is used to load the R packages into R environmen.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(tidyverse, jsonlite,\n                SmartEDA, tidygraph,\n                ggraph)\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\nShow code\nkg &lt;- fromJSON(\"data/MC1_graph.json\")\nglimpse(kg)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n  ..$ node_default: Named list()\n  ..$ edge_default: Named list()\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n  ..$ Node Type     : chr [1:17412] \"Song\" \"Person\" \"Person\" \"Person\" ...\n  ..$ name          : chr [1:17412] \"Breaking These Chains\" \"Carlos Duffy\" \"Min Qin\" \"Xiuying Xie\" ...\n  ..$ single        : logi [1:17412] TRUE NA NA NA NA FALSE ...\n  ..$ release_date  : chr [1:17412] \"2017\" NA NA NA ...\n  ..$ genre         : chr [1:17412] \"Oceanus Folk\" NA NA NA ...\n  ..$ notable       : logi [1:17412] TRUE NA NA NA NA TRUE ...\n  ..$ id            : int [1:17412] 0 1 2 3 4 5 6 7 8 9 ...\n  ..$ written_date  : chr [1:17412] NA NA NA NA ...\n  ..$ stage_name    : chr [1:17412] NA NA NA NA ...\n  ..$ notoriety_date: chr [1:17412] NA NA NA NA ...\n $ links     :'data.frame': 37857 obs. of  4 variables:\n  ..$ Edge Type: chr [1:37857] \"InterpolatesFrom\" \"RecordedBy\" \"PerformerOf\" \"ComposerOf\" ...\n  ..$ source   : int [1:37857] 0 0 1 1 2 2 3 5 5 5 ...\n  ..$ target   : int [1:37857] 1841 4 0 16180 0 16180 0 5088 14332 11677 ...\n  ..$ key      : int [1:37857] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\n\n\nstr(kg, max.level = 1)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:\n\n\n\n\n\n\nnodes_tbl &lt;- as_tibble(kg$nodes)\n\nglimpse(nodes_tbl)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n\n\nedges_tbl &lt;- as_tibble(kg$links)\n\nglimpse(edges_tbl)\n\nRows: 37,857\nColumns: 4\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ source      &lt;int&gt; 0, 0, 1, 1, 2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ target      &lt;int&gt; 1841, 4, 0, 16180, 0, 16180, 0, 5088, 14332, 11677, 2479, …\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#background",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#background",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "One of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#tasks-and-questions",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#tasks-and-questions",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "Design and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-source",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-source",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "The data for this exercise is from VAST 2025 MC1."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-description",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#data-description",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "Graph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#install-and-load-the-required-libraries",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#install-and-load-the-required-libraries",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "The code chunk below, p_load() of pacman package is used to load the R packages into R environmen.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(tidyverse, jsonlite,\n                SmartEDA, tidygraph,\n                ggraph)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#importing-data",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#importing-data",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "",
    "text": "For the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\nShow code\nkg &lt;- fromJSON(\"data/MC1_graph.json\")\nglimpse(kg)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n  ..$ node_default: Named list()\n  ..$ edge_default: Named list()\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n  ..$ Node Type     : chr [1:17412] \"Song\" \"Person\" \"Person\" \"Person\" ...\n  ..$ name          : chr [1:17412] \"Breaking These Chains\" \"Carlos Duffy\" \"Min Qin\" \"Xiuying Xie\" ...\n  ..$ single        : logi [1:17412] TRUE NA NA NA NA FALSE ...\n  ..$ release_date  : chr [1:17412] \"2017\" NA NA NA ...\n  ..$ genre         : chr [1:17412] \"Oceanus Folk\" NA NA NA ...\n  ..$ notable       : logi [1:17412] TRUE NA NA NA NA TRUE ...\n  ..$ id            : int [1:17412] 0 1 2 3 4 5 6 7 8 9 ...\n  ..$ written_date  : chr [1:17412] NA NA NA NA ...\n  ..$ stage_name    : chr [1:17412] NA NA NA NA ...\n  ..$ notoriety_date: chr [1:17412] NA NA NA NA ...\n $ links     :'data.frame': 37857 obs. of  4 variables:\n  ..$ Edge Type: chr [1:37857] \"InterpolatesFrom\" \"RecordedBy\" \"PerformerOf\" \"ComposerOf\" ...\n  ..$ source   : int [1:37857] 0 0 1 1 2 2 3 5 5 5 ...\n  ..$ target   : int [1:37857] 1841 4 0 16180 0 16180 0 5088 14332 11677 ...\n  ..$ key      : int [1:37857] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\n\n\nstr(kg, max.level = 1)\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n $ links     :'data.frame': 37857 obs. of  4 variables:\n\n\n\n\n\n\nnodes_tbl &lt;- as_tibble(kg$nodes)\n\nglimpse(nodes_tbl)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n\n\nedges_tbl &lt;- as_tibble(kg$links)\n\nglimpse(edges_tbl)\n\nRows: 37,857\nColumns: 4\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ source      &lt;int&gt; 0, 0, 1, 1, 2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ target      &lt;int&gt; 1841, 4, 0, 16180, 0, 16180, 0, 5088, 14332, 11677, 2479, …\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#creating-knowledge-graph",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#creating-knowledge-graph",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "Creating knowledge graph",
    "text": "Creating knowledge graph\n\nStep 1: Mapping from node it to row index\n\nid_map &lt;- tibble(id = nodes_tbl$id,\n                index = seq_len(\n                  nrow(nodes_tbl)))\nid_map\n\n# A tibble: 17,412 × 2\n      id index\n   &lt;int&gt; &lt;int&gt;\n 1     0     1\n 2     1     2\n 3     2     3\n 4     3     4\n 5     4     5\n 6     5     6\n 7     6     7\n 8     7     8\n 9     8     9\n10     9    10\n# ℹ 17,402 more rows\n\n\nThis ensures each id from your node list is mapped to the correct row number\n\n\nStep 2: Map source and target IDs to row indices\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  left_join(id_map, by = c(\"source\" = \"id\")) %&gt;%\n  rename(from = index) %&gt;%\n  left_join(id_map, by = c(\"target\" = \"id\")) %&gt;%\n  rename(to = index)\n\nedges_tbl\n\n# A tibble: 37,857 × 6\n   `Edge Type`      source target   key  from    to\n   &lt;chr&gt;             &lt;int&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt;\n 1 InterpolatesFrom      0   1841     0     1  1842\n 2 RecordedBy            0      4     0     1     5\n 3 PerformerOf           1      0     0     2     1\n 4 ComposerOf            1  16180     0     2 16181\n 5 PerformerOf           2      0     0     3     1\n 6 ProducerOf            2  16180     0     3 16181\n 7 PerformerOf           3      0     0     4     1\n 8 InterpolatesFrom      5   5088     0     6  5089\n 9 InStyleOf             5  14332     0     6 14333\n10 InterpolatesFrom      5  11677     0     6 11678\n# ℹ 37,847 more rows\n\n\n\n\nStep 3: Filter out any unmatched (invalid) edges\n\nedges_tbl &lt;- edges_tbl %&gt;%\n  filter(!is.na(from), !is.na(to))\n\n\n\nStep 4: Creating the graph\nLastly, tbl_graph() is used to create tidygraph’s graph object by using the code chunk below\n\ngraph &lt;- tbl_graph(nodes = nodes_tbl,\n                   edges = edges_tbl,\n                   directed = kg$directed)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-the-knowledge-graph",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05.html#visualising-the-knowledge-graph",
    "title": "In-Class Exercise 5: Preparation for VAST Mini Mini-Challenge 1 2025",
    "section": "Visualising the knowledge graph",
    "text": "Visualising the knowledge graph\n\nset.seed(1234)\n\n\nVisualising the whole graph\n\nggraph(graph, layout = 'fr') +\n  geom_edge_link(alpha = 0.3,\n                 colour = \"gray\") +\n  geom_node_point(aes(colour = `Node Type`),\n                  size = 4) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                 size = 2.5) +\n  theme_void()\n\n\n\nStep 1: Filter edge to only “MemberOf”\n\ngraph_memberof &lt;- graph %&gt;%\n  activate(edges) %&gt;%\n  filter(`Edge Type` == \"MemberOf\")\n\ngraph_memberof\n\n# A tbl_graph: 17412 nodes and 568 edges\n#\n# A rooted forest with 16844 trees\n#\n# Edge Data: 568 × 6 (active)\n    from    to `Edge Type` source target   key\n   &lt;int&gt; &lt;int&gt; &lt;chr&gt;        &lt;int&gt;  &lt;int&gt; &lt;int&gt;\n 1     8 16882 MemberOf         7  16881     0\n 2     9 16882 MemberOf         8  16881     0\n 3    68 16840 MemberOf        67  16839     0\n 4    83 16801 MemberOf        82  16800     0\n 5    84 16801 MemberOf        83  16800     0\n 6    91 16817 MemberOf        90  16816     0\n 7   100 16891 MemberOf        99  16890     0\n 8   108 16876 MemberOf       107  16875     0\n 9   110 16876 MemberOf       109  16875     0\n10   150 16757 MemberOf       149  16756     0\n# ℹ 558 more rows\n#\n# Node Data: 17,412 × 10\n  `Node Type` name          single release_date genre notable    id written_date\n  &lt;chr&gt;       &lt;chr&gt;         &lt;lgl&gt;  &lt;chr&gt;        &lt;chr&gt; &lt;lgl&gt;   &lt;int&gt; &lt;chr&gt;       \n1 Song        Breaking The… TRUE   2017         Ocea… TRUE        0 &lt;NA&gt;        \n2 Person      Carlos Duffy  NA     &lt;NA&gt;         &lt;NA&gt;  NA          1 &lt;NA&gt;        \n3 Person      Min Qin       NA     &lt;NA&gt;         &lt;NA&gt;  NA          2 &lt;NA&gt;        \n# ℹ 17,409 more rows\n# ℹ 2 more variables: stage_name &lt;chr&gt;, notoriety_date &lt;chr&gt;\n\n\n\n\nStep 2: Extract only connected nodes (i.e., use in these edges)\n\nused_node_indices &lt;- graph_memberof %&gt;%\n  activate(edges) %&gt;%\n  as_tibble() %&gt;%\n  select(from, to) %&gt;%\n  unlist() %&gt;%\n  unique()\n\nused_node_indices\n\n  [1]     8     9    68    83    84    91   100   108   110   150   151   163\n [13]   191   222   223   224   237   297   304   356   441   442   443   444\n [25]   456   457   546   547   560   561   562   563   565   567   568   595\n [37]   613   615   628   629   634   635   677   679   708   768   769   770\n [49]   845   873   874   879   883   884   942   944   968   969   988  1053\n [61]  1054  1067  1080  1085  1087  1090  1091  1094  1095  1104  1142  1143\n [73]  1144  1181  1183  1198  1199  1201  1203  1220  1221  1262  1264  1271\n [85]  1274  1276  1277  1278  1336  1337  1347  1348  1349  1438  1439  1442\n [97]  1443  1445  1446  1475  1491  1492  1493  1494  1495  1498  1535  1536\n[109]  1542  1576  1580  1613  1615  1616  1663  1665  1717  1719  1720  1744\n[121]  1775  1776  1778  1779  1816  1817  1819  1821  1859  1882  1883  1913\n[133]  1919  1929  1930  1993  1994  1995  1996  2005  2007  2046  2070  2071\n[145]  2281  2282  2283  2329  2330  2345  2346  2347  2364  2389  2390  2427\n[157]  2459  2461  2507  2509  2510  2517  2518  2536  2538  2592  2593  2635\n[169]  2636  2637  2638  2651  2652  2773  2774  2781  2783  2873  2878  2879\n[181]  2933  2979  2982  3015  3016  3069  3071  3108  3156  3158  3165  3166\n[193]  3167  3176  3177  3178  3337  3361  3367  3378  3380  3414  3503  3504\n[205]  3505  3545  3546  3666  3667  3674  3675  3713  3718  3752  3753  3754\n[217]  3755  3762  3765  3775  3776  3821  3822  3842  3844  3847  3848  3895\n[229]  3896  4010  4011  4012  4074  4076  4077  4093  4126  4132  4135  4142\n[241]  4145  4146  4147  4256  4257  4258  4259  4260  4285  4286  4318  4320\n[253]  4348  4350  4352  4356  4357  4395  4396  4398  4434  4435  4446  4495\n[265]  4496  4504  4567  4568  4569  4570  4573  4574  4575  4578  4580  4609\n[277]  4665  4666  4683  4684  4703  4704  4730  4731  4732  4733  4754  4756\n[289]  4757  4777  4817  4820  4937  5017  5025  5027  5049  5050  5115  5118\n[301]  5119  5187  5188  5259  5267  5310  5361  5367  5368  5369  5371  5403\n[313]  5405  5460  5543  5545  5555  5558  5559  5646  5647  5728  5729  5806\n[325]  5807  5808  5862  5866  5870  5974  5975  5977  5979  5989  5991  6031\n[337]  6033  6038  6040  6053  6054  6056  6057  6199  6270  6271  6317  6318\n[349]  6465  6466  6471  6526  6529  6535  6566  6567  6568  6569  6606  6635\n[361]  6668  6669  6890  6891  6892  6951  6953  7044  7045  7155  7157  7180\n[373]  7215  7216  7218  7219  7253  7388  7463  7464  7465  7514  7516  7565\n[385]  7570  7571  7617  7618  7711  7853  7865  7866  7888  7889  7938  8131\n[397]  8137  8192  8195  8197  8200  8249  8251  8254  8265  8266  8267  8272\n[409]  8273  8287  8288  8290  8291  8313  8314  8382  8447  8448  8467  8468\n[421]  8469  8610  8612  8614  8753  9032  9033  9179  9180  9195  9200  9211\n[433]  9214  9368  9369  9381  9384  9385  9443  9445  9509  9510  9511  9594\n[445]  9596  9634  9636  9643  9644  9772 10224 10225 10348 10452 10453 10555\n[457] 10556 10661 10662 10743 10745 10746 10795 10799 10962 11016 11017 11018\n[469] 11130 11322 11616 11982 11983 11984 12054 12057 12083 12338 12527 12528\n[481] 12625 12815 12816 12993 13286 13852 16941 16942 16943 16949 16950 16951\n[493] 16952 16959 16960 16984 16985 16986 16987 16994 16995 16996 17021 17022\n[505] 17031 17032 17042 17043 17044 17045 17046 17055 17056 17057 17062 17063\n[517] 17070 17071 17090 17091 17098 17099 17100 17108 17109 17110 17119 17120\n[529] 17136 17137 17138 17165 17166 17167 17190 17191 17192 17206 17207 17227\n[541] 17228 17229 17230 17241 17242 17243 17249 17250 17256 17257 17258 17259\n[553] 17260 17296 17297 17298 17299 17310 17311 17312 17313 17314 17324 17325\n[565] 17326 17327 17350 17356 16882 16840 16801 16817 16891 16876 16757 16895\n[577] 16768 16835 16834 16750 16862 16814 16771 16766 16791 16807 16915 16928\n[589] 16900 16836 16780 16887 16846 16859 16747 16755 16934 16847 16837 16861\n[601] 16927 16804 16802 16877 16758 16890 16754 16752 16809 16808 16905 16774\n[613] 16761 16794 16911 16773 16811 16819 16833 16798 16782 16844 16937 16765\n[625] 16762 16746 16931 16787 16933 16827 16841 16851 16813 16756 16883 16745\n[637] 16748 16826 16749 16767 16793 16930 16872 16778 16921 16868 16763 16917\n[649] 16831 16902 16884 16894 16799 16897 16874 16832 16815 16806 16776 16805\n[661] 16893 16849 16779 16850 16903 16912 16777 16824 16920 16800 16786 16839\n[673] 16919 16885 16842 16829 16775 16848 16936 16822 16823 16753 16916 16789\n[685] 16914 16852 16803 16816 16865 16810 16759 16857 16913 16881 16879 16924\n[697] 16772 16909 16906 16843 16845 16764 16853 16901 16860 16856 16892 16812\n[709] 16888 16818 16899 16904 16878 16792 16830 16781 16922 16751 16908 16886\n[721] 16795 16863 16867 16923 16938 16866 16838 16858 16760 16820 16880 16875\n[733] 16910 16896 16854 16935 16785 16796 16871 16783 16770 16926 16790 16907\n[745] 16828 16769 16825 16797 16925 16929 16932 16869 16864 16889 16784 16940\n[757] 16870 16918 16821 16873 16788 16898 16855 16939 16944 16953 16961 16988\n[769] 16997 17023 17033 17047 17058 17064 17072 17092 17101 17111 17121 17139\n[781] 17168 17193 17208 17231 17244 17251 17261 17300 17315 17328 17362\n\n\n\n\nStep 3: Keep only those nodes\n\ngraph_memberof &lt;- graph_memberof %&gt;%\n  activate(nodes) %&gt;%\n  mutate(row_id = row_number()) %&gt;%\n  filter(row_id %in% used_node_indices) %&gt;%\n  select(-row_id)\n\n\n\nStep 4: Plot the sub-graph\n\nggraph(graph_memberof,\n       layout = \"fr\") +\n  geom_edge_link(alpha = 0.5,\n                 colour = \"gray\") +\n  geom_node_point(aes(colour = `Node Type`),\n                  size = 1) +\n  geom_node_text(aes(label = name),\n                 repel = TRUE,\n                 size = 2.5) +\n  theme_void()"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "This exercise will be composed of two phases:\n\nPhase 1: Designing my own data visualisation.\nPhase 2: Selecting one submission provided by my classmate, identifying three good design principles and critiquing three areas for further improvement. Based on these feedbacks, I will prepare the makeover version of their data visualisation.\n\nThis page will focus on Phase 1 of this exercise and Take-Home Exercise 1-2 will cover Phase 2.\n\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\nAssuming the role of the graphical editor of the media company, I am tasked to prepare at most three data visualisation for this article.\n\n\n\n\n\n\nTip\n\n\n\nCreating enlightening and truthful data visualizations involves focusing on accuracy, transparency, and the ability to effectively communicate insights. It is about presenting data in a way that is both informative and aesthetically pleasing, ensuring the audience can grasp the information quickly and accurately.\n\n\nThe data should also be processed by using appropriate tidyverse family of packages and the data visualisation must be prepared using ggplot2 and its extensions. In addition, no interactive data visualisation are required.\n\n\n\nThe data for this exercise is the Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 dataset, retrieved by Department of Statistics, Singapore (DOS).\n\n\n\nThese, five R packages will be used for the preparation of this exercise:\n\ntidyverse: A collection of R packages designed for data science. It includes packages like dplyr, ggplot2, tidyr, and readr that simplify data wrangling and visualization.\npatchwork: An R package that allows users to easily combine multiple ggplot2 plots into a single composite layout, useful for comparative visual analysis.\nggthemes: This package adds extra themes, scales, and geoms to ggplot2, making it easier to apply distinct themes to plots.\nknitr: A reporting package that integrates R code with markdown, enabling dynamic report generation in formats such as HTML, PDF, and Word, often used with R Markdown and Quarto.\ncowplot: An extension of ggplot2 that simplifies plot arrangement and annotation. It provides functions like ggdraw() and draw_plot() for overlaying and aligning plots, often used for fine-tuned visual layouts.\n\nCode chunk below will be used to check if these packages have been installed and also load them onto the working R environment.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\npacman::p_load(tidyverse, patchwork, ggthemes, knitr, cowplot)\n\n\n\n\n\n\n\nFor the purpose of this exercise, a data file called respopagesex2024 will be used. It consists of data about Singapore Residents by Planning Area / Subzone, categorised by a Single Year of Age and Sex,for June 2024. It is in a csv file format.\nThe code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nsg_data &lt;- read_csv(\"data/respopagesex2024.csv\")",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#background",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#background",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "A local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\nAssuming the role of the graphical editor of the media company, I am tasked to prepare at most three data visualisation for this article.\n\n\n\n\n\n\nTip\n\n\n\nCreating enlightening and truthful data visualizations involves focusing on accuracy, transparency, and the ability to effectively communicate insights. It is about presenting data in a way that is both informative and aesthetically pleasing, ensuring the audience can grasp the information quickly and accurately.\n\n\nThe data should also be processed by using appropriate tidyverse family of packages and the data visualisation must be prepared using ggplot2 and its extensions. In addition, no interactive data visualisation are required.",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#data-source",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#data-source",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "The data for this exercise is the Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 dataset, retrieved by Department of Statistics, Singapore (DOS).",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#install-and-load-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#install-and-load-the-required-libraries",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "These, five R packages will be used for the preparation of this exercise:\n\ntidyverse: A collection of R packages designed for data science. It includes packages like dplyr, ggplot2, tidyr, and readr that simplify data wrangling and visualization.\npatchwork: An R package that allows users to easily combine multiple ggplot2 plots into a single composite layout, useful for comparative visual analysis.\nggthemes: This package adds extra themes, scales, and geoms to ggplot2, making it easier to apply distinct themes to plots.\nknitr: A reporting package that integrates R code with markdown, enabling dynamic report generation in formats such as HTML, PDF, and Word, often used with R Markdown and Quarto.\ncowplot: An extension of ggplot2 that simplifies plot arrangement and annotation. It provides functions like ggdraw() and draw_plot() for overlaying and aligning plots, often used for fine-tuned visual layouts.\n\nCode chunk below will be used to check if these packages have been installed and also load them onto the working R environment.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\npacman::p_load(tidyverse, patchwork, ggthemes, knitr, cowplot)",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#importing-data",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "",
    "text": "For the purpose of this exercise, a data file called respopagesex2024 will be used. It consists of data about Singapore Residents by Planning Area / Subzone, categorised by a Single Year of Age and Sex,for June 2024. It is in a csv file format.\nThe code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nsg_data &lt;- read_csv(\"data/respopagesex2024.csv\")",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#checking-for-duplicates",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#checking-for-duplicates",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 2.1 Checking for duplicates",
    "text": "1-1: 2.1 Checking for duplicates\nBefore proceeding further with the EDA, a check for duplicated records was done using group_by_all() and filtering rows with more than 1 count. The results of the code below confirms that there were no duplicated records.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nduplicate &lt;- sg_data %&gt;% \n  group_by_all() %&gt;% \n  filter(n()&gt;1)\n  \nduplicate\n\n# A tibble: 0 × 6\n# Groups:   PA, SZ, Age, Sex, Pop, Time [0]\n# ℹ 6 variables: PA &lt;chr&gt;, SZ &lt;chr&gt;, Age &lt;chr&gt;, Sex &lt;chr&gt;, Pop &lt;dbl&gt;,\n#   Time &lt;dbl&gt;",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#fixing-age-column-inconsistency",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#fixing-age-column-inconsistency",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 2.2 Fixing Age Column Inconsistency",
    "text": "1-1: 2.2 Fixing Age Column Inconsistency\nAlthough there were no duplicated records, the earlier EDA of variable types and the data table revealed that the Age column, which appears to be a continuous variable, was incorrectly recognised as a categorical variable.\nUpon further analysis of the Age column using the code below, it was found to contain 91 unique values. These values range from 0 to 89 and are numeric in nature, but the last value is a string, “90_and_Over”. This string caused the Age column to be recognised as a categorical variable instead of a continuous one.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nunique(sg_data$Age)\n\n [1] \"0\"           \"1\"           \"2\"           \"3\"           \"4\"          \n [6] \"5\"           \"6\"           \"7\"           \"8\"           \"9\"          \n[11] \"10\"          \"11\"          \"12\"          \"13\"          \"14\"         \n[16] \"15\"          \"16\"          \"17\"          \"18\"          \"19\"         \n[21] \"20\"          \"21\"          \"22\"          \"23\"          \"24\"         \n[26] \"25\"          \"26\"          \"27\"          \"28\"          \"29\"         \n[31] \"30\"          \"31\"          \"32\"          \"33\"          \"34\"         \n[36] \"35\"          \"36\"          \"37\"          \"38\"          \"39\"         \n[41] \"40\"          \"41\"          \"42\"          \"43\"          \"44\"         \n[46] \"45\"          \"46\"          \"47\"          \"48\"          \"49\"         \n[51] \"50\"          \"51\"          \"52\"          \"53\"          \"54\"         \n[56] \"55\"          \"56\"          \"57\"          \"58\"          \"59\"         \n[61] \"60\"          \"61\"          \"62\"          \"63\"          \"64\"         \n[66] \"65\"          \"66\"          \"67\"          \"68\"          \"69\"         \n[71] \"70\"          \"71\"          \"72\"          \"73\"          \"74\"         \n[76] \"75\"          \"76\"          \"77\"          \"78\"          \"79\"         \n[81] \"80\"          \"81\"          \"82\"          \"83\"          \"84\"         \n[86] \"85\"          \"86\"          \"87\"          \"88\"          \"89\"         \n[91] \"90_and_Over\"\n\n\n\n\n\nTo address this issue, the code below converts the string “90_and_Over” into the numerical value 90, and subsequently ensures that the Age column is treated as a numeric variable.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nsg_data$Age &lt;- as.character(sg_data$Age)\n\nsg_data$Age[sg_data$Age == \"90_and_Over\"] &lt;- \"90\"\n\nsg_data$Age &lt;- as.numeric(sg_data$Age)",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#binning-age-column",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#binning-age-column",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 2.3 Binning Age Column",
    "text": "1-1: 2.3 Binning Age Column\nEven after fixing the inconsistent data type in the Age column, there were still 91 unique values, which will be too many for meaningful analysis. Therefore, the Age column will be binned into the following categorise using the code below:\n\nYoung: Singapore residents aged 0 to 24\nEconomically_Active: Singapore residents aged 25 to 64\nAged: Singapore residents aged 65 and above\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nsg_data$Age_Group &lt;- cut(\n  sg_data$Age,\n  breaks = c(-1, 24, 64, Inf),\n  labels = c(\"Young\", \"Economically_Active\", \"Aged\"),\n  right = TRUE\n)\n\nunique(sg_data$Age_Group) # shows that the binning works\n\n[1] Young               Economically_Active Aged               \nLevels: Young Economically_Active Aged\n\n\n\n\n\nAfter completing the data manipulation steps described in earlier, the resulting data is shown in the table below.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPA\nSZ\nAge\nSex\nPop\nTime\nAge_Group\n\n\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n0\nMales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n0\nFemales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n1\nMales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n1\nFemales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n2\nMales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n2\nFemales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n3\nMales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n3\nFemales\n10\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n4\nMales\n30\n2024\nYoung\n\n\nAng Mo Kio\nAng Mo Kio Town Centre\n4\nFemales\n10\n2024\nYoung\n\n\n\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nkable(head(sg_data, 10))",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#population-across-planning-areas-by-sex",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#population-across-planning-areas-by-sex",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 3.1 Population Across Planning Areas by Sex",
    "text": "1-1: 3.1 Population Across Planning Areas by Sex\nThis section examines the distribution of Singapore’s Population across Planning Areas, categorised by Sex, to better understand the demographic patterns of different regions.\n\n1-1: 3.1.1 Feature Engineering\nIn this step, the following features were added to support in the visual analysis later:\n\nThe dataset sg_data was grouped by PA and Sex to calculate the Pop for each subgroup using summarise(Pop = sum(Pop)).\nA second group by PA was performed to calculate the Total population per PA, stored in a new column Total.\nRows with a Total population of 0 were removed using filter(Total &gt; 0) to eliminate empty PAs from the analysis.\nThe resulting data structure, demography_sex, now contains the Total population broken down by Sex and PA, along with overall population Total per PA.\n\nThe code below performs the transformation necessary in preparation for visual analysis, enabling the comparison of population distribution between Males and Females across different PAs.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ndemography_sex &lt;- sg_data %&gt;%\n  group_by(PA, Sex) %&gt;%\n  summarise(Pop = sum(Pop)) %&gt;%\n  group_by(PA) %&gt;%\n  mutate(Total = sum(Pop))\n\ndemography_sex &lt;- demography_sex %&gt;%\n  filter(Total &gt; 0)\n\nkable(head(demography_sex, 10))\n\n\n\n\nPA\nSex\nPop\nTotal\n\n\n\n\nAng Mo Kio\nFemales\n84210\n160450\n\n\nAng Mo Kio\nMales\n76240\n160450\n\n\nBedok\nFemales\n143770\n277660\n\n\nBedok\nMales\n133890\n277660\n\n\nBishan\nFemales\n45640\n88210\n\n\nBishan\nMales\n42570\n88210\n\n\nBukit Batok\nFemales\n86070\n168390\n\n\nBukit Batok\nMales\n82320\n168390\n\n\nBukit Merah\nFemales\n78160\n149390\n\n\nBukit Merah\nMales\n71230\n149390\n\n\n\n\n\n\n\n\n\n\n1-1: 3.1.2 Methods and Explanation\nThe aim is to create a detailed view of Population distribution by Sex across Singapore’s Planning Areas. These were the steps taken to create a stacked horizontal bar chart for visualisation:\nHorizontal Bar Chart s1:\n\nTo create a horizontal bar chart with population Total in descending order, the PA was initially ordered by ascending Total using the pa_order() vector. Although the factor levels were arranged in ascending order, the use of coord_flip() in the plot reverses the axis orientation, resulting in Total being displayed in descending order as intended.\nggplot() was used with geom_bar() (with stat = “identity” and position = “stack”) to create a stacked horizontal bar chart (s1), displaying the Pop by Sex across PA.\ntheme_minimal() was applied for a clean visual style, and labs() with ggtitle() were used to customise the axis labels and plot title.\nscale_fill_manual() was used to assign distinct colours to Males and Females and to control the legend order, explicitly setting it as: Males → Females instead of the reversed order if left as default.\nscale_y_continuous(labels = scales::comma) was used to show numerical numbers rather than the scientific notation.\ntheme(legend.position = “bottom”) was used to move the legend position from the right to the bottom to allow the plot to be wider.\n\nZoomed-in Plot s2:\n\nA zoomed-in plot (s2) shows the bottom 10 PA and will be embedded into the main plot later. This method makes it easier to examine less populous PAs in the same figure.\nSince the zoomed-in plot (s2) will be overlaid on top of the main chart (s1), theme_test() was used to provide a contrast with the main s1 plot in the background.\nThe legend and background was removed using theme() and the axis titles were removed using labs() for a cleaner plot.\n\nZoom Rectangle:\n\nThis was created using cowplot() to be a transparent dotted line rectangle to allow highlighting of the zoomed-in location.\n\nOverlaid Plots:\n\nggdraw() was used to create an empty canvas, and draw_plot() was used to overlay s1, s2, and the zoom rectangles. All these functions are a part of the cowplot package.\n\n\n\n1-1: 3.1.3 Plots and Analysis\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npa_order &lt;- demography_sex %&gt;%\n  distinct(PA, Total) %&gt;%\n  arrange(Total) %&gt;%\n  pull(PA)\n\ndemography_sex &lt;- demography_sex %&gt;%\n  mutate(\n    PA = factor(PA, levels = pa_order)\n  )\n\ns1 &lt;- ggplot(data = demography_sex, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Population\",\n    fill = \"Sex\"\n  ) +\n  ggtitle(\"Population Across Planning Areas by Sex\") +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  scale_y_continuous(labels = scales::comma) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\ndemography_sex_bottom10 &lt;- demography_sex %&gt;%\n  filter(PA %in% head(pa_order, 10))\n\ns2 &lt;- ggplot(data = demography_sex_bottom10, \n       aes(x = PA, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_test() +\n  labs(\n    x = NULL,\n    y = NULL\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"\n    ),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(\n    legend.position = \"none\",\n    plot.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\nzoom_rect &lt;- ggplot() +\n  geom_rect(aes(xmin = 0, xmax = 1, ymin = 0, ymax = 1),\n            fill = NA, color = \"black\", linetype = \"dashed\") +\n  theme_void()\n\nggdraw() +\n  draw_plot(s1, 0, 0, 1, 1) +\n  draw_plot(s2, 0.4, 0.185, 0.56, 0.25) +\n  draw_plot(zoom_rect, 0.005, 0.155, 0.3, 0.206) +\n  draw_plot(zoom_rect, 0.37, 0.18, 0.62, 0.27) # (left , btm, right, top)\n\n\n\n\n\n\n\nMost Populated\n\nTampines\nBedok\nSengkang\nJurong West\nWoodlands\n\n\n\n\nLeast Populated\n\nSeletar\nMuseum\nWestern Water Catchment\nSungei Kadut\nOrchard\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\nGender Ratio\n\nThe Sex distribution is generally balanced across all PAs.\n\n\n\nResidential Areas\n\nThe most populated PAs consists of a mix of mature estates (e.g., Tampines, Bedok) and newer estates (e.g, Sengkang, Jurong West, Woodlands) (Refer to Section 5 Appendix: Singapore’s Estate Classification\nThis reflects the government of Singapore’s success in transforming newer towns or underutilised land into well-developed residential hubs that are comparable to existing mature estates.\n\n\n\nCommercial / Industrial /Military Areas\n\nThe least populated PAs are primarily non-residential zones such as:\n\nCommercial: Museum, Orchard\nIndustrial: Sungei Kadut\nMilitary/Nature: Seletar (air base), Western Water Catchment\n\n\n\n\n\n\n\n1-1: 3.2.4 Reflections\n\n\n\n\n\n\nReflections\n\n\n\nThe ggforce package includes the facet_zoom() function that allows for zooming in on a part of a plot and automatically draws a box to indicate the zoomed region.\nHowever, facet_zoom() does not support zooming in on discrete scales like the bottom 10 PAs in Pop. Therefore, I had manually created a separate zoomed-in plot (s2) and the zoom rectangles to highlight the region that will be zoomed-in.",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#percentage-of-age-groups-by-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#percentage-of-age-groups-by-planning-areas",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 3.2 Percentage of Age Groups by Planning Areas",
    "text": "1-1: 3.2 Percentage of Age Groups by Planning Areas\nThis visualisation aims to show the percentage distribution of Age Groups (Young, Economically_Active and Aged) across Planning Areas. This will provide insights into how Singapore residents, in different stages of life, were distributed across Singapore.\n\n1-1: 3.2.1 Feature Engineering\nThe following steps were done in preparation for visual analysis:\n\nThe dataset sg_data was grouped by PA and Age_Group to calculate the Pop for each subgroup using summarise(Pop = sum(Pop)).\nA second group by PA was performed to compute the Total population per PA, stored in a new column Total using mutate(Total = sum(Pop)).\nRows with a Total population of 0 were removed using filter(Total &gt; 0) to eliminate empty PAs from the analysis.\nThe data was then transformed to compute percentage composition of each Age Group within each PA using mutate(Pct_Age_Group = (Pop / Total) * 100).\nPercentages of Age Group were rounded to 1 decimal place using mutate(across(Pct_Age_Group, ~ round(.x, 1))).\n\nThe code below transforms the data and results in the final output pct_demography_age. It contains the percentage of Age Group (Young, Economically Active) for each PA.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ndemography_age &lt;- sg_data %&gt;%\n  group_by(PA, Age_Group) %&gt;%\n  summarise(Pop = sum(Pop)) %&gt;%\n  group_by(PA) %&gt;%\n  mutate(Total = sum(Pop))\n\ndemography_age &lt;- demography_age %&gt;%\n  filter(Total &gt; 0)\n\npct_demography_age &lt;- demography_age %&gt;%\n  mutate(Pct_Age_Group = (Pop / Total) * 100) %&gt;%\n  select(PA, Age_Group, Pct_Age_Group)\n\npct_demography_age &lt;- pct_demography_age %&gt;%\n  mutate(across(Pct_Age_Group, ~ round(.x, 1)))\n\nkable(head(pct_demography_age, 10))\n\n\n\n\nPA\nAge_Group\nPct_Age_Group\n\n\n\n\nAng Mo Kio\nYoung\n20.1\n\n\nAng Mo Kio\nEconomically_Active\n54.6\n\n\nAng Mo Kio\nAged\n25.3\n\n\nBedok\nYoung\n21.8\n\n\nBedok\nEconomically_Active\n55.5\n\n\nBedok\nAged\n22.7\n\n\nBishan\nYoung\n22.6\n\n\nBishan\nEconomically_Active\n55.4\n\n\nBishan\nAged\n21.9\n\n\nBukit Batok\nYoung\n24.8\n\n\n\n\n\n\n\n\n\n\n1-1: 3.2.2 Methods and Explanation\nTo visualize the percentage distribution of Age Groups across Planning Areas, the following plotting steps were performed:\n\nThe PA order in this plot was assigned to match the order used in Section 3.1.3: Population Across Planning Areas by Sex, allowing for easy comparisons between them.\nThe Age Group variable was explicitly ordered as Aged → Economically Active → Young so that the stacked bars chart will be in the reversed order after coord_flip().\nThe legend position was set to be at the bottom using theme(legend.position = “bottom”).\nThe remaining functions have been explained in the plot above in Section 3.1.2: Population Across Planning Areas by Sex.\n\n\n\n1-1: 3.2.3 Plots and Analysis\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npct_demography_age &lt;- pct_demography_age %&gt;%\n  mutate(PA = factor(PA, levels = pa_order),\n         Age_Group = factor(Age_Group, levels = c(\"Aged\", \"Economically_Active\", \"Young\")))\n\nggplot(data = pct_demography_age, \n       aes(x = PA, y = Pct_Age_Group, fill = Age_Group)) +\n  geom_bar(stat = \"identity\", position = \"stack\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",\n    y = \"Percentage\",\n    fill = \"Age Group\"\n  ) +\n  ggtitle(\"Percentage of Age Groups by Planning Area\") +\n  scale_fill_manual(\n    values = c(\n      \"Young\" = \"#DDCC77\",\n      \"Economically_Active\" = \"#44AA99\",\n      \"Aged\" = \"#AA4499\"\n    ),\n    breaks = c(\"Young\", \"Economically_Active\", \"Aged\")\n  ) +\n  theme(\n    legend.position = \"bottom\"\n  )\n\n\n\n\n\nHighest concentrations of Young residents (0 to 24)\n\nPunggol\nSembawang\nSengkang\n\nHigher concentrations of Economically Active and lower proportions of Aged\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\nyoung_data &lt;- pct_demography_age %&gt;%\n  filter(Age_Group == \"Young\") %&gt;%\n  arrange(desc(Pct_Age_Group))\n\nmean(young_data$Pct_Age_Group)\n\n[1] 23.15714\n\nkable(head(young_data, 10))\n\n\n\n\nPA\nAge_Group\nPct_Age_Group\n\n\n\n\nWestern Water Catchment\nYoung\n40.7\n\n\nChangi\nYoung\n31.7\n\n\nPunggol\nYoung\n31.4\n\n\nSouthern Islands\nYoung\n29.5\n\n\nSembawang\nYoung\n29.0\n\n\nSingapore River\nYoung\n28.6\n\n\nBukit Timah\nYoung\n28.5\n\n\nSengkang\nYoung\n28.5\n\n\nTanglin\nYoung\n27.2\n\n\nNewton\nYoung\n26.8\n\n\n\n\n\nThese consists of newer non-mature estates (Refer to Section 5 Appendix: Singapore’s Estate Classification such as Punggol, Sengkang, and Sembawang, which are actively being developed by the Singapore government. These are particularly appealing to newly married couples, since many of the new Build-To-Order (BTO) projects in these areas are designed for budget-conscious young families. These households will tend to include more Economically Active individuals as well.\n\n\n\n\n\nExtremely high proportions of Economically Active residents (25 to 64)\n\nMuseum\nDowntown Core\nOrchard\n\nLow proportions of Young and Aged population\nMuseum and Seletar have no recorded Aged population\n\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\neconomically_active_data &lt;- pct_demography_age %&gt;%\n  filter(Age_Group == \"Economically_Active\") %&gt;%\n  arrange(desc(Pct_Age_Group))\n\nmean(economically_active_data$Pct_Age_Group)\n\n[1] 60.57619\n\nkable(head(economically_active_data, 10))\n\n\n\n\nPA\nAge_Group\nPct_Age_Group\n\n\n\n\nMuseum\nEconomically_Active\n96.2\n\n\nSeletar\nEconomically_Active\n85.7\n\n\nDowntown Core\nEconomically_Active\n80.3\n\n\nOrchard\nEconomically_Active\n73.6\n\n\nTengah\nEconomically_Active\n68.5\n\n\nSingapore River\nEconomically_Active\n63.3\n\n\nSungei Kadut\nEconomically_Active\n63.3\n\n\nSouthern Islands\nEconomically_Active\n62.0\n\n\nRiver Valley\nEconomically_Active\n60.7\n\n\nChoa Chu Kang\nEconomically_Active\n60.2\n\n\n\n\n\nThese patterns suggests that such areas are primarily dominated by working adults and may serve commercial or business purposes (Museum, Downtown Core, and Orchard), or military functions (Seletar and Tengah air bases).\n\n\n\n\n\nHighest concentration of Aged residents (65 and above)\n\nAng Mo Kio\nBukit Merah\nKallang\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\naged_data &lt;- pct_demography_age %&gt;%\n  filter(Age_Group == \"Aged\") %&gt;%\n  arrange(desc(Pct_Age_Group))\n\nmean(aged_data$Pct_Age_Group)\n\n[1] 16.27619\n\nkable(head(aged_data, 10))\n\n\n\n\nPA\nAge_Group\nPct_Age_Group\n\n\n\n\nOutram\nAged\n28.8\n\n\nAng Mo Kio\nAged\n25.3\n\n\nBukit Merah\nAged\n24.5\n\n\nRochor\nAged\n24.5\n\n\nJurong East\nAged\n23.8\n\n\nKallang\nAged\n23.5\n\n\nSerangoon\nAged\n22.9\n\n\nBedok\nAged\n22.7\n\n\nQueenstown\nAged\n22.2\n\n\nToa Payoh\nAged\n22.1\n\n\n\n\n\nThese are mainly mature estates with a higher proportion of elderly residents, many of whom have lived there since their younger years.\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\nCentral Districts (e.g., Museum, Downtown Core, Orchard):\n\nHave a high proportion of Economically Active residents, with relatively low concentration of Youth and Aged.\nThese are business or commercial hubs.\n\n\n\nMature Estates (e.g., Ang Mo Kio, Bukit Merah, Kallang):\n\nShow a more balanced demographic distribution, though with a noticeably Ageing population.\n\n\n\nNew Estates (e.g., Punggol, Sembawang, Sengkang):\n\nSkew heavily toward the Young and Economically Active, with fewer Aged residents.\nThis reflects their appeal to new families, likely due to the availability and price of new housing developments.\n\n\n\n\n\n\n\n1-1: 3.2.4 Reflections and Initial Workings\n\n\n\n\n\n\nReflections\n\n\n\nI initially considered using tabs to compare the graphs separately, but later realised that by restructuring the data, all three graphs could be combined into a single stacked bar chart. This thought led to creating the final plot presented above.\n\n\n\nFeature Engineering\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ndemography &lt;- sg_data %&gt;%\n  group_by(PA, Age_Group) %&gt;%\n  summarise(Pop = sum(Pop, na.rm = TRUE)) %&gt;%\n  pivot_wider(\n    names_from = Age_Group,\n    values_from = Pop,\n    values_fill = 0\n  ) %&gt;%\n  mutate(Total = Young + Economically_Active + Aged)\n\ndemography &lt;- demography %&gt;%\n  filter(Total &gt; 0)\n\npct_demography &lt;- demography %&gt;%\n  mutate(\n    Pct_Young = (Young / Total) * 100,\n    Pct_Economically_Active = (Economically_Active / Total) * 100,\n    Pct_Aged = (Aged / Total) * 100\n  ) %&gt;%\n  select(PA, Pct_Young, Pct_Economically_Active, Pct_Aged)\n\npct_demography &lt;- pct_demography %&gt;%\n  mutate(across(starts_with(\"pct\"), ~ round(.x, 1)))\n\n\n\n\n\n\nPlots and Reflections\n\nYoungEconomically ActiveAgedCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npct_demography$PA &lt;- factor(pct_demography$PA, levels = rev(sort(unique(pct_demography$PA))))\n\nggplot(data = pct_demography, \n       aes(x = PA, y = Pct_Young)) +\n  geom_bar(stat = \"identity\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(\n    x = \"Planing Area\",  # Set a custom x-axis title\n    y = \"Percentage\"   # Set a custom y-axis title\n  ) +\n  ggtitle(\"Percentage of Young across Planning Area\") +\n  scale_y_continuous(limits = c(0, 100))",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#age-distribution-by-sex",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#age-distribution-by-sex",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 3.3 Age Distribution by Sex",
    "text": "1-1: 3.3 Age Distribution by Sex\nSingapore, like many developed countries, is facing the issue of declining birth rates and an increasingly Aging Population. This visualization aims to provide insight into Singapore’s Population pyramid and Gender distribution.\n\n1-1: 3.3.1 Feature Engineering\nThe first part of the code aggregates the Population by Sex, and calculates the percentage of Males and Females by dividing it by the Total.\n\nThe next section prepares for adding labels to the pie chart. The label position (ypos) was calculated using cumulative percentages cumsum(Pct_Sex) - Pct_Sex / 2 since coord_polar(“y”) will be used to create the pie chart.\n\nThe next part of the code is for calculating the gender ratio. Violin plots are normalised to 1 by default so this ratio is needed to adjust the Male plot to be slightly smaller than the Female plot.\nIn the third part, the dataset was prepared to visualise Age distributions by Sex:\n\nThe dataset sg_data was grouped by Age and Sex, then summarised using sum(Pop) to get the population count for each Age-Sex group.\nThe resulting grouped data demography_sex_age was expanded into individual-level observations using uncount(weights = Pop).\n\nThis transformation duplicates each row according to the Pop count, effectively simulating individual records. This is a requirement for plotting accurate violin plots of distributions.\n\n\nThe code below performs the steps above and finally splits the demography_sex_age data into two subsets (Males and Females) to allow overlaying their respective violin plots for easier visual comparison.\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n# First Part\ntotal_by_sex &lt;- aggregate(Pop ~ Sex, data = sg_data, sum) %&gt;%\n    mutate(Total = sum(Pop))\n\npct_total_by_sex &lt;- total_by_sex %&gt;%\n  mutate(Pct_Sex = (Pop / Total) * 100) %&gt;%\n  select(Sex, Pct_Sex)\n\npct_total_by_sex &lt;- pct_total_by_sex %&gt;%\n  mutate(Sex = factor(Sex, levels = c(\"Males\", \"Females\"))) %&gt;%\n  arrange(desc(Sex)) %&gt;%\n  mutate(\n    ypos = cumsum(Pct_Sex) - Pct_Sex / 2,\n    label = paste0(round(Pct_Sex, 1), \"%\")\n  )\n\nkable(pct_total_by_sex)\n\n\n\n\nSex\nPct_Sex\nypos\nlabel\n\n\n\n\nFemales\n51.31834\n25.65917\n51.3%\n\n\nMales\n48.68166\n75.65917\n48.7%\n\n\n\n\n# Second Part\nmales_pct &lt;- pct_total_by_sex$Pct_Sex[pct_total_by_sex$Sex == \"Males\"]\nfemales_pct &lt;- pct_total_by_sex$Pct_Sex[pct_total_by_sex$Sex == \"Females\"]\n\nmale_female_ratio &lt;- males_pct / females_pct\n\nmale_female_ratio\n\n[1] 0.9486211\n\n# Third Part\ndemography_sex_age &lt;- sg_data %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop))\n\nkable(head(demography_sex_age, 10))\n\n\n\n\nAge\nSex\nPop\n\n\n\n\n0\nFemales\n14370\n\n\n0\nMales\n15090\n\n\n1\nFemales\n15580\n\n\n1\nMales\n16700\n\n\n2\nFemales\n17190\n\n\n2\nMales\n17980\n\n\n3\nFemales\n17340\n\n\n3\nMales\n18200\n\n\n4\nFemales\n19070\n\n\n4\nMales\n19880\n\n\n\n\ndemography_sex_age &lt;- demography_sex_age %&gt;% uncount(weights = Pop)\n\ndemography_males &lt;- demography_sex_age %&gt;%\n  filter(Sex == \"Males\")\n\ndemography_females &lt;- demography_sex_age %&gt;%\n  filter(Sex == \"Females\")\n\n\n\n\n\n\n1-1: 3.3.2 Methods and Explanation\nTo create an overlaid violin plot (p1) comparing Age distributions between Males and Females:\n\nA ggplot() object was initialised to serve as the base plot that the violin plots will be overlaid on.\ngeom_violin() was used twice, once for each Sex, with shared x-axis “All” to overlay both distributions.\nalpha = 0.5 was set to add transparency, allowing both violins to be visible when they overlap.\nscale = “area” ensures the violins are scaled proportionally to the size of their age groups and width = is used to scale the plots according to their population ratios.\nA custom fill colour was set for each sex using scale_fill_manual(), and breaks = c(“Males”, “Females”) ensures the legend appears with Males being first.\ntheme(axis.text.x = element_blank()) hides the x-axis label since both violins are plotted at a shared position “All”.\nlabs() was used to remove the x-axis text and label the y-axis.\nThe legend position was adjusted to the top to provide more space for pie chart (p2) to be inserted.\n\nThe pie chart (p2) is created similarly to the bar charts in the previous sections but with the following modifications:\n\nUsing coord_polar(“y”) to convert it into a pie chart by transforming the y-axis into a circular layout.\nData labels were added using geom_text().\nAxis titles, legend, tick marks, grid lines and plot background were removed using labs() and theme().\n\nLastly, the pie chart (p2) is overlaid over the violin plot (p2) using inset_element() to provide an easy overview of both plots.\n\n\n1-1: 3.3.3 Plots and Analysis\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\np1 &lt;- ggplot() +\n  geom_violin(data = demography_females, \n              aes(x = \"All\", y = Age, fill = \"Females\"), \n              scale = \"area\", alpha = 0.5, width = 1) +\n  geom_violin(data = demography_males, \n              aes(x = \"All\", y = Age, fill = \"Males\"), \n              scale = \"area\", alpha = 0.5, width = male_female_ratio) +\n  theme_minimal() +\n  labs(\n    x = NULL,\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    name = \"Sex\",\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\"),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  theme(\n    axis.text.x = element_blank(),\n    legend.position = \"top\"\n  ) +\n  scale_y_continuous(breaks = seq(0, 90, by = 10))\n\np2 &lt;- ggplot(pct_total_by_sex, aes(x = \"\", y = Pct_Sex, fill = Sex)) +\n  geom_bar(stat = \"identity\", color = \"black\", alpha = 0.5) +\n  coord_polar(\"y\") +\n  theme_test() +\n  labs(title = \"Population by Sex\") +\n  scale_fill_manual(\n    values = c(\"Males\" = \"#88CCEE\",\n               \"Females\" = \"#CC6677\")\n  ) +\n  labs(\n    x = NULL,\n    y = NULL\n  ) +\n  geom_text(aes(y = ypos, label = label), color = \"black\", size = 4) +\n  theme(\n    legend.position = \"none\",\n    panel.grid.major = element_blank(),\n    panel.grid.minor= element_blank(),\n    axis.text.x = element_blank(),\n    axis.ticks = element_blank(),\n    plot.background = element_rect(fill = \"transparent\", colour = NA)\n  )\n\np1 + inset_element(p2,\n                   left = 0.48,\n                   bottom = 0.76,\n                   right = 1.285,\n                   top = 1.2)\n\n\n\n\n\n\n\n\n\n\nInsights\n\n\n\n\nGender Ratio\n\nThe Female population is slightly higher than the Male population overall.\nThis aligns with Singapore’s national demographic pattern, where Females outnumber Males slightly due to longer life expectancy.\n\n\n\nPopulation Trends (Age 0 - 30)\n\nMales consistently outnumber Females slightly till age 30.\nPopulation rises gradual from birth to age 8.\nA plateau is observed from ages 9 to 20, followed by another increase towards 30.\n\n\n\nPopulation Trends (Age 30 - 60)\n\nThe segment holds the largest proportion of Singapore’s population.\nFemales outnumber Males except for a brief period between age 57-65.\n\n\n\nPopulation Trends (Age Above 60)\n\nA steady decline beings from age 60 onward.\nThe Male population decreases at a faster rate, leading to a widening gender gap with increasing age.\n\n\n\nPopulation Pyramid\n\nThe age distribution resembles that of an ageing population which is consistent with other developed countries.\n\n\n\n\n\n\n1-1: 3.3.4 Reflections and Initial Workings\n\n\n\n\n\n\nReflections\n\n\n\nI initially avoided expanding the data into individual-level observations using uncount(weights = Pop), since it is possible to pass weights = Pop in aes(). However, the resulting violin plot (below) looked weird. Therefore, I tried the uncount() method and found that these 2 methods produces very different plots. Upon further research, I found that while geom_violin() can estimate the probability density function (PDF) using the weights, density estimation with weights may be less precise or behave unexpectedly depending on implementation. Therefore, I chose to use uncount() in the final plot above, as working with raw, individual-level distributions seems to produce more accurate and visually realistic results.\n\n\nFeature Engineering\n\n\n\n\n\n\nCode\n\n\n\n\n\n\ndemography_sex_age_2 &lt;- sg_data %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop))\n\ndemography_sex_age_2\n\n# A tibble: 182 × 3\n# Groups:   Age [91]\n     Age Sex       Pop\n   &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1     0 Females 14370\n 2     0 Males   15090\n 3     1 Females 15580\n 4     1 Males   16700\n 5     2 Females 17190\n 6     2 Males   17980\n 7     3 Females 17340\n 8     3 Males   18200\n 9     4 Females 19070\n10     4 Males   19880\n# ℹ 172 more rows\n\n\n\n\n\nPlots and Reflections\n\nPlotCode\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nggplot(data=demography_sex_age_2, \n       aes(y = Age, \n           x= Sex,\n           weight = Pop,\n           fill = Sex)) +\n  geom_violin(scale = \"area\") +\n  theme_minimal() +\n  labs(\n    x = \"Sex\",\n    y = \"Age\",\n    title = \"Age Distribution by Sex\"\n  ) +\n  scale_fill_manual(\n    values = c(\n      \"Males\" = \"#88CCEE\",\n      \"Females\" = \"#CC6677\")\n    )",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#singapores-estate-classification",
    "href": "Take-home_Ex/Take-home_Ex01-1/Take-home_Ex01-1.html#singapores-estate-classification",
    "title": "Take-Home Exercise 1-1: Demographic Structures and Distribution of Singapore in 2024",
    "section": "1-1: 5.1 Singapore’s Estate Classification",
    "text": "1-1: 5.1 Singapore’s Estate Classification\n\n\n\n\n\nReference: https://www.hdb.gov.sg/-/media/doc/SCEG/20082023-Annexes/Annex-A1.ashx",
    "crumbs": [
      "Take-Home Exercises",
      "1-1: Demographic Structures and Distribution of Singapore in 2024 (Part 1)"
    ]
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "This exercise will target to answer one of the three challenges from VAST 2025 which features a fictitious island nation, Oceanus, famous for fishing and quiet seaside communities.\nThe chosen challenge is Mini-Challenge 1.\n\n\nOne of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence.\n\n\n\n\nDesign and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years.\n\n\n\n\n\nThe data for this exercise is from VAST 2025 MC1.\n\n\n\nGraph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart.\n\n\n\n\nUtility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\nmc1_data &lt;- fromJSON(\"data/MC1_graph.json\")\nglimpse(mc1_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n  ..$ node_default: Named list()\n  ..$ edge_default: Named list()\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n  ..$ Node Type     : chr [1:17412] \"Song\" \"Person\" \"Person\" \"Person\" ...\n  ..$ name          : chr [1:17412] \"Breaking These Chains\" \"Carlos Duffy\" \"Min Qin\" \"Xiuying Xie\" ...\n  ..$ single        : logi [1:17412] TRUE NA NA NA NA FALSE ...\n  ..$ release_date  : chr [1:17412] \"2017\" NA NA NA ...\n  ..$ genre         : chr [1:17412] \"Oceanus Folk\" NA NA NA ...\n  ..$ notable       : logi [1:17412] TRUE NA NA NA NA TRUE ...\n  ..$ id            : int [1:17412] 0 1 2 3 4 5 6 7 8 9 ...\n  ..$ written_date  : chr [1:17412] NA NA NA NA ...\n  ..$ stage_name    : chr [1:17412] NA NA NA NA ...\n  ..$ notoriety_date: chr [1:17412] NA NA NA NA ...\n $ links     :'data.frame': 37857 obs. of  4 variables:\n  ..$ Edge Type: chr [1:37857] \"InterpolatesFrom\" \"RecordedBy\" \"PerformerOf\" \"ComposerOf\" ...\n  ..$ source   : int [1:37857] 0 0 1 1 2 2 3 5 5 5 ...\n  ..$ target   : int [1:37857] 1841 4 0 16180 0 16180 0 5088 14332 11677 ...\n  ..$ key      : int [1:37857] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\n\n\n\n\n\nmc1_nodes_raw &lt;- as_tibble(mc1_data$nodes)\n\nglimpse(mc1_nodes_raw)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\nkable(head(mc1_nodes_raw, 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Type\nname\nsingle\nrelease_date\ngenre\nnotable\nid\nwritten_date\nstage_name\nnotoriety_date\n\n\n\n\nSong\nBreaking These Chains\nTRUE\n2017\nOceanus Folk\nTRUE\n0\nNA\nNA\nNA\n\n\nPerson\nCarlos Duffy\nNA\nNA\nNA\nNA\n1\nNA\nNA\nNA\n\n\nPerson\nMin Qin\nNA\nNA\nNA\nNA\n2\nNA\nNA\nNA\n\n\nPerson\nXiuying Xie\nNA\nNA\nNA\nNA\n3\nNA\nNA\nNA\n\n\nRecordLabel\nNautical Mile Records\nNA\nNA\nNA\nNA\n4\nNA\nNA\nNA\n\n\n\n\n\n\nmc1_edges_raw &lt;- as_tibble(mc1_data$links)\n\nglimpse(mc1_edges_raw)\n\nRows: 37,857\nColumns: 4\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ source      &lt;int&gt; 0, 0, 1, 1, 2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ target      &lt;int&gt; 1841, 4, 0, 16180, 0, 16180, 0, 5088, 14332, 11677, 2479, …\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\nkable(head(mc1_edges_raw, 10))\n\n\n\n\nEdge Type\nsource\ntarget\nkey\n\n\n\n\nInterpolatesFrom\n0\n1841\n0\n\n\nRecordedBy\n0\n4\n0\n\n\nPerformerOf\n1\n0\n0\n\n\nComposerOf\n1\n16180\n0\n\n\nPerformerOf\n2\n0\n0\n\n\nProducerOf\n2\n16180\n0\n\n\nPerformerOf\n3\n0\n0\n\n\nInterpolatesFrom\n5\n5088\n0\n\n\nInStyleOf\n5\n14332\n0\n\n\nInterpolatesFrom\n5\n11677\n0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#background",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#background",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "One of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#tasks-and-questions",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#tasks-and-questions",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Design and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#data-source",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#data-source",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "The data for this exercise is from VAST 2025 MC1."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#data-description",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#data-description",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Graph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#install-and-load-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#install-and-load-the-required-libraries",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Utility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#importing-data",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "For the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\nmc1_data &lt;- fromJSON(\"data/MC1_graph.json\")\nglimpse(mc1_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi TRUE\n $ graph     :List of 2\n  ..$ node_default: Named list()\n  ..$ edge_default: Named list()\n $ nodes     :'data.frame': 17412 obs. of  10 variables:\n  ..$ Node Type     : chr [1:17412] \"Song\" \"Person\" \"Person\" \"Person\" ...\n  ..$ name          : chr [1:17412] \"Breaking These Chains\" \"Carlos Duffy\" \"Min Qin\" \"Xiuying Xie\" ...\n  ..$ single        : logi [1:17412] TRUE NA NA NA NA FALSE ...\n  ..$ release_date  : chr [1:17412] \"2017\" NA NA NA ...\n  ..$ genre         : chr [1:17412] \"Oceanus Folk\" NA NA NA ...\n  ..$ notable       : logi [1:17412] TRUE NA NA NA NA TRUE ...\n  ..$ id            : int [1:17412] 0 1 2 3 4 5 6 7 8 9 ...\n  ..$ written_date  : chr [1:17412] NA NA NA NA ...\n  ..$ stage_name    : chr [1:17412] NA NA NA NA ...\n  ..$ notoriety_date: chr [1:17412] NA NA NA NA ...\n $ links     :'data.frame': 37857 obs. of  4 variables:\n  ..$ Edge Type: chr [1:37857] \"InterpolatesFrom\" \"RecordedBy\" \"PerformerOf\" \"ComposerOf\" ...\n  ..$ source   : int [1:37857] 0 0 1 1 2 2 3 5 5 5 ...\n  ..$ target   : int [1:37857] 1841 4 0 16180 0 16180 0 5088 14332 11677 ...\n  ..$ key      : int [1:37857] 0 0 0 0 0 0 0 0 0 0 ...\n\n\n\n\n\n\n\n\nmc1_nodes_raw &lt;- as_tibble(mc1_data$nodes)\n\nglimpse(mc1_nodes_raw)\n\nRows: 17,412\nColumns: 10\n$ `Node Type`    &lt;chr&gt; \"Song\", \"Person\", \"Person\", \"Person\", \"RecordLabel\", \"S…\n$ name           &lt;chr&gt; \"Breaking These Chains\", \"Carlos Duffy\", \"Min Qin\", \"Xi…\n$ single         &lt;lgl&gt; TRUE, NA, NA, NA, NA, FALSE, NA, NA, NA, NA, TRUE, NA, …\n$ release_date   &lt;chr&gt; \"2017\", NA, NA, NA, NA, \"2026\", NA, NA, NA, NA, \"2020\",…\n$ genre          &lt;chr&gt; \"Oceanus Folk\", NA, NA, NA, NA, \"Lo-Fi Electronica\", NA…\n$ notable        &lt;lgl&gt; TRUE, NA, NA, NA, NA, TRUE, NA, NA, NA, NA, TRUE, NA, N…\n$ id             &lt;int&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ written_date   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"2020\", NA, NA,…\n$ stage_name     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ notoriety_date &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\nkable(head(mc1_nodes_raw, 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNode Type\nname\nsingle\nrelease_date\ngenre\nnotable\nid\nwritten_date\nstage_name\nnotoriety_date\n\n\n\n\nSong\nBreaking These Chains\nTRUE\n2017\nOceanus Folk\nTRUE\n0\nNA\nNA\nNA\n\n\nPerson\nCarlos Duffy\nNA\nNA\nNA\nNA\n1\nNA\nNA\nNA\n\n\nPerson\nMin Qin\nNA\nNA\nNA\nNA\n2\nNA\nNA\nNA\n\n\nPerson\nXiuying Xie\nNA\nNA\nNA\nNA\n3\nNA\nNA\nNA\n\n\nRecordLabel\nNautical Mile Records\nNA\nNA\nNA\nNA\n4\nNA\nNA\nNA\n\n\n\n\n\n\nmc1_edges_raw &lt;- as_tibble(mc1_data$links)\n\nglimpse(mc1_edges_raw)\n\nRows: 37,857\nColumns: 4\n$ `Edge Type` &lt;chr&gt; \"InterpolatesFrom\", \"RecordedBy\", \"PerformerOf\", \"Composer…\n$ source      &lt;int&gt; 0, 0, 1, 1, 2, 2, 3, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5…\n$ target      &lt;int&gt; 1841, 4, 0, 16180, 0, 16180, 0, 5088, 14332, 11677, 2479, …\n$ key         &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\nkable(head(mc1_edges_raw, 10))\n\n\n\n\nEdge Type\nsource\ntarget\nkey\n\n\n\n\nInterpolatesFrom\n0\n1841\n0\n\n\nRecordedBy\n0\n4\n0\n\n\nPerformerOf\n1\n0\n0\n\n\nComposerOf\n1\n16180\n0\n\n\nPerformerOf\n2\n0\n0\n\n\nProducerOf\n2\n16180\n0\n\n\nPerformerOf\n3\n0\n0\n\n\nInterpolatesFrom\n5\n5088\n0\n\n\nInStyleOf\n5\n14332\n0\n\n\nInterpolatesFrom\n5\n11677\n0"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#creating-the-global-knowledge-graph",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#creating-the-global-knowledge-graph",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "Creating the global knowledge graph",
    "text": "Creating the global knowledge graph\ntbl_graph() is used to create tidygraph’s graph object by using the code chunk below\n\nmusic = tbl_graph(edges = mc1_edges_clean,\n                             nodes = mc1_nodes_clean,\n                             directed = TRUE)\n\n\nset.seed(1234)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#question-1a-who-has-she-been-most-influenced-by-over-time",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#question-1a-who-has-she-been-most-influenced-by-over-time",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "Question 1a Who has she been most influenced by over time?",
    "text": "Question 1a Who has she been most influenced by over time?\nHow do I find who is she influenced by?\n\n# Convert tbl_graph to igraph\nig &lt;- as.igraph(music)\n\n# Get index for 'Sailor Shift'\nsailor_idx &lt;- which(V(ig)$name == \"Sailor Shift\")\n\n# Get 2-degree ego neighbourhood\nneighbourhood_nodes &lt;- ego(ig, order = 2, nodes = sailor_idx, mode = \"out\")[[1]]\n\n# Step 2: Get 2-degree in-neighbours to those filtered out-neighbours\nin_to_out_neighbours &lt;- unique(unlist(\n  lapply(neighbourhood_nodes, function(n) {\n    ego(ig, order = 1, nodes = n, mode = \"in\")[[1]]\n  })\n))\n\n# Step 3: Combine all relevant nodes (Sailor Shift + out-neighbours + their 2-degree in-neighbours)\nall_nodes &lt;- unique(c(sailor_idx, neighbourhood_nodes, in_to_out_neighbours))\n\n# Induce subgraph and convert to tbl_graph\nsub_music &lt;- induced_subgraph(ig, vids = all_nodes) %&gt;% \n  as_tbl_graph()\n\n# Convert to igraph for path computation\nig_sub &lt;- as.igraph(sub_music)\n\n# Re-identify 'Sailor Shift' in the new graph\nsailor_idx_sub &lt;- which(V(ig_sub)$name == \"Sailor Shift\")\n\n# Compute shortest paths from Sailor Shift\nsp &lt;- shortest_paths(ig_sub, from = sailor_idx_sub, mode = \"out\", output = \"vpath\")$vpath\n\n# Count path dependencies (with safety for unreachable nodes)\nnode_names &lt;- V(ig_sub)$name\ndep_score &lt;- sapply(node_names, function(n) {\n  sum(sapply(sp, function(path) {\n    if (length(path) == 0) return(FALSE)\n    n %in% names(path)\n  }))\n})\n\n# Attach to tbl_graph\nsub_music &lt;- sub_music %&gt;%\n  mutate(sailor_dependency = dep_score)\n\n\ng &lt;- sub_music %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_fan(\n    aes(\n      colour = `Edge Type`,\n      start_cap = circle(1, 'mm'),\n      end_cap = circle(1, 'mm')\n      ),\n    arrow = arrow(length = unit(2, 'mm')),\n    alpha = 0.4\n    ) +\n  geom_point_interactive(\n    aes(\n      x = x,\n      y = y,\n      data_id = name,\n      tooltip = sprintf(\"%s&lt;br/&gt;(%s)\", name, released_year),\n      colour = genre,\n      size = sailor_dependency,\n      shape = `Node Type`\n      ),\n    show.legend = c(size = FALSE)\n    )+ \n  geom_node_text(\n    aes(\n      label = ifelse(`name` == \"Sailor Shift\", \"Sailor Shift\", NA)\n    ),\n    size = 4,\n    colour = 'red',\n    show.legend = FALSE\n    ) +\n  theme_graph() +\n  theme(legend.text = element_text(size = 6),\n        legend.title = element_text(size = 9)) +\n  scale_shape_discrete(name = \"Node Type\")\n\ngirafe(ggobj = g, width_svg = 10, height_svg = 9)\n\n\n\n\n\n\n# Extract node data\nnode_data &lt;- as_tibble(sub_music)\n\n# View top 5 nodes with highest sailor_dependency\nnode_data %&gt;%\n  arrange(desc(sailor_dependency)) %&gt;%\n  head(5) %&gt;%\n  select(`Node Type`, name, sailor_dependency) %&gt;%\n  kable()\n\n\n\n\nNode Type\nname\nsailor_dependency\n\n\n\n\nPerson\nSailor Shift\n112\n\n\nMusicalGroup\nThe Fiddle & The Fjord\n13\n\n\nMusicalGroup\nDrowned Harbor\n13\n\n\nMusicalGroup\nIvy Echos\n11\n\n\nMusicalGroup\nThe Saltwater Weavers\n10"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#b-who-has-she-collaborated-with-and-directly-or-indirectly-influenced",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#b-who-has-she-collaborated-with-and-directly-or-indirectly-influenced",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "1.b Who has she collaborated with and directly or indirectly influenced?",
    "text": "1.b Who has she collaborated with and directly or indirectly influenced?\n\nDirectly\nFind all immediate people and musical groups Sailor Shift directly influenced\n\n# Convert tbl_graph to igraph\nig &lt;- as.igraph(music)\n\n# Get index for 'Sailor Shift'\nsailor_idx &lt;- which(V(ig)$name == \"Sailor Shift\")\n\n# Get 1-degree in ego neighbourhood\nneighbourhood_nodes &lt;- ego(ig, order = 1, nodes = sailor_idx, mode = \"in\")[[1]]\n\n# Induce subgraph and convert to tbl_graph\nsub_music &lt;- induced_subgraph(ig, vids = neighbourhood_nodes) %&gt;% \n  as_tbl_graph()\n\n\ng &lt;- sub_music %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_fan(\n    aes(\n      colour = `Edge Type`,\n      start_cap = circle(2, 'mm'),\n      end_cap = circle(2, 'mm')\n      ),\n    arrow = arrow(length = unit(2, 'mm')),\n    alpha = 0.4\n    ) +\n  geom_point_interactive(\n    aes(\n      x = x,\n      y = y,\n      data_id = name,\n      tooltip = sprintf(\"%s&lt;br/&gt;(%s)\", name, released_year),\n      colour = genre,\n      shape = `Node Type`\n      ),\n    show.legend = c(size = FALSE)\n    )+ \n  geom_node_text(\n    aes(\n      label = ifelse(`name` == \"Sailor Shift\", \"Sailor Shift\", NA)\n    ),\n    size = 4,\n    colour = 'red',\n    show.legend = FALSE\n    ) +\n  theme_graph() +\n  theme(legend.text = element_text(size = 6),\n        legend.title = element_text(size = 9)) +\n  scale_shape_discrete(name = \"Node Type\")\n\ngirafe(ggobj = g, width_svg = 8, height_svg = 6)\n\n\n\n\n\n\n# Extract node data\nnode_data &lt;- as_tibble(sub_music)\n\nnode_data %&gt;%\n  filter(`Node Type` %in% c(\"Person\", \"MusicalGroup\")) %&gt;%\n  select(`Node Type`, name) %&gt;%\n  kable()\n\n\n\n\nNode Type\nname\n\n\n\n\nMusicalGroup\nCassette Future\n\n\nMusicalGroup\nSilver Veil\n\n\nMusicalGroup\nThe Phantom Operators\n\n\nMusicalGroup\nThe Hollow Monarchs\n\n\nPerson\nCassian Storm\n\n\nPerson\nClaire Holmes\n\n\nPerson\nSailor Shift\n\n\nMusicalGroup\nCopper Canyon Ghosts"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#indirect",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#indirect",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "1.2 Indirect",
    "text": "1.2 Indirect\nFind all the songs and albums that Sailor Shift produced, then get 2 degree in neighbours from the songs / albums to see who has been influenced by her songs or made songs influenced by her songs or have direct collaboration with her\n\n# Step 1: Get Sailor Shift's 1-degree out-neighbours\nsailor_idx &lt;- which(V(ig)$name == \"Sailor Shift\")\nout_edges &lt;- incident(ig, sailor_idx, mode = \"out\")\n\n# Filter edges by desired Edge Type\nvalid_edge_types &lt;- c(\"PerformerOf\", \"ComposerOf\", \"ProducerOf\", \"LyricistOf\", \"MemberOf\")\nvalid_edges &lt;- out_edges[E(ig)[out_edges]$`Edge Type` %in% valid_edge_types]\n\n# Get target nodes from valid edges\nout_neighbours &lt;- as.integer(ends(ig, valid_edges, names = FALSE)[, 2])  # target vertex of each edge\n\n# Filter to only songs or albums\nout_neighbours &lt;- out_neighbours[\n  V(ig)[out_neighbours]$`Node Type` %in% c(\"Song\", \"Album\")\n]\n\n# Step 2: Get 1-degree in-neighbours to those filtered out-neighbours\nin_to_out_neighbours &lt;- unique(unlist(\n  lapply(out_neighbours, function(n) {\n    ego(ig, order = 1, nodes = n, mode = \"in\")[[1]]\n  })\n))\n\n# Step 3: Combine all relevant nodes (Sailor Shift + out-neighbours + their 2-degree in-neighbours)\nall_nodes &lt;- unique(c(sailor_idx, out_neighbours, in_to_out_neighbours))\n\n# Step 4: Induce subgraph over combined nodes\nsubgraph &lt;- induced_subgraph(ig, vids = all_nodes)\nsub_music &lt;- as_tbl_graph(subgraph)\n\n# Convert to igraph for path computation\nig_sub &lt;- as.igraph(sub_music)\n\n# Re-identify 'Sailor Shift' in the new graph\nsailor_idx_sub &lt;- which(V(ig_sub)$name == \"Sailor Shift\")\n\n# Compute shortest paths from Sailor Shift (all directions in subgraph)\nsp &lt;- shortest_paths(ig_sub, from = sailor_idx_sub, mode = \"all\", output = \"vpath\")$vpath\n\n# Count path dependencies (including Sailor Shift)\nnode_names &lt;- V(ig_sub)$name\ndep_score &lt;- sapply(node_names, function(n) {\n  sum(sapply(sp, function(path) {\n    if (length(path) == 0) return(FALSE)\n    n %in% names(path)\n  }))\n})\n\n# Attach path dependency score to graph\nsub_music &lt;- sub_music %&gt;%\n  mutate(sailor_dependency = dep_score)\n\n\ng &lt;- sub_music %&gt;%\n  ggraph(layout = \"fr\") + \n  geom_edge_fan(\n    aes(\n      colour = `Edge Type`,\n      start_cap = circle(2, 'mm'),\n      end_cap = circle(2, 'mm')\n      ),\n    arrow = arrow(length = unit(2, 'mm')),\n    alpha = 0.4\n    ) +\n  geom_point_interactive(\n    aes(\n      x = x,\n      y = y,\n      data_id = name,\n      tooltip = sprintf(\"%s&lt;br/&gt;(%s)\", name, released_year),\n      colour = genre,\n      size = sailor_dependency,\n      shape = `Node Type`\n      ),\n    show.legend = c(size = FALSE)\n    )+ \n  geom_node_text(\n    aes(\n      label = ifelse(`name` == \"Sailor Shift\", \"Sailor Shift\", NA)\n    ),\n    size = 4,\n    colour = 'red',\n    show.legend = FALSE\n    ) +\n  theme_graph() +\n  theme(legend.text = element_text(size = 6),\n        legend.title = element_text(size = 9)) +\n  scale_shape_discrete(name = \"Node Type\")\n\ngirafe(ggobj = g, width_svg = 8, height_svg = 6)\n\n\n\n\n\n\n# Extract node data\nnode_data &lt;- as_tibble(sub_music)\n\nnode_data %&gt;%\n  filter(`Node Type` %in% c(\"Person\", \"MusicalGroup\")) %&gt;%\n  arrange(desc(sailor_dependency)) %&gt;%\n  select(`Node Type`, name) %&gt;%\n  kable()\n\n\n\n\nNode Type\nname\n\n\n\n\nPerson\nSailor Shift\n\n\nMusicalGroup\nIvy Echos\n\n\nPerson\nMichael Harris\n\n\nPerson\nZane Cruz\n\n\nPerson\nIris Moon\n\n\nMusicalGroup\nViolet Engines\n\n\nPerson\nSophie Bennett\n\n\nPerson\nKara Lee\n\n\nPerson\nEthan Clarke\n\n\nMusicalGroup\nTidal Reverie\n\n\nPerson\nOlivia Carter\n\n\nPerson\nLucas Bennett\n\n\nPerson\nMaya Torres\n\n\nMusicalGroup\nCrimson Carriage\n\n\nPerson\nArlo Sterling\n\n\nPerson\nLyra Blaze\n\n\nPerson\nOrion Cruz\n\n\nPerson\nElara May\n\n\nPerson\nCassian Rae\n\n\nMusicalGroup\nThe Brine Choir\n\n\nPerson\nZachary Cole\n\n\nPerson\nLia Grant\n\n\nMusicalGroup\nSelkies Hollow\n\n\nPerson\nRusty Riggins\n\n\nPerson\nFinn McGraw\n\n\nPerson\nWilliam Tidewell\n\n\nPerson\nEwan MacCrae\n\n\nPerson\nAstrid Nørgaard\n\n\nPerson\nFreya Lindholm\n\n\nPerson\nLiam OSullivan\n\n\nPerson\nFiona Mercer\n\n\nPerson\nKai Reynolds\n\n\nPerson\nAiden Harper\n\n\nPerson\nFinn Morgan\n\n\nPerson\nSkylar Brooks\n\n\nMusicalGroup\nThe Wave Riders\n\n\nPerson\nMia Waters\n\n\nPerson\nLila Rivers\n\n\nMusicalGroup\nSirens Call\n\n\nPerson\nMaya Jensen\n\n\nPerson\nLila “Lilly” Hartman\n\n\nPerson\nJade Thompson\n\n\nPerson\nSophie Ramirez\n\n\nPerson\nCoralia Bellweather\n\n\nPerson\nLevi Holloway\n\n\nPerson\nMarin Thorne\n\n\nPerson\nJonah Calloway\n\n\nPerson\nBeatrice Albright\n\n\nPerson\nDaniel OConnell"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#c-how-has-she-influenced-collaborators-of-the-broader-oceanus-folk-community",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc1_main.html#c-how-has-she-influenced-collaborators-of-the-broader-oceanus-folk-community",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "1.c How has she influenced collaborators of the broader Oceanus Folk community?",
    "text": "1.c How has she influenced collaborators of the broader Oceanus Folk community?\n\nSailor centric\n\n# Convert tbl_graph to igraph\nig &lt;- as.igraph(music)\n\n# Get index for 'Sailor Shift'\nsailor_idx &lt;- which(V(ig)$name == \"Sailor Shift\")\n\n# Get 1-degree ego from Sailor Shift (as integer indices)\nsailor_ego &lt;- ego(ig, order = 1, nodes = sailor_idx, mode = \"out\")[[1]]\n\nsailor_ego_idx &lt;- as.integer(sailor_ego)\n\n# Get indices for all Oceanus Folk nodes\noceanus_idx &lt;- which(V(ig)$genre == \"Oceanus Folk\")\n\n# Get 1-degree inward ego for each Oceanus Folk node\noceanus_ego_list &lt;- ego(ig, order = 1, nodes = oceanus_idx, mode = \"in\")\n\n# Flatten and convert to integer indices\noceanus_ego_idx &lt;- unique(unlist(lapply(oceanus_ego_list, as.integer)))\n\n# Combine both sets of indices\ncombined_indices &lt;- unique(c(sailor_ego_idx, oceanus_ego_idx))\n\n# Induce subgraph from combined set\nsub_music &lt;- induced_subgraph(ig, vids = combined_indices) %&gt;%\n  as_tbl_graph()\n\n# Convert to igraph for path computation\nig_sub &lt;- as.igraph(sub_music)\n\n# Re-identify Sailor Shift index in subgraph\nsailor_idx_sub &lt;- which(V(ig_sub)$name == \"Sailor Shift\")\n\n# Compute shortest paths *to* Sailor Shift (mode = \"in\")\nsp &lt;- shortest_paths(ig_sub, from = sailor_idx_sub, mode = \"in\", output = \"vpath\")$vpath\n\n# Count path dependencies\nnode_names &lt;- V(ig_sub)$name\ndep_score &lt;- sapply(node_names, function(n) {\n  sum(sapply(sp, function(path) {\n    if (length(path) == 0) return(FALSE)\n    n %in% names(path)\n  }))\n})\n\n# Add sailor_dependency to tbl_graph\nsub_music &lt;- sub_music %&gt;%\n  mutate(sailor_dependency = dep_score)\n\n\ng &lt;- sub_music %&gt;%\n  ggraph(layout = \"nicely\") + \n  geom_edge_fan(\n    aes(\n      colour = `Edge Type`,\n      start_cap = circle(1, 'mm'),\n      end_cap = circle(1, 'mm')\n      ),\n    arrow = arrow(length = unit(2, 'mm')),\n    alpha = 0.4\n    ) +\n  geom_point_interactive(\n    aes(\n      x = x,\n      y = y,\n      data_id = name,\n      tooltip = sprintf(\"%s&lt;br/&gt;(%s)\", name, released_year),\n      colour = genre,\n      size = sailor_dependency,\n      shape = `Node Type`\n      ),\n    show.legend = c(size = FALSE)\n    )+ \n  geom_node_text(\n    aes(\n      label = ifelse(`name` == \"Sailor Shift\", \"Sailor Shift\", NA)\n    ),\n    size = 4,\n    colour = 'red',\n    show.legend = FALSE\n    ) +\n  theme_graph() +\n  theme(legend.text = element_text(size = 6),\n        legend.title = element_text(size = 9)) +\n  scale_shape_discrete(name = \"Node Type\")\n\ngirafe(ggobj = g, width_svg = 11, height_svg = 8)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "This exercise will target to answer one of the three challenges from VAST 2025 which features a fictitious island nation, Oceanus, famous for fishing and quiet seaside communities.\nThe chosen challenge is Mini-Challenge 1.\n\n\nOne of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence.\n\n\n\n\nDesign and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years.\n\n\n\n\n\nThe data for this exercise is from VAST 2025 MC1.\n\n\n\nGraph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart.\n\n\n\n\nUtility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)\n\n\n\n\n\n\n\n\nFor the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse).\n\n\n\n\n\nShow code\nmc3_data &lt;- fromJSON(\"data/MC3_graph.json\")\nglimpse(mc3_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#background",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#background",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "One of music’s biggest superstars is Oceanus native Sailor Shift. From humble beginnings, Sailor has grown in popularity and now enjoys fans around the world. Sailor started her career on the island nation of Oceanus which can be clearly seen in her early work, she started in the genre of “Oceanus Folk”. While Sailor has moved away from the traditional Oceanus style, the Oceanus Folk has made a name for itself in the musical world. The popularity of this music is one of the factors driving an increase in tourism to a quiet island nation that used to be known for fishing.\nIn 2023, Sailor Shift joined the Ivy Echoes – an all-female Oceanus Folk band consisting of Sailor (vocalist), Maya Jensen (vocalist), Lila “Lilly” Hartman (guitarist), Jade Thompson (drummer), and Sophie Ramirez (bassist). They played together at venues throughout Oceanus but had broken up to pursue their individual careers by 2026. Sailor’s breakthrough came in 2028 when one of her singles went viral, launched to the top of the global charts (something no other Oceanus Folk song had ever done). Since then, she has only continued to grow in popularity worldwide.\nSailor has released a new album almost every year since her big break, and each has done better than the last. Although she has remained primarily a solo artist, she has also frequently collaborated with other established artists, especially in the Indie Pop and Indie Folk genres. She herself has branched out musically over the years but regularly returns to the Oceanus Folk genre — even as the genre’s influence on the rest of the music world has spread even more.\nSailor has always been passionate about two things: (1) spreading Oceanus Folk, and (2) helping lesser-known artists break into music. Because of those goals, she’s particularly famous for her frequent collaborations.\nAdditionally, because of Sailor’s success, more attention began to be paid over the years to her previous bandmates. All 4 have continued in the music industry—Maya as an independent vocalist, Lilly and Jade as instrumentalists in other bands, and Sophie as a music producer for a major record label. In various ways, all of them have contributed to the increased influence of Oceanus folk, resulting in a new generation of up-and-coming Oceanus Folk artists seeking to make a name for themselves in the music industry.\nNow, as Sailor returns to Oceanus in 2040, a local journalist – Silas Reed – is writing a piece titled Oceanus Folk: Then-and-Now that aims to trace the rise of Sailor and the influence of Oceanus Folk on the rest of the music world. He has collected a large dataset of musical artists, producers, albums, songs, and influences and organized it into a knowledge graph. Your task is to help Silas create beautiful and informative visualizations of this data and uncover new and interesting information about Sailor’s past, her rise to stardom, and her influence."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#tasks-and-questions",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#tasks-and-questions",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Design and develop visualizations and visual analytic tools that will allow Silas to explore and understand the profile of Sailor Shift’s career\n\nWho has she been most influenced by over time?\nWho has she collaborated with and directly or indirectly influenced?\nHow has she influenced collaborators of the broader Oceanus Folk community?\n\nDevelop visualizations that illustrate how the influence of Oceanus Folk has spread through the musical world.\n\nWas this influence intermittent or did it have a gradual rise?\nWhat genres and top artists have been most influenced by Oceanus Folk?\nOn the converse, how has Oceanus Folk changed with the rise of Sailor Shift? From which genres does it draw most of its contemporary inspiration?\n\nUse your visualizations to develop a profile of what it means to be a rising star in the music industry.\n\nVisualize the careers of three artists. Compare and contrast their rise in popularity and influence.\nUsing this characterization, give three predictions of who the next Oceanus Folk stars with be over the next five years."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#data-source",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#data-source",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "The data for this exercise is from VAST 2025 MC1."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#data-description",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#data-description",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Graph Description - Directed Multigraph - # nodes: 17,412 - # edges: 37, 857 - 18 connected components - Possible node types are: {Person, Song, RecordLabel, Album, MusicalGroup} - Possible edge types are: {MemberOf, PerformerOf, ComposerOf, ProducerOf, LyricistOf, InStyleOf, InterpolatesFrom, CoverOf, LyricalReferenceTo, DirectlySamples, RecordedBy, DistributedBy} - The graph format is a JSON file. The root-level JSON object consists of graph-level properties specifying that it is directed and a multigraph, a “nodes” key which holds the list of nodes, and a “links” key which holds the list of edges.\nThe data for this challenge comes from two different sources:\n\nan online, crowdsourced repository of musical influence, where contributors have manually notated instances in which songs or albums have sampled, covered, or otherwise drawn inspiration from previous work.\naggregate-level descriptions of song popularity, as labeled by our journalist, Silas Reed. These notations (notable and notoriety_date) are directly based on both the number of sales and streams that the song/album has achieved as well as the whether or not the work landed on a top record chart."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#install-and-load-the-required-libraries",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#install-and-load-the-required-libraries",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Utility Tools\n\njsonlite: To parse JSON\ntidyverse - Data science tools\nggtext - Tools for text formatting\nknitr - For better table displays\nlubridate - For processing date and time\n\nGraphing Tools\n\npatchwork - For combining ggplot plots\nggraph - For plotting network data\ntidygraph - For graph manipulations\nigraph - Contains functions for network analysis\nggiraph - Interactive plots\n\n\n\n\n\n\n\nCode\n\n\n\n\n\n\n\nShow code\npacman::p_load(jsonlite, tidyverse, ggtext,\n                knitr, lubridate, patchwork,\n                ggraph, tidygraph, igraph,\n                ggiraph)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#importing-data",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "For the purpose of this exercise, a data file called MC1_graph will be used. The code chunk below imports respopagesex2024.csv into R environment by using read_csv() function of readr package (under tidyverse)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#code-1",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02_mc3_test.html#code-1",
    "title": "Take-Home Exercise 2: VAST Mini-Challenge 1 2025 (Sailor Shift and Oceanus Folk)",
    "section": "",
    "text": "Show code\nmc3_data &lt;- fromJSON(\"data/MC3_graph.json\")\nglimpse(mc3_data)\n\n\nList of 5\n $ directed  : logi TRUE\n $ multigraph: logi FALSE\n $ graph     :List of 4\n  ..$ mode        : chr \"static\"\n  ..$ edge_default: Named list()\n  ..$ node_default: Named list()\n  ..$ name        : chr \"VAST_MC3_Knowledge_Graph\"\n $ nodes     :'data.frame': 1159 obs. of  31 variables:\n  ..$ type             : chr [1:1159] \"Entity\" \"Entity\" \"Entity\" \"Entity\" ...\n  ..$ label            : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ name             : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ sub_type         : chr [1:1159] \"Person\" \"Person\" \"Person\" \"Person\" ...\n  ..$ id               : chr [1:1159] \"Sam\" \"Kelly\" \"Nadia Conti\" \"Elise\" ...\n  ..$ timestamp        : chr [1:1159] NA NA NA NA ...\n  ..$ monitoring_type  : chr [1:1159] NA NA NA NA ...\n  ..$ findings         : chr [1:1159] NA NA NA NA ...\n  ..$ content          : chr [1:1159] NA NA NA NA ...\n  ..$ assessment_type  : chr [1:1159] NA NA NA NA ...\n  ..$ results          : chr [1:1159] NA NA NA NA ...\n  ..$ movement_type    : chr [1:1159] NA NA NA NA ...\n  ..$ destination      : chr [1:1159] NA NA NA NA ...\n  ..$ enforcement_type : chr [1:1159] NA NA NA NA ...\n  ..$ outcome          : chr [1:1159] NA NA NA NA ...\n  ..$ activity_type    : chr [1:1159] NA NA NA NA ...\n  ..$ participants     : int [1:1159] NA NA NA NA NA NA NA NA NA NA ...\n  ..$ thing_collected  :'data.frame':   1159 obs. of  2 variables:\n  .. ..$ type: chr [1:1159] NA NA NA NA ...\n  .. ..$ name: chr [1:1159] NA NA NA NA ...\n  ..$ reference        : chr [1:1159] NA NA NA NA ...\n  ..$ date             : chr [1:1159] NA NA NA NA ...\n  ..$ time             : chr [1:1159] NA NA NA NA ...\n  ..$ friendship_type  : chr [1:1159] NA NA NA NA ...\n  ..$ permission_type  : chr [1:1159] NA NA NA NA ...\n  ..$ start_date       : chr [1:1159] NA NA NA NA ...\n  ..$ end_date         : chr [1:1159] NA NA NA NA ...\n  ..$ report_type      : chr [1:1159] NA NA NA NA ...\n  ..$ submission_date  : chr [1:1159] NA NA NA NA ...\n  ..$ jurisdiction_type: chr [1:1159] NA NA NA NA ...\n  ..$ authority_level  : chr [1:1159] NA NA NA NA ...\n  ..$ coordination_type: chr [1:1159] NA NA NA NA ...\n  ..$ operational_role : chr [1:1159] NA NA NA NA ...\n $ edges     :'data.frame': 3226 obs. of  5 variables:\n  ..$ id         : chr [1:3226] \"2\" \"3\" \"5\" \"3013\" ...\n  ..$ is_inferred: logi [1:3226] TRUE FALSE TRUE TRUE TRUE TRUE ...\n  ..$ source     : chr [1:3226] \"Sam\" \"Sam\" \"Sam\" \"Sam\" ...\n  ..$ target     : chr [1:3226] \"Relationship_Suspicious_217\" \"Event_Communication_370\" \"Event_Assessment_600\" \"Relationship_Colleagues_430\" ...\n  ..$ type       : chr [1:3226] NA \"sent\" NA NA ..."
  }
]